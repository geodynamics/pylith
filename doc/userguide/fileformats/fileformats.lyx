#LyX 1.4.3 created this file. For more info see http://www.lyx.org/
\lyxformat 245
\begin_document
\begin_header
\textclass book
\begin_preamble

\end_preamble
\language english
\inputencoding latin1
\fontscheme default
\graphics default
\paperfontsize default
\spacing single
\papersize default
\use_geometry true
\use_amsmath 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\leftmargin 1in
\topmargin 1in
\rightmargin 1in
\bottommargin 2in
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 2
\paperpagestyle default
\tracking_changes false
\output_changes false
\end_header

\begin_body

\begin_layout Chapter
\begin_inset LatexCommand \label{cha:File-Formats}

\end_inset

File Formats
\end_layout

\begin_layout Section
\begin_inset LatexCommand \label{sec:MeshIOAscii}

\end_inset

PyLith Mesh ASCII Files
\end_layout

\begin_layout Standard
PyLith mesh ASCII files allow quick specification of the mesh information
 for very small, simple meshes that are most easily written by hand.
 We do not recommend using this format for anything other than these very
 small, simple meshes.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Standard
\noindent
\align center
\begin_inset Graphics
	filename figs/meshquad4.eps

\end_inset


\end_layout

\begin_layout Caption
Diagram of mesh specified in Figure 
\begin_inset LatexCommand \ref{fig:meshioascii:format}

\end_inset

.
\begin_inset LatexCommand \label{fig:meshioascii:diagram}

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout LyX-Code
// This mesh file defines a finite-element mesh composed of two
\end_layout

\begin_layout LyX-Code
// square cells of edge length 2.
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code
// Comments can appear almost anywhere in these files and are
\end_layout

\begin_layout LyX-Code
// delimited with two slashes (//) just like in C++.
 All text and 
\end_layout

\begin_layout LyX-Code
// whitespace after the delimiter on a given line is ignored.
\end_layout

\begin_layout LyX-Code
mesh = { // begin specification of the mesh
\end_layout

\begin_layout LyX-Code
  dimension = 2 // spatial dimension of the mesh
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code
  // Begin vertex and cell labels with 0.
 This is the default so 
\end_layout

\begin_layout LyX-Code
  // this next line is optional
\end_layout

\begin_layout LyX-Code
  use-index-zero = true
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code
  vertices = { // vertices or nodes of the finite-element cells
\end_layout

\begin_layout LyX-Code
    dimension = 2 // spatial dimension of the vertex coordinates
\end_layout

\begin_layout LyX-Code
    count = 6 // number of vertices in the mesh
\end_layout

\begin_layout LyX-Code
    coordinates = { // list of vertex index and coordinates
\end_layout

\begin_layout LyX-Code
      // the coordinates must coincide with the coordinate 
\end_layout

\begin_layout LyX-Code
      // system specified in the Mesh object
\end_layout

\begin_layout LyX-Code
 
\end_layout

\begin_layout LyX-Code
      // exactly one vertex must appear on each line
\end_layout

\begin_layout LyX-Code
      // (excluding whitespace)
\end_layout

\begin_layout LyX-Code
      0    -2.0  -1.0
\end_layout

\begin_layout LyX-Code
      1    -2.0  +1.0
\end_layout

\begin_layout LyX-Code
      2     0.0  -1.0
\end_layout

\begin_layout LyX-Code
      3     0.0  +1.0
\end_layout

\begin_layout LyX-Code
      4    +2.0  -1.0
\end_layout

\begin_layout LyX-Code
      5    +2.0  +1.0
\end_layout

\begin_layout LyX-Code
    } // end of coordinates list
\end_layout

\begin_layout LyX-Code
  } // end of vertices
\end_layout

\begin_layout LyX-Code
 
\end_layout

\begin_layout LyX-Code
  cells = { // finite-element cells
\end_layout

\begin_layout LyX-Code
    count = 2 // number of cells in the mesh
\end_layout

\begin_layout LyX-Code
    num-corners = 4 // number of vertices defining the cell
\end_layout

\begin_layout LyX-Code
    simplices = { // list of vertices in each cell
\end_layout

\begin_layout LyX-Code
      // see Section 4.2 for diagrams giving the order for each 
\end_layout

\begin_layout LyX-Code
      // type of cell supported in PyLith
\end_layout

\begin_layout LyX-Code
 
\end_layout

\begin_layout LyX-Code
      // index of cell precedes the list of vertices for the cell 
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code
      // exactly one cell must appear on each line
\end_layout

\begin_layout LyX-Code
      // (excluding whitespace)
\end_layout

\begin_layout LyX-Code
      0    0  2  3  1
\end_layout

\begin_layout LyX-Code
      1    4  5  3  2
\end_layout

\begin_layout LyX-Code
    } // end of simplices list
\end_layout

\begin_layout LyX-Code
 
\end_layout

\begin_layout LyX-Code
    material-ids = { // associated each cell with a material model
\end_layout

\begin_layout LyX-Code
      // the material id is specified using the index of the cell 
\end_layout

\begin_layout LyX-Code
      // and then the corresponding material id
\end_layout

\begin_layout LyX-Code
      0   0 // cell 0 has a material id of 0
\end_layout

\begin_layout LyX-Code
      1   2 // cell 1 has a material id of 2
\end_layout

\begin_layout LyX-Code
    } // end of material-ids list
\end_layout

\begin_layout LyX-Code
  } // end of cells
\end_layout

\begin_layout LyX-Code
 
\end_layout

\begin_layout LyX-Code
  // This next section lists groups of vertices that can be used
\end_layout

\begin_layout LyX-Code
  // in applying boundary conditions to portions of the domain
\end_layout

\begin_layout LyX-Code
  group = { // start of a group
\end_layout

\begin_layout LyX-Code
    // the name can have whitespace, so no comments are allowed
\end_layout

\begin_layout LyX-Code
    // after the name
\end_layout

\begin_layout LyX-Code
    name = face +y
\end_layout

\begin_layout LyX-Code
 
\end_layout

\begin_layout LyX-Code
    // Either groups of vertices or groups of cells can be     
\end_layout

\begin_layout LyX-Code
    // specified, but currently PyLith only makes use of groups 
\end_layout

\begin_layout LyX-Code
    // of vertices
\end_layout

\begin_layout LyX-Code
    type = vertices // 'vertices' or 'cells'
\end_layout

\begin_layout LyX-Code
    count = 2 // number of vertices in the group
\end_layout

\begin_layout LyX-Code
    indices = { // list of vertex indices in the group
\end_layout

\begin_layout LyX-Code
      // multiple vertices may appear on a line
\end_layout

\begin_layout LyX-Code
      0  4 // this group contains vertices 0 and 4
\end_layout

\begin_layout LyX-Code
    } // end of list of vertices
\end_layout

\begin_layout LyX-Code
  } // end of group
\end_layout

\begin_layout LyX-Code
  // additional groups can be listed here
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Caption
Format of 
\family typewriter
PyLith
\family default
 mesh ASCII files.
\begin_inset LatexCommand \label{fig:meshioascii:format}

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
\begin_inset LatexCommand \label{sec:Spatialdata:SimpleIOAscii}

\end_inset

Spatial Database Files
\end_layout

\begin_layout Standard
Spatial database files provide specification of a field over some set of
 points.
 There is no topology associated with the points.
 Spatial database files contain a header describing the set of points and
 then the data with each line listing the coordinates of a point followed
 by the values of the fields for that point.
 Although multiple values can be specified at each point with more than
 one value included in a search query, the interpolation of each value will
 be done indepedently.
 Time dependent variations of a field are not supported in these files.
 Alternative implementations of spatial databases using the same application
 programming interface (API) can provide other representations of spatial
 variations of parameters for material properties (for example, the USGS
 Bay Area Velocity Model), boundary conditions, and earthquake source parameters.
\end_layout

\begin_layout Standard
Spatial database files can specifiy spatial variations over zero, one, two,
 and three dimensions.
 Zero dimensional variations correspond to uniform values.
 One-dimensional spatial variations correspond to piecewise linear variations,
 which need not coincide with coordinate axes.
 Likewise, two-dimensional spatial variations correspond to variations on
 a planar surface (which need not coincide with the coordinate axes) and
 three-dimensional spatial variations correspond to variations over a volume.
 In one, two, or three dimensions, queries can use a 
\begin_inset Quotes eld
\end_inset

nearest value
\begin_inset Quotes erd
\end_inset

 search or linear interpolation.
\end_layout

\begin_layout Standard
The spatial database files need not provide the data using the same coordinate
 system as the mesh coordinate system, provided the two coordinate systems
 are compatible.
 Examples of compatible coordinate systems include geographic coordinates
 (longitude/latitude/elevation), and projected coordiates (e.g., coordinates
 in a transverse Mercator projection).
 Spatial database queries use the 
\begin_inset LatexCommand \htmlurl[Proj.4 Cartographic Projections library]{http://proj.maptools.org}

\end_inset

 to convert between coordinate systems, so a large number of geographic
 projections are available with support for converting between NAD27 and
 WGS84 horizontal datums as well as several other frequently used datums.
 Because the interpolation is done in the coordinate system of the spatial
 database, geographic coordinates should only be used for very simple datasets,
 or undesirable results will occur.
 This is especially true when the spatial database coordinate system combines
 latitude, longitude, and elevation in meters (longitude and latitude in
 degrees are often much smaller than elevations in meters leading to distorted
 
\begin_inset Quotes eld
\end_inset

distance
\begin_inset Quotes erd
\end_inset

 between locations and interpolation).
\end_layout

\begin_layout LyX-Code
// This spatial database specifies the distribution of slip on the
\end_layout

\begin_layout LyX-Code
// fault surface.
 In this case we prescribe a piecewise linear, 
\end_layout

\begin_layout LyX-Code
// depth dependent distribution of slip.
 The slip is 2.0 m 
\end_layout

\begin_layout LyX-Code
// right-lateral with 0.25 m of reverse slip at the surface with
\end_layout

\begin_layout LyX-Code
// a linear taper from 2.0 m to 0.0 m from -2 km to -4 km.
\end_layout

\begin_layout LyX-Code
 
\end_layout

\begin_layout LyX-Code
// Comments can appear almost anywhere in these files and are
\end_layout

\begin_layout LyX-Code
// delimited with two slashes (//) just like in C++.
 All text and 
\end_layout

\begin_layout LyX-Code
// whitespace after the delimiter on a given line is ignored.
\end_layout

\begin_layout LyX-Code
 
\end_layout

\begin_layout LyX-Code
// The next line is the magic header for spatial database files 
\end_layout

\begin_layout LyX-Code
// in ASCII format.
\end_layout

\begin_layout LyX-Code
#SPATIAL.ascii 1
\end_layout

\begin_layout LyX-Code
SimpleDB { // start specifying the database parameters
\end_layout

\begin_layout LyX-Code
  num-values = 3 // number of values in the databasae
\end_layout

\begin_layout LyX-Code
 
\end_layout

\begin_layout LyX-Code
  // Specify the names and the order of the values as they appear 
\end_layout

\begin_layout LyX-Code
  // in the data.
 The names of the values must correspond to the 
\end_layout

\begin_layout LyX-Code
  // names PyLith requests in querying the database.
\end_layout

\begin_layout LyX-Code
  value-names =  left-lateral-slip  reverse-slip  fault-opening
\end_layout

\begin_layout LyX-Code
 
\end_layout

\begin_layout LyX-Code
  // Specify the units of the values.
 Currently, these are read 
\end_layout

\begin_layout LyX-Code
  // and stored but not parsed for meaning.
 Unit conversions will
\end_layout

\begin_layout LyX-Code
  // likely be implemented in a future PyLith release.
\end_layout

\begin_layout LyX-Code
  value-units =  m  m  m
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code
  num-locs = 3 // Number of locations where values are given
\end_layout

\begin_layout LyX-Code
  data-dim = 1 // Locations of data points form a line
\end_layout

\begin_layout LyX-Code
  space-dim = 3 // Spatial dimension in which data resides
\end_layout

\begin_layout LyX-Code
 
\end_layout

\begin_layout LyX-Code
  // Specify the coordinate system associated with the 
\end_layout

\begin_layout LyX-Code
  // coordinates of the locations where data is given
\end_layout

\begin_layout LyX-Code
  cs-data = cartesian { // Use a Cartesian coordinate system
\end_layout

\begin_layout LyX-Code
    to-meters = 1.0e+3 // Coordinates are in km
\end_layout

\begin_layout LyX-Code
 
\end_layout

\begin_layout LyX-Code
    // Specify the spatial dimension of the coordinate system
\end_layout

\begin_layout LyX-Code
    // This value must match the one associated with the database
\end_layout

\begin_layout LyX-Code
    space-dim = 3
\end_layout

\begin_layout LyX-Code
  } // cs-data // end of coordinate system specifcation
\end_layout

\begin_layout LyX-Code
} // end of SimpleDB specification
\end_layout

\begin_layout LyX-Code
 
\end_layout

\begin_layout LyX-Code
// The locations and values are listed after the parameters.
\end_layout

\begin_layout LyX-Code
// Columns are coordinates of the points (1 column for each 
\end_layout

\begin_layout LyX-Code
// spatial dimension) followed by the data values in the order 
\end_layout

\begin_layout LyX-Code
// specified by the value-names field.
\end_layout

\begin_layout LyX-Code
0.0  0.0  0.0    -2.00  0.25  0.00
\end_layout

\begin_layout LyX-Code
0.0  0.0 -2.0    -2.00  0.00  0.00
\end_layout

\begin_layout LyX-Code
0.0  0.0 -4.0     0.00  0.00  0.00
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Caption
Format of spatial database files.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Spatial Database Coordinate Systems
\end_layout

\begin_layout Standard
The spatial database files support four different types of coordinate systems.
 Conversions among the three geographic coordinate systems are supported
 in 3-D.
 Conversions among the geographic and geographic projected coordinate systems
 are supported in 2-D.
 In using the coordinate systems, we assume that you have installed the
 
\family typewriter
proj
\family default
 program in addition to the Proj.4 libraries, so that you can obtain a list
 of support projections, datums, and ellipsoids.
 Alternatively, refer to the documentation for the 
\begin_inset LatexCommand \htmlurl[Proj.4 Cartographic Projections library]{http://proj.maptools.org}

\end_inset

.
\end_layout

\begin_layout Subsubsection
Cartesian
\end_layout

\begin_layout Standard
This is a conventional Cartesian coordinate system.
 Conversions to other Cartesian coordinate systems are possible, 
\end_layout

\begin_layout LyX-Code
cs-data = cartesian {
\end_layout

\begin_layout LyX-Code
  to-meters = 1.0e+3 // Locations in km
\end_layout

\begin_layout LyX-Code
  space-dim = 2 // 1, 2, or 3 dimensions
\end_layout

\begin_layout LyX-Code
}
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Caption
Format for Cartesian coordinate systems in spatial database files.
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Geographic
\end_layout

\begin_layout Standard
This coordinate system is for geographic coordinates, such as longtitude
 and latitude.
 Specification of the location in three-dimensions is supported.
 The vertical datum can be either the reference ellipsoid or mean sea level.
 The vertical coordinate is positive upwards.
\end_layout

\begin_layout LyX-Code
cs-data = geographic {
\end_layout

\begin_layout LyX-Code
  // Conversion factor to get to meters (only applies to vertical 
\end_layout

\begin_layout LyX-Code
  // coordinate unless you are using a geocentric coordinate system).
\end_layout

\begin_layout LyX-Code
  to-meters = 1.0e+3
\end_layout

\begin_layout LyX-Code
  space-dim = 2 // 2 or 3 dimensions
\end_layout

\begin_layout LyX-Code
 
\end_layout

\begin_layout LyX-Code
  // Run 
\begin_inset Quotes eld
\end_inset

proj -le
\begin_inset Quotes erd
\end_inset

 to see a list of available reference ellipsoids.
\end_layout

\begin_layout LyX-Code
  // Comments are not allowed at the end of the next line.
\end_layout

\begin_layout LyX-Code
  ellipspod = WGS84
\end_layout

\begin_layout LyX-Code
 
\end_layout

\begin_layout LyX-Code
  // Run 
\begin_inset Quotes eld
\end_inset

proj -ld
\begin_inset Quotes erd
\end_inset

 to see a list of available datums.
\end_layout

\begin_layout LyX-Code
  // Comments are not allowed at the end of the next line.
\end_layout

\begin_layout LyX-Code
  datum-horiz = WGS84
\end_layout

\begin_layout LyX-Code
 
\end_layout

\begin_layout LyX-Code
  // 
\begin_inset Quotes eld
\end_inset

ellipsoid
\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

mean sea level
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout LyX-Code
  // Comments are not allowed at the end of the next line.
\end_layout

\begin_layout LyX-Code
  datum-vert = ellipsoid
\end_layout

\begin_layout LyX-Code
 
\end_layout

\begin_layout LyX-Code
  // Use a geocentric coordinate system?
\end_layout

\begin_layout LyX-Code
  is-geocentric = false // true or false
\end_layout

\begin_layout LyX-Code
}
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Caption
Format for geographic coordinate systems in spatial database files.
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Geographic Projection
\end_layout

\begin_layout Standard
This coordinate system applies to geographic projections.
 As in the geographic coordinate system, the vertical coordinate (if used)
 can be specified with respect to either the reference ellipsoid or mean
 sea level.
\end_layout

\begin_layout LyX-Code
cs-data = geo-projected {
\end_layout

\begin_layout LyX-Code
  to-meters = 1.0e+3 // Conversion factor to get to meters.
\end_layout

\begin_layout LyX-Code
  space-dim = 2 // 2 or 3 dimensions
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code
  // Run 
\begin_inset Quotes eld
\end_inset

proj -le
\begin_inset Quotes erd
\end_inset

 to see a list of available reference ellipsoids.
\end_layout

\begin_layout LyX-Code
  // Comments are not allowed at the end of the next line.
\end_layout

\begin_layout LyX-Code
  ellipspod = WGS84
\end_layout

\begin_layout LyX-Code
 
\end_layout

\begin_layout LyX-Code
  // Run 
\begin_inset Quotes eld
\end_inset

proj -ld
\begin_inset Quotes erd
\end_inset

 to see a list of available datums.
\end_layout

\begin_layout LyX-Code
  // Comments are not allowed at the end of the next line.
\end_layout

\begin_layout LyX-Code
  datum-horiz = WGS84
\end_layout

\begin_layout LyX-Code
 
\end_layout

\begin_layout LyX-Code
  // 
\begin_inset Quotes eld
\end_inset

ellipsoid
\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

mean sea level
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout LyX-Code
  // Comments are not allowed at the end of the next line.
\end_layout

\begin_layout LyX-Code
  datum-vert = ellipsoid
\end_layout

\begin_layout LyX-Code
 
\end_layout

\begin_layout LyX-Code
  // Run 
\begin_inset Quotes eld
\end_inset

proj -lp
\begin_inset Quotes erd
\end_inset

 to see a list of available geographic 
\end_layout

\begin_layout LyX-Code
  // projections.
\end_layout

\begin_layout LyX-Code
    projector = projection {
\end_layout

\begin_layout LyX-Code
    // Name of the projection.
 run 
\begin_inset Quotes eld
\end_inset

proj -lp
\begin_inset Quotes erd
\end_inset

 to see a list of 
\end_layout

\begin_layout LyX-Code
    // supported projections.
 Use the Universal Transverse Mercator
\end_layout

\begin_layout LyX-Code
    // projection.
\end_layout

\begin_layout LyX-Code
    projection = utm
\end_layout

\begin_layout LyX-Code
    units = m // Units in the projection.
\end_layout

\begin_layout LyX-Code
 
\end_layout

\begin_layout LyX-Code
    // Provide a list of projection options; these are the command 
\end_layout

\begin_layout LyX-Code
    // line arguments you would use with the proj program.
 Refer to
\end_layout

\begin_layout LyX-Code
    // the Proj.4 library documentation for complete details.
\end_layout

\begin_layout LyX-Code
    // Comments are not allowed at the end of the next line.
\end_layout

\begin_layout LyX-Code
    proj-options = +zone=10
\end_layout

\begin_layout LyX-Code
}
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Caption
Format for geographic projection coordinate systems in spatial database
 files.
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Geographic Local Cartesian
\end_layout

\begin_layout Standard
This coordinate system is a geographically referenced, local 3-D Cartesian
 coordinate system.
 This allow use of a conventional Cartesian coordinate system with accurate
 georeferencing.
 For example, one can construct a finite-element model in this coordinate
 system and use spatial databases in geographic coordinates.
 This coordinate system provides an alternative to using a geographic projection
 as the Cartesian grip.
 The advantage of this coordinate system is that it retains the curvature
 of the Earth, while a geographic projection does not.
\end_layout

\begin_layout LyX-Code
cs-data = geo-local-cartesian {
\end_layout

\begin_layout LyX-Code
  // Conversion factor to get to meters (only applies to vertical
\end_layout

\begin_layout LyX-Code
  // coordinate unless you are using a geocentric coordinate system).
\end_layout

\begin_layout LyX-Code
  to-meters = 1.0 // use meters
\end_layout

\begin_layout LyX-Code
  space-dim = 2 // 2 or 3 dimensions
\end_layout

\begin_layout LyX-Code
 
\end_layout

\begin_layout LyX-Code
  // Run 
\begin_inset Quotes eld
\end_inset

proj -le
\begin_inset Quotes erd
\end_inset

 to see a list of available reference ellipsoids.
\end_layout

\begin_layout LyX-Code
  // Comments are not allowed at the end of the next line.
\end_layout

\begin_layout LyX-Code
  ellipspod = WGS84
\end_layout

\begin_layout LyX-Code
 
\end_layout

\begin_layout LyX-Code
  // Run 
\begin_inset Quotes eld
\end_inset

proj -ld
\begin_inset Quotes erd
\end_inset

 to see a list of available datums.
\end_layout

\begin_layout LyX-Code
  // Comments are not allowed at the end of the next line.
\end_layout

\begin_layout LyX-Code
  datum-horiz = WGS84
\end_layout

\begin_layout LyX-Code
 
\end_layout

\begin_layout LyX-Code
  // 
\begin_inset Quotes eld
\end_inset

ellipsoid
\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

mean sea level
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout LyX-Code
  // Comments are not allowed at the end of the next line.
\end_layout

\begin_layout LyX-Code
  datum-vert = ellipsoid
\end_layout

\begin_layout LyX-Code
 
\end_layout

\begin_layout LyX-Code
  // Origin of the local Cartesian coordinate system.
 To avoid
\end_layout

\begin_layout LyX-Code
  // roundoff errors it is best to pick a location near the center of
\end_layout

\begin_layout LyX-Code
  // the region of interest.
 An elevation on the surface of the Earth
\end_layout

\begin_layout LyX-Code
  // in the middle of the region also works well (and makes the
\end_layout

\begin_layout LyX-Code
  // vertical coordinate easy to interpret).
\end_layout

\begin_layout LyX-Code
  origin-lon = -116.7094 // Longitude of the origin in decimal degrees
\end_layout

\begin_layout LyX-Code
                         // (west is negative).
\end_layout

\begin_layout LyX-Code
  origin-lat = 36.3874 // Latitude of the origin in decimal degrees 
\end_layout

\begin_layout LyX-Code
                       // (north is positive).
\end_layout

\begin_layout LyX-Code
 
\end_layout

\begin_layout LyX-Code
  // Elevation with respect to the vertical datum.
 Units are the
\end_layout

\begin_layout LyX-Code
  // same as the Cartesian coordinate system (in this case meters).
\end_layout

\begin_layout LyX-Code
  origin-elev = 3.5
\end_layout

\begin_layout LyX-Code
}
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Caption
Format for the geographic local Cartesian coordinate system in spatial database
 files.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Spatial Database Parameters
\end_layout

\begin_layout Standard
As in the other Pyre objects, spatial database objects contain parameters
 that can be set from the command line or 
\family typewriter
.cf
\family default
g or 
\family typewriter
.pml
\family default
 files.
 The parameters for a spatial database are:
\end_layout

\begin_layout Description
label Label for the database, which is used in diagnostic messages.
\end_layout

\begin_layout Description
query_type Type of search query to perform.
 Values for this parameter are 
\begin_inset Quotes eld
\end_inset

linear
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

nearest
\begin_inset Quotes erd
\end_inset

 (default).
\end_layout

\begin_layout Description
iohandler Database importer.
 Only one importer is implemented, so you do not need to change this setting.
\end_layout

\begin_layout Description
iohandler.filename Filename for the spatial database.
\end_layout

\begin_layout Standard
An example of setting these parameters in a 
\family typewriter
.cfg
\family default
 file is:
\end_layout

\begin_layout LyX-Code
label = Material properties
\end_layout

\begin_layout LyX-Code
query_type = linear
\end_layout

\begin_layout LyX-Code
iohandler.filename = mydb.spatialdb
\end_layout

\begin_layout LyX-Code

\end_layout

\end_body
\end_document
