#LyX 1.5.2 created this file. For more info see http://www.lyx.org/
\lyxformat 276
\begin_document
\begin_header
\textclass book
\begin_preamble

\end_preamble
\language english
\inputencoding latin1
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\paperfontsize default
\spacing single
\papersize default
\use_geometry true
\use_amsmath 0
\use_esint 0
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\leftmargin 1in
\topmargin 1in
\rightmargin 1in
\bottommargin 2in
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Section
\begin_inset LatexCommand label
name "sec:Tutorial-Two-tet4"

\end_inset

Tutorial Using Two Tetrahedra
\end_layout

\begin_layout Standard
PyLith features discussed in this tutorial:
\end_layout

\begin_layout Itemize
Quasi-static solution
\end_layout

\begin_layout Itemize
Mesh ASCII format
\end_layout

\begin_layout Itemize
Dirichlet boundary conditions
\end_layout

\begin_layout Itemize
Kinematic fault interface conditions
\end_layout

\begin_layout Itemize
Linearly elastic isotropic material
\end_layout

\begin_layout Itemize
VTK output
\end_layout

\begin_layout Itemize
Linear tetrahedral cells
\end_layout

\begin_layout Itemize
SimpleDB spatial database
\end_layout

\begin_layout Itemize
FixedDOFDB spatial database
\end_layout

\begin_layout Subsection
Overview
\end_layout

\begin_layout Standard
This tutorial is a simple 3D example of a quasi-static finite element problem.
 It is a mesh composed of two linear tetrahedra subject to displacement
 boundary conditions, and is probably the simplest example of a 3D elastic
 problem.
 Due to the simple geometry of the problem, the mesh may be constructed
 by hand, using PyLith mesh ASCII format.
 In this tutorial, we will walk through the steps necessary to construct,
 run, and view two problems that use the same mesh.
 In addition to this manual, each of the files for the example problem includes
 extensive comments.
\end_layout

\begin_layout Subsection
Mesh Description
\end_layout

\begin_layout Standard
The mesh consists of two tetrahedra forming a pyramid shape (Figure 
\begin_inset LatexCommand ref
reference "fig:twotet4-mesh"

\end_inset

).
 The mesh geometry and topology is described in the file 
\family typewriter
twotet4.mesh
\family default
, which is in PyLith mesh ASCII format.
 This file format is described in Appendix 
\begin_inset LatexCommand ref
reference "cha:File-Formats"

\end_inset

.
 This file describes the dimensionality of the problem (1D, 2D, or 3D),
 the coordinates of the vertices (nodes), the vertices composing each cell
 (element), and the material ID to be associated with each cell.
 It then provides groups of vertices that may be used to define faults or
 surfaces to which boundary conditions may be applied.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Standard
\align center
\begin_inset Graphics
	filename figs/twotet4-mesh.eps

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Caption

\begin_layout Standard
Mesh composed of two linear tetrahedral cells used for example problems.
\begin_inset LatexCommand label
name "fig:twotet4-mesh"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Additional Common Information
\end_layout

\begin_layout Standard
In addition to the mesh, the two example problems share additional information.
 For problems of this type, it is generally useful to create a file named
 
\family typewriter
pylithapp.cfg
\family default
 in the run directory, since this file is read automatically every time
 PyLith is run.
 Settings specific to a particular problem may be placed in other 
\family typewriter
.cfg
\family default
 files, as described later, and then those files are placed on the command
 line.
  The settings contained in 
\family typewriter
pylithapp.cfg
\family default
 for this problem consist of:
\end_layout

\begin_layout Description
pylithapp.journal.info Settings that control the verbosity of the output for
 the different components.
\end_layout

\begin_layout Description
pylithapp.mesh_generator Settings that control mesh importing, such as the
 importer type, the filename, and the spatial dimension of the mesh.
\end_layout

\begin_layout Description
pylithapp.timedependent Settings that control the problem, such as the total
 time, time step size, and spatial dimension.
\end_layout

\begin_layout Description
pylithapp.timedependent.materials Settings that control the material type,
 specify which material IDs are to be associated with a particular material
 type, and give the name of the spatial database containing material parameters
 for the mesh.
 The quadrature information is also given.
\end_layout

\begin_layout Description
pylithapp.petsc PETSc settings to use for the problem, such as the preconditioner
 type.
\end_layout

\begin_layout Standard
All of the problems in this directory use the same material database, as
 specified under 
\end_layout

\begin_layout LyX-Code

\family typewriter
pylithapp.timedependent.materials
\family default
 
\end_layout

\begin_layout Standard
in 
\family typewriter
pylithapp.cfg
\family default
.
 This information is contained in the file 
\family typewriter
matprops.spatialdb
\family default
.
 Although the material model is specified in 
\family typewriter
pylithapp.cfg
\family default
, the physical properties for the material model are given in 
\family typewriter
matprops.spatialdb
\family default
.
 For this example, values describing three-dimensional elastic material
 properties are given at a single point, resulting in uniform material propertie
s.
\end_layout

\begin_layout Subsection
Axial Displacement Example
\end_layout

\begin_layout Standard
The first example problem is extension of the mesh along the diagonal, extending
 along the base of the pyramid between two opposing vertices.
 Parameter settings that override or augment those in 
\family typewriter
pylithapp.cfg
\family default
 are contained in the file 
\family typewriter
axialdisp.cfg
\family default
.
 These settings are:
\end_layout

\begin_layout Description
pylithapp.timedependent Specifies an implicit formulation for the problem
 and specifies the array of boundary conditions.
\end_layout

\begin_layout Description
pylithapp.timedependent.bc.bc Defines which degrees of freedom are being constraine
d (
\family typewriter
x
\family default
, 
\family typewriter
y
\family default
, and 
\family typewriter
z
\family default
), gives the label (defined in 
\family typewriter
twotet4.mesh
\family default
) defining the points desired, assigns a label to the boundary condition
 set, and gives the name of the spatial database defining the boundary condition
s (
\family typewriter
axialdisp.spatialdb
\family default
).
\end_layout

\begin_layout Description
pylithapp.problem.formulation.output.output.writer Gives the base filename for
 VTK output 
\newline
(
\family typewriter
axialdisp.vtk
\family default
).
\end_layout

\begin_layout Description
pylithapp.timedependent.materials.material.output Gives the base filename for
 state variable output files (
\family typewriter
axialdisp-statevars.vtk
\family default
).
\end_layout

\begin_layout Standard
The values for the Dirichlet boundary conditions are described in the file
 
\family typewriter
axialdisp.spatialdb
\family default
, as specified in 
\family typewriter
axialdisp.cfg
\family default
.
 The format of all spatial database files is similar.
 Because data are being specified using two control points (rather than
 being uniform over the mesh, for example), the data dimension is one.
\end_layout

\begin_layout Standard
The files containing common information (
\family typewriter
twotet4.mesh
\family default
, 
\family typewriter
pylithapp.cfg
\family default
, 
\family typewriter
matprops.spatialdb
\family default
) along with the problem-specific files (
\family typewriter
axialdisp.cfg
\family default
, 
\family typewriter
axialdisp.spatialdb
\family default
) provide a complete description of the problem, and we can then run this
 example by typing
\end_layout

\begin_layout LyX-Code
pylith axialdisp.cfg
\end_layout

\begin_layout Standard
Once the problem has run, three files will be produced.
 The first file is named 
\family typewriter
axialdisp_t0000000.vtk
\family default
.
 The 
\family typewriter
t0000000
\family default
 indicates that the output is for the first (and only) time step, corresponding
 to an elastic solution.
 This file contains mesh information as well as displacement values at the
 mesh vertices.
 The second file is named 
\family typewriter
axialdisp-statevars_t0000000.vtk
\family default
.
 This file contains the state variables for each cell.
 The default fields are the total strain and stress fields.
 Since the cells are linear tetrahedra, there is a single quadrature point
 for each cell and thus a single set of stress and strain values for each
 cell.
 The final file (
\family typewriter
axialdisp-statevars_info.vtk
\family default
) gives the material properties used for the problem.
 Since we have not specified which properties to write, the default properties
 (
\family typewriter
mu
\family default
, 
\family typewriter
lambda
\family default
, 
\family typewriter
density
\family default
) are written.
 All of the 
\family typewriter
.vtk
\family default
 files may be used with a number of visualization packages.
 If the problem ran correctly, you should be able to generate a figure such
 as Figure 
\begin_inset LatexCommand ref
reference "fig:twotet4-axial"

\end_inset

, which was generated using ParaView.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Standard
\align center
\begin_inset Graphics
	filename figs/axialdisp.jpg
	lyxscale 50
	scale 45

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Caption

\begin_layout Standard
Color contours and vectors of displacement for the axial displacement example
 using a mesh composed of two linear tetrahedral cells.
\begin_inset LatexCommand label
name "fig:twotet4-axial"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Kinematic Fault Slip Example
\end_layout

\begin_layout Standard
The next example problem is a left-lateral fault slip applied between the
 two tetrahedral cells using kinematic cohesive cells.
 The vertices away from the fault are held fixed in the 
\family typewriter
x
\family default
, 
\family typewriter
y
\family default
, and 
\family typewriter
z
\family default
 directions.
 Parameter settings that override or augment those in 
\family typewriter
pylithapp.cfg
\family default
 are contained in the file 
\family typewriter
dislocation.cfg
\family default
.
 These settings are:
\end_layout

\begin_layout Description
pylithapp.journal.info Turns on journaling for 2D quadrature (used for 3D
 faults) and for cohesive kinematic faults.
\end_layout

\begin_layout Description
pylithapp.timedependent Specifies an implicit formulation for the problem,
 the array of boundary conditions, and the array of interfaces.
\end_layout

\begin_layout Description
pylithapp.timedependent.bc.bc Defines which degrees of freedom are being constraine
d (
\family typewriter
x
\family default
, 
\family typewriter
y
\family default
, and 
\family typewriter
z
\family default
), gives the label (defined in 
\family typewriter
twotet4.mesh
\family default
) defining the points desired, and assigns a label to the boundary condition
 set.
 Rather than specifying a spatial database file to define the boundary condition
s, we use the default spatial database (FixedDOFDB) for  the Dirichlet boundary
 condition, which sets the displacements to zero.
\end_layout

\begin_layout Description
pylithapp.timedependent.interfaces Gives the label (defined in 
\family typewriter
twotet4.mesh
\family default
) defining the points on the fault, provides quadrature information, and
 then gives database names for material properties (needed for conditioning),
 fault slip, peak fault slip rate, and fault slip time.
\end_layout

\begin_layout Description
pylithapp.problem.formulation.output.output.writer Gives the base filename for
 VTK output 
\newline
(
\family typewriter
dislocation.vtk
\family default
).
\end_layout

\begin_layout Description
pylithapp.timedependent.interfaces.fault.output.writer Gives the base filename
 for cohesive cell output files (
\family typewriter
dislocation-fault.vtk
\family default
).
\end_layout

\begin_layout Description
pylithapp.timedependent.materials.material.output Gives the base filename for
 state variable output files (
\family typewriter
dislocation-statevars.vtk
\family default
).
\end_layout

\begin_layout Standard
The fault example requires three additional database files that were not
 needed for the simple displacement examples.
 The first file (
\family typewriter
dislocation_slip.spatialdb
\family default
) specifies 0.01 m of left-lateral fault slip for the entire fault.
 The data dimension is zero since the same data are applied to all points
 in the set.
 The default slip time function is a step-function, so we also must provide
 the time at which slip begins.
 The elastic solution is associated with advancing from 
\begin_inset Formula $t=-dt$
\end_inset

 to 
\begin_inset Formula $t=0$
\end_inset

, so we set the slip initiation time for the step-function to 0 in 
\family typewriter
dislocation_sliptime.spatialdb
\family default
.
\end_layout

\begin_layout Standard
The files containing common information (
\family typewriter
twotet4.mesh
\family default
, 
\family typewriter
pylithapp.cfg
\family default
, 
\family typewriter
matprops.spatialdb
\family default
) along with the problem-specific files (
\family typewriter
\size small
dislocation.cfg
\family default
, 
\family typewriter
dislocation_slip.spatialdb
\family default
, 
\family typewriter
dislocation_sliptime.spatialdb
\family default
\size default
) provide a complete description of the problem, and we can then run this
 example by typing
\end_layout

\begin_layout LyX-Code
pylith dislocation.cfg
\end_layout

\begin_layout Standard
Once the problem has run, five files are produced.
 The first file is named 
\family typewriter
dislocation_t0000000.vtk
\family default
.
 The 
\family typewriter
t0000000
\family default
 indicates that the output is for the first (and only) time step, corresponding
 to an elastic solution.
 This file contains mesh information as well as displacement values at the
 mesh vertices.
 The second file is named 
\family typewriter
dislocation-statevars_t0000000.vtk
\family default
.
 This file contains the state variables for each cell.
 The default fields are the total strain and stress fields.
 Since the cells are linear tetrahedra, there is a single quadrature point
 for each cell and thus a single set of stress and strain values for each
 cell.
 The third file is named 
\family typewriter
dislocation-fault_t0000000.vtk
\family default
.
 This file gives the specified fault slip for each vertex on the fault,
 along with the computed traction change for the cohesive cell.
 The fourth file (
\family typewriter
dislocation-statevars_info.vtk
\family default
) gives the material properties used for the problem.
 Since we have not specified which properties to write, the default properties
 (
\family typewriter
mu
\family default
, 
\family typewriter
lambda
\family default
, 
\family typewriter
density
\family default
) are written.
 The final file (
\family typewriter
dislocation-fault_info.vtk
\family default
) provides information such as the normal direction, final slip, and slip
 time for each vertex on the fault.
 All of the 
\family typewriter
.vtk
\family default
 files may be used with a number of visualization packages.
 If the problem ran correctly, you should be able to generate a figure such
 as Figure 
\begin_inset LatexCommand vref
reference "fig:twotet4-disloc"

\end_inset

, which was generated using ParaView.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Standard
\align center
\begin_inset Graphics
	filename figs/dislocation.jpg
	lyxscale 50
	scale 45

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Caption

\begin_layout Standard
Color contours and vectors of displacement for the kinematic fault example
 using a mesh composed of two linear tetrahedral cells.
\begin_inset LatexCommand label
name "fig:twotet4-disloc"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_body
\end_document
