#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass book
\begin_preamble

\end_preamble
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding latin1
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_amsmath 0
\use_esint 0
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1in
\topmargin 1in
\rightmargin 1in
\bottommargin 2in
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "sec:Tutorial-3d-hex8-surfload"

\end_inset

Surface Load Traction Examples
\end_layout

\begin_layout Standard
PyLith features discussed in this tutorial:
\end_layout

\begin_layout Itemize
Time-dependent Neumann (traction) boundary conditions
\end_layout

\begin_layout Itemize
Dirichlet boundary conditions
\end_layout

\begin_layout Itemize
Elastic material
\end_layout

\begin_layout Itemize
Output of solution at user-defined locations
\end_layout

\begin_layout Subsubsection
Overview
\end_layout

\begin_layout Standard
This set of examples describes a set of problems for PyLith involving surface
 loading with a Neumann (traction) applied to the ground surface.
 The first example demonstrates the use of a surface load in a static problem,
 and the second example demonstates how to apply a cyclic load in a quasi-static
 problem.
 The second problem also includes output of the solution at user-defined
 locations.
 All of the examples are contained in the directory 
\family typewriter
examples/3d/hex8
\family default
, and the corresponding 
\family typewriter
.cfg
\family default
 files are 
\family typewriter
step18.cfg
\family default
 and 
\family typewriter
step19.cfg
\family default
.
 Each example may be run as follows:
\end_layout

\begin_layout LyX-Code
pylith stepXX.cfg
\end_layout

\begin_layout Standard
This will cause PyLith to read the default parameters in 
\family typewriter
pylithapp.cfg
\family default
, and then override or augment them with the additional parameters in the
 
\family typewriter
stepXX.cfg
\family default
 file.
 Each 
\family typewriter
.cfg
\family default
 file is extensively documented, to provide detailed information on the
 various parameters.
\end_layout

\begin_layout Subsubsection
Step18 - Static surface load
\end_layout

\begin_layout Standard
The 
\family typewriter
step18.cfg
\family default
 file defines a problem with a spatially varying axial surface load applied
 to the top surface with Dirichlet (roller) boundary conditions on the lateral
 and bottom surfaces.
 We first set the array of boundary conditions with one for each surface
 of the domain.
 As in the other examples, we also setup output for the ground surface.
\end_layout

\begin_layout Standard
For the Dirichlet boundary conditions we fix the degree of freedom associated
 with motion normal to the boundary while leaving the other degrees of freedom
 free.
 We do not explicitly specify the use of a Dirichlet boundary condition
 because it is the default.
 Similarly, the ZeroDispDB is the default spatial database for the displacements
 in a Dirichlet boundary condition, so all we need to specify is the degree
 of freedom that is constrained, the name of the nodeset from CUBIT, and
 a label used in diagnostic output.
 For the Dirichlet boundary condition on the +x surface we have:
\end_layout

\begin_layout LyX-Code
[pylithapp.timedependent.bc.x_pos]
\end_layout

\begin_layout LyX-Code
label = face_xpos
\end_layout

\begin_layout LyX-Code
bc_dof = [0]
\end_layout

\begin_layout LyX-Code
db_initial.label = Dirichlet BC on +x
\end_layout

\begin_layout Standard
On the top surface we apply a Neumann boundary condition for the surface
 load, so we first set the boundary condition type and then specify the
 nodeset in CUBIT associated with this surface.
 For the static surface load, we use a spatial database for the initial
 value and linear interpolation.
 We integrate the surface tractions over the boundary, so we also specify
 the numerical integration scheme to use.
 Finally, we specify a vector for the up direction because the tractions
 are applied to a horizontal surface, resulting in ambiguous shear directions
 for our default orientation convention.
\end_layout

\begin_layout LyX-Code
[pylithapp.timedependent.bc]
\end_layout

\begin_layout LyX-Code
z_pos = pylith.bc.Neumann
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout LyX-Code
[pylithapp.timedependent.bc.z_pos]
\end_layout

\begin_layout LyX-Code
label = face_zpos
\end_layout

\begin_layout LyX-Code
\begin_inset Newline newline
\end_inset

db_initial = spatialdata.spatialdb.SimpleDB
\end_layout

\begin_layout LyX-Code
db_initial.label = Neumann BC on +z
\end_layout

\begin_layout LyX-Code
db_initial.iohandler.filename = spatialdb/tractions_axial_pressure.spatialdb
\end_layout

\begin_layout LyX-Code
# Use linear interpolation
\end_layout

\begin_layout LyX-Code
db_initial.query_type = linear
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout LyX-Code
# Diagnostic output
\end_layout

\begin_layout LyX-Code
output.cell_info_fields = [initial-value]
\end_layout

\begin_layout LyX-Code
output.writer.filename = output/step18-traction.vtk
\end_layout

\begin_layout LyX-Code
output.cell_filter = pylith.meshio.CellFilterAvgSubMesh
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout LyX-Code
# We must specify quadrature information for the cell faces.
\end_layout

\begin_layout LyX-Code
quadrature.cell = pylith.feassemble.FIATLagrange
\end_layout

\begin_layout LyX-Code
quadrature.cell.dimension = 2
\end_layout

\begin_layout LyX-Code
quadrature.cell.quad_order = 2
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout LyX-Code
# Because normal for +z surface is [0,0,1], the horizontal and
\end_layout

\begin_layout LyX-Code
# vertical shear directions are ambiguous.
 We provide a "fake" up
\end_layout

\begin_layout LyX-Code
# direction of [0,1,0] so that the horizontal shear direction ("up" x
\end_layout

\begin_layout LyX-Code
# normal) is [1,0,0] and the vertical shear direction (normal x horiz
\end_layout

\begin_layout LyX-Code
# shear dir) is [0,1,0].
\end_layout

\begin_layout LyX-Code
up_dir = [0,1,0]
\end_layout

\begin_layout Standard
When we have run the simulation, the output VTK files will be contained
 in 
\family typewriter
examples/3d/hex8/output
\family default
 (all with a prefix of 
\family typewriter
step1
\family default
8).
 Results using ParaView are shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:step18-displ"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figs/step18-displ.jpg
	lyxscale 50
	width 10cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Displacement field for example step18 visualized using ParaView.
 The vectors show the displacement field while the colors in the wireframe
 correspond to the z-component of the displacement field.
\begin_inset CommandInset label
LatexCommand label
name "fig:step18-displ"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Step19 - Time-dependent surface load
\end_layout

\begin_layout Standard
The 
\family typewriter
step19.cfg
\family default
 file defines a problem that is identical to example step18, except that
 we vary the amplitude of the surface load as a function of time.
 We use a temporal database (analogous to our spatial databases for specifying
 spatial variations) to prescribe a piecewise linear variation of the amplitude
 with time as given in the file 
\family typewriter
spatialdb/loadcycle.timedb
\family default
.
 The amplitude begins at zero, progresses to 1.0, then 1.5, before decreasing
 in a symmetric fashion.
 The temporal database can use variable time steps to prescribe arbitrary
 time histories.
 
\end_layout

\begin_layout Standard
Rather than specify a spatial database for the initial value of the Neumann
 boundary condition corresponding to the surface load, we specify a spatial
 database for the change in value and the temporal database:
\end_layout

\begin_layout LyX-Code
[pylithapp.timedependent.bc.z_pos]
\end_layout

\begin_layout LyX-Code
label = face_zpos
\end_layout

\begin_layout LyX-Code
db_change = spatialdata.spatialdb.SimpleDB
\end_layout

\begin_layout LyX-Code
db_change.label = Amplitude of Neumann BC on +z
\end_layout

\begin_layout LyX-Code
db_change.iohandler.filename = spatialdb/tractions_axial_pressure.spatialdb
\end_layout

\begin_layout LyX-Code
# Use linear interpolation
\end_layout

\begin_layout LyX-Code
db_change.query_type = linear
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout LyX-Code
th_change = spatialdata.spatialdb.TimeHistory
\end_layout

\begin_layout LyX-Code
th_change.label = Time history for Neumann BC on +z
\end_layout

\begin_layout LyX-Code
th_change.filename = spatialdb/loadcycle.timedb
\end_layout

\begin_layout Standard
When we have run the simulation, the output VTK files will be contained
 in 
\family typewriter
examples/3d/hex8/output
\family default
 (all with a prefix of 
\family typewriter
step1
\family default
9).
 Results using ParaView are shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:step19-stress-t200"

\end_inset

.
 We also output the solution at user-defined locations, which are given
 in the file 
\family typewriter
output_points.txt.

\family default
 See Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:output:points"

\end_inset

 for a discussion of the output parameters.
 This type of output is designed for comparison against observations and
 inversions and output via HDF5 files (see Section ??).
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figs/step19-stress_t200.jpg
	lyxscale 50
	width 10cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Stress field (zz-component) for example step19 at t = 200 years visualized
 using ParaView.
 The stresses appear as 4 layers since we have used 
\family typewriter
CellFilterAvgMesh
\family default
 for material output.
\begin_inset CommandInset label
LatexCommand label
name "fig:step19-stress-t200"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_body
\end_document
