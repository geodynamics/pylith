#LyX 1.6.2 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass book
\begin_preamble

\end_preamble
\use_default_options false
\language english
\inputencoding latin1
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_amsmath 0
\use_esint 0
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\leftmargin 1in
\topmargin 1in
\rightmargin 1in
\bottommargin 1in
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Tutorial-Two-quad4"

\end_inset

Tutorial Using Two Quadrilaterals
\end_layout

\begin_layout Standard
PyLith features discussed in this tutorial:
\end_layout

\begin_layout Itemize
Quasi-static solution
\end_layout

\begin_layout Itemize
Mesh ASCII format
\end_layout

\begin_layout Itemize
Dirichlet boundary conditions
\end_layout

\begin_layout Itemize
Neumann boundary conditions
\end_layout

\begin_layout Itemize
Kinematic fault interface conditions
\end_layout

\begin_layout Itemize
Plane strain linearly elastic material
\end_layout

\begin_layout Itemize
VTK output
\end_layout

\begin_layout Itemize
Bilinear quadrilateral cells
\end_layout

\begin_layout Itemize
SimpleDB spatial database
\end_layout

\begin_layout Itemize
ZeroDispDB spatial database
\end_layout

\begin_layout Subsection
Overview
\end_layout

\begin_layout Standard
This tutorial is another simple 2D example of a quasi-static finite element
 problem.
 It is a mesh composed of two bilinear quadrilaterals subject to displacement
 or traction boundary conditions, assuming plane-strain linear elastic behavior.
 Due to the simple geometry of the problem, the mesh may be constructed
 by hand, using PyLith mesh ASCII format to describe the mesh.
 In this tutorial, we will walk through the steps necessary to construct,
 run, and view four problems that use the same mesh.
 In addition to this manual, each of the files for the example problem includes
 extensive comments.
\end_layout

\begin_layout Subsection
Mesh Description
\end_layout

\begin_layout Standard
The mesh consists of two square cells with edge lengths of one unit forming
 a regular region (Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:twoquad4-mesh"

\end_inset

).
 The mesh geometry and topology are described in the file 
\family typewriter
twoquad4.mesh
\family default
, which is in PyLith mesh ASCII format.
 This file describes the dimensionality of the problem (in this case 2D),
 the coordinates of the vertices (nodes), the vertices composing each cell
 (element), the material ID to be associated with each cell, and then provides
 groups of vertices that may be used to define faults or surfaces to which
 boundary conditions may be applied.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figs/twoquad4-mesh.eps

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Mesh composed of two bilinear quadrilateral cells used for the example problems.
\begin_inset CommandInset label
LatexCommand label
name "fig:twoquad4-mesh"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Additional Common Information
\end_layout

\begin_layout Standard
In addition to the mesh, the four example problems share additional information.
 As in the previous examples, we place this information in 
\family typewriter
pylithapp.cfg
\family default
, since this file is read automatically every time PyLith is run.
 Settings specific to a particular problem may be placed in other 
\family typewriter
.cfg
\family default
 files, as described later, and then those files are placed on the command
 line.
\end_layout

\begin_layout Subsection
Axial Displacement Example
\end_layout

\begin_layout Standard
The first example problem is extension of the mesh along the x axis.
 Parameter settings that override or augment those in 
\family typewriter
pylithapp.cfg
\family default
 are contained in the file 
\family typewriter
axialdisp.cfg
\family default
.
 These include:
\end_layout

\begin_layout Description
pylithapp.timedependent.bc.x_neg Specifies the boundary conditions for the
 left side of the mesh, defining which degrees of freedom are being constrained
 (x), giving the label (defined in 
\family typewriter
twoquad4.mesh
\family default
) defining the points desired, assigning a label to the boundary condition
 set, and giving the name of the spatial database with the values for the
 Dirichlet boundary condition (
\family typewriter
axialdisp.spatialdb
\family default
).
\end_layout

\begin_layout Description
pylithapp.timedependent.bc.x_pos Specifies the boundary conditions for the
 right side of the mesh, defining which degrees of freedom are being constrained
 (x), giving the label (defined in 
\family typewriter
twoquad4.mesh
\family default
) defining the points desired, assigning a label to the boundary condition
 set, and giving the name of the spatial database defining the boundary
 conditions (
\family typewriter
axialdisp.spatialdb
\family default
).
\end_layout

\begin_layout Description
pylithapp.timedependent.bc.y_neg Specifies the boundary conditions for the
 bottom two corners of the mesh, defining which degrees of freedom are being
 constrained (y), giving the label (defined in 
\family typewriter
twoquad4.mesh
\family default
) defining the points desired, assigning a label to the boundary condition
 set, and giving the name of the spatial database with the values for the
 Dirichlet boundary condition (
\family typewriter
axialdisp.spatialdb
\family default
).
\end_layout

\begin_layout Standard
The values for the Dirichlet boundary condition are given in the file 
\family typewriter
axialdisp.spatialdb
\family default
, as specified in 
\family typewriter
axialdisp.cfg
\family default
.
 Because the data are being specified using two control points with a linear
 variation in the values between the two (rather than being uniform over
 the mesh, for example), the data dimension is one.
\end_layout

\begin_layout Standard
The files containing common information (
\family typewriter
twoquad4.mesh
\family default
, 
\family typewriter
pylithapp.cfg
\family default
, 
\family typewriter
matprops.spatialdb
\family default
) along with the problem-specific files (
\family typewriter
axialdisp.cfg
\family default
, 
\family typewriter
axialdisp.spatialdb
\family default
) provide a complete description of the problem, and we can then run this
 example by typing
\end_layout

\begin_layout LyX-Code
pylith axialdisp.cfg
\end_layout

\begin_layout Standard
As in the two triangle axial displacement example, three files will be produced.
 If the problem ran correctly, you should be able to generate a figure such
 as Figure 
\begin_inset CommandInset ref
LatexCommand vref
reference "fig:twoquad4-axial"

\end_inset

, which was generated using ParaView.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement t
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figs/axialdisp.jpg
	lyxscale 50
	scale 45

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Color contours and vectors of displacement for the axial displacement example
 using a mesh composed of two bilinear quadrilateral cells.
\begin_inset CommandInset label
LatexCommand label
name "fig:twoquad4-axial"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Shear Displacement Example
\end_layout

\begin_layout Standard
The next example problem is shearing of the mesh in the y direction using
 displacements applied along the positive and negative x boundaries.
 Parameter settings that override or augment those in 
\family typewriter
pylithapp.cfg
\family default
 are contained in the file 
\family typewriter
sheardisp.cfg
\family default
.
 These include:
\end_layout

\begin_layout Description
pylithapp.timedependent.bc.x_neg Specifies the boundary conditions for the
 left side of the mesh, defining which degrees of freedom are being constrained
 (x and y), giving the label (
\family typewriter
x_neg
\family default
, defined in 
\family typewriter
twoquad4.mesh
\family default
) defining the points desired, assigning a label to the boundary condition
 set, and giving the name of the spatial database with the values for the
 Dirichlet boundary condition (
\family typewriter
sheardisp.spatialdb
\family default
).
\end_layout

\begin_layout Description
pylithapp.timedependent.bc.x_pos Specifies the boundary conditions for the
 left side of the mesh, defining which degrees of freedom are being constrained
 (y only), giving the label (
\family typewriter
x_
\family default
pos, defined in 
\family typewriter
twoquad4.mesh
\family default
) defining the points desired, assigning a label to the boundary condition
 set, and giving the name of the spatial database with the values for the
 Dirichlet boundary condition (
\family typewriter
sheardisp.spatialdb
\family default
).
\end_layout

\begin_layout Standard
The values for the Dirichlet boundary conditions are described in the file
 
\family typewriter
sheardisp.spatialdb
\family default
, as specified in 
\family typewriter
sheardisp.cfg
\family default
.
 In this case, the desired displacement values are given at two control
 points, corresponding to the two edges we want to constrain.
 Since data are being specified at two points with a linear variations in
 the values between the points (rather than being uniform over the mesh,
 for example), the data dimension is one.
\end_layout

\begin_layout Standard
The files containing common information (
\family typewriter
twoquad4.mesh
\family default
, 
\family typewriter
pylithapp.cfg
\family default
, 
\family typewriter
matprops.spatialdb
\family default
) along with the problem-specific files (
\family typewriter
sheardisp.cfg
\family default
, 
\family typewriter
sheardisp.spatialdb
\family default
) provide a complete description of the problem, and we can then run this
 example by typing
\end_layout

\begin_layout LyX-Code
pylith sheardisp.cfg
\end_layout

\begin_layout Standard
As in the previous example, three files will be produced.
 If the problem ran correctly, you should be able to generate a figure such
 as Figure 
\begin_inset CommandInset ref
LatexCommand vref
reference "fig:twoquad4-shear"

\end_inset

, which was generated using ParaView.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figs/sheardispl.jpg
	lyxscale 50
	scale 45

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Color contours and vectors of displacement for the shear displacement example
 using a mesh composed of two bilinear quadrilateral cells.
\begin_inset CommandInset label
LatexCommand label
name "fig:twoquad4-shear"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Kinematic Fault Slip Example
\end_layout

\begin_layout Standard
The next example problem is a left-lateral fault slip applied between the
 two square cells using kinematic cohesive cells.
 The left and right boundaries are held fixed in the x and y directions.
 Parameter settings that override or augment those in 
\family typewriter
pylithapp.cfg
\family default
 are contained in the file 
\family typewriter
dislocation.cfg
\family default
.
 These settings include:
\end_layout

\begin_layout Description
pylithapp.timedependent.bc.x_neg Specifies the boundary conditions for the
 left side of the mesh, defining which degrees of freedom are being constrained
 (x and y), giving the label (
\family typewriter
x_neg
\family default
, defined in 
\family typewriter
twoquad4.mesh
\family default
) defining the points desired, and assigning a label to the boundary condition
 set.
 Instead of specifying a spatial database file for the values of the Dirichlet
 boundary condition, we use the default spatial database (ZeroDispDB) for
 the Dirichlet boundary condition, which sets the displacements to zero
 for all time.
\end_layout

\begin_layout Description
pylithapp.timedependent.bc.x_pos Specifies the boundary conditions for the
 right side of the mesh, defining which degrees of freedom are being constrained
 (x and y), giving the label (
\family typewriter
x_neg
\family default
, defined in 
\family typewriter
twoquad4.mesh
\family default
) defining the points desired, and assigning a label to the boundary condition
 set.
 We use the ZeroDispDB for this boundary condition as well, which sets the
 displacements to zero for all time.
\end_layout

\begin_layout Description
pylithapp.timedependent.interfaces Gives the label (defined in 
\family typewriter
twoquad4.mesh
\family default
) defining the points on the fault, provides quadrature information, and
 then gives database names for material properties (needed for conditioning),
 fault slip, peak fault slip rate, and fault slip time.
\end_layout

\begin_layout Standard
The fault example requires three additional database files that were not
 needed for the simple displacement examples.
 The first file (
\family typewriter
dislocation_slip.spatialdb
\family default
) specifies 0.01 m of left-lateral fault slip for the entire fault.
 The data dimension is zero since the same data are applied to all points
 in the set.
 The default slip time function is a step-function, so we also must provide
 the time at which slip begins.
 The elastic solution is associated with advancing from 
\begin_inset Formula $t=-dt$
\end_inset

 to 
\begin_inset Formula $t=0$
\end_inset

, so we set the slip initiation time for the step-function to 0 in 
\family typewriter
dislocation_sliptime.spatialdb
\family default
.
\end_layout

\begin_layout Standard
The files containing common information (
\family typewriter
twoquad4.mesh
\family default
, 
\family typewriter
pylithapp.cfg
\family default
, 
\family typewriter
matprops.spatialdb
\family default
) along with the problem-specific files (
\family typewriter
\size small
dislocation.cfg
\family default
, 
\family typewriter
dislocation_slip.spatialdb
\family default
, 
\family typewriter
dislocation_sliptime.spatialdb
\family default
\size default
) provide a complete description of the problem, and we can then run this
 example by typing
\end_layout

\begin_layout LyX-Code
pylith dislocation.cfg
\end_layout

\begin_layout Standard
The additional of a fault results in two additional output files (as in
 the two triangle fault example), 
\family typewriter
dislocation-fault_t0000000.vtk
\family default
 and 
\family typewriter
dislocation-fault_info.vtk
\family default
.
 These files provide output of fault slip, change in tractions, and diagnostic
 information such as the normal direction, final slip, and slip time for
 each vertex on the fault.
 If the problem ran correctly, you should be able to generate a figure such
 as Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:twoquad4-disloc"

\end_inset

, which was generated using ParaView.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figs/dislocation.jpg
	lyxscale 50
	scale 45

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Color contours and vectors of displacement for the kinematic fault example
 using a mesh composed of two bilinear quadrilateral cells.
\begin_inset CommandInset label
LatexCommand label
name "fig:twoquad4-disloc"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Tutorial-twoquad4-traction"

\end_inset

Axial Traction Example
\end_layout

\begin_layout Standard
The fourth example demonstrates the use of Neumann (traction) boundary condition
s.
 Constant tractions are applied to the right edge of the mesh, while displacemen
ts normal to the boundaries are held fixed along the left and bottom edges
 of the mesh.
 Parameter settings that override or augment those in 
\family typewriter
pylithapp.cfg
\family default
 are contained in the file 
\family typewriter
axialtract.cfg
\family default
.
 These settings include:
\end_layout

\begin_layout Description
pylithapp.timedependent Specifies an implicit formulation for the problem
 and specifies the array of boundary conditions.
 The boundary condition type for 
\family typewriter
x_pos
\family default
 is explicitly set to 
\family typewriter
Neumann
\family default
, since the default boundary condition type is 
\family typewriter
Dirichlet
\family default
.
\end_layout

\begin_layout Description
pylithapp.timedependent.bc.x_neg Specifies the boundary conditions for the
 left side of the mesh, defining which degrees of freedom are being constrained
 (x) and giving the label (defined in 
\family typewriter
twoquad4.mesh
\family default
) defining the points desired.
 In this case, rather than specifying a spatial database file with values
 for the Dirichlet boundary conditions, we use the default spatial database
 (ZeroDispDB) for the Dirichlet boundary condition, which sets the displacements
 to zero for all time.
\end_layout

\begin_layout Description
pylithapp.timedependent.bc.x_pos Specifies the Neumann boundary conditions
 for the right side of the mesh, giving the label (defined in 
\family typewriter
twoquad4.mesh
\family default
) defining the points desired, assigning a label to the boundary condition
 set, and giving the name of the spatial database with the traction vectors
 for the Neumann boundary condition (
\family typewriter
axialtract.spatialdb
\family default
).
\end_layout

\begin_layout Description
pylithapp.timedependent.bc.y_neg Specifies the boundary conditions for the
 bottom two corners of the mesh, defining which degrees of freedom are being
 constrained (y) and giving the label (defined in 
\family typewriter
twoquad4.mesh
\family default
) defining the points desired.
 In this case, we again use the ZeroDispDB, which sets the displacements
 to zero for all time.
\end_layout

\begin_layout Description
pylithapp.problem.formulation.output.output.writer Gives the base filename for
 VTK output 
\begin_inset Newline newline
\end_inset

(
\family typewriter
axialtract.vtk
\family default
).
\end_layout

\begin_layout Description
pylithapp.timedependent.bc.x_pos.output Gives the field to be output for the
 
\family typewriter
x_pos
\family default
 boundary (
\family typewriter
tractions
\family default
), and gives the base filename for 
\family typewriter
x_pos
\family default
 boundary output (
\family typewriter
axialtract-tractions.vtk
\family default
).
\end_layout

\begin_layout Standard
The traction vectors for the Neumann boundary conditions are given in the
 file 
\family typewriter
axialtract.spatialdb
\family default
, as specified in 
\family typewriter
axialtract.cfg
\family default
.
 The files containing common information (
\family typewriter
twoquad4.mesh
\family default
, 
\family typewriter
pylithapp.cfg
\family default
, 
\family typewriter
matprops.spatialdb
\family default
) along with the problem-specific files (
\family typewriter
axialtract.cfg
\family default
, 
\family typewriter
axialtract.spatialdb
\family default
) provide a complete description of the problem, and we can then run this
 example by typing
\end_layout

\begin_layout LyX-Code
pylith axialtract.cfg
\end_layout

\begin_layout Standard
Once the problem has run, six files will be produced.
 This includes the five files as in the previous example plus 
\family typewriter
axialtract-tractions_info.vtk
\family default
, which gives the 
\family typewriter
x
\family default
 and 
\family typewriter
y
\family default
 components of traction applied at each integration point.
 If the problem ran correctly, you should be able to generate a figure such
 as Figure 
\begin_inset CommandInset ref
LatexCommand vref
reference "fig:twoquad4-axialtract"

\end_inset

, which was generated using ParaView.
 The results may be compared against the analytical solution derived in
 Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Analytical-Constant-Traction"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figs/axialtract.jpg
	lyxscale 50
	scale 45

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Color contours and vectors of displacement for the axial traction example
 using a mesh composed of two bilinear quadrilateral cells.
\begin_inset CommandInset label
LatexCommand label
name "fig:twoquad4-axialtract"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_body
\end_document
