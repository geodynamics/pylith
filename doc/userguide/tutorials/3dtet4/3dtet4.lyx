#LyX 1.5.1 created this file. For more info see http://www.lyx.org/
\lyxformat 276
\begin_document
\begin_header
\textclass book
\begin_preamble

\end_preamble
\language english
\inputencoding latin1
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\paperfontsize default
\spacing single
\papersize default
\use_geometry true
\use_amsmath 0
\use_esint 0
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\leftmargin 1in
\topmargin 1in
\rightmargin 1in
\bottommargin 2in
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Section
\begin_inset LatexCommand label
name "sec:Tutorial-3d-tet4"

\end_inset

Tutorial Using Tetrahedral Mesh Created by LaGriT
\end_layout

\begin_layout Standard
PyLith features discussed in this tutorial:
\end_layout

\begin_layout Itemize
Quasi-static solution
\end_layout

\begin_layout Itemize
LaGriT mesh format
\end_layout

\begin_layout Itemize
Dirichlet boundary conditions
\end_layout

\begin_layout Itemize
Kinematic fault interface conditions
\end_layout

\begin_layout Itemize
Linearly elastic isotropic material
\end_layout

\begin_layout Itemize
Specifying more than one material
\end_layout

\begin_layout Itemize
VTK output
\end_layout

\begin_layout Itemize
Linear tetrahedral cells
\end_layout

\begin_layout Itemize
SimpleDB spatial database
\end_layout

\begin_layout Itemize
FixedDOFDB spatial database
\end_layout

\begin_layout Subsection
Overview
\end_layout

\begin_layout Standard
This tutorial is a simple 3D example of a quasi-static finite element problem.
 It is a mesh composed of 852 linear tetrahedra subject to displacement
 boundary conditions.
 This example demonstrates the usage of the 
\begin_inset LatexCommand htmlurl
name "LaGriT mesh generation package"
target "lagrit.lanl.gov"

\end_inset

 to create a mesh, as well as describing how to use a LaGriT-generated mesh
 in PyLith.
 In this tutorial, we will walk through the steps necessary to construct,
 run, and view two problems that use the same mesh.
 In addition to this manual, each of the files for the example problems
 includes extensive comments.
\end_layout

\begin_layout Subsection
Mesh Generation and Description
\end_layout

\begin_layout Standard
The mesh for these examples is a simple rectangular solid (Figure 
\begin_inset LatexCommand ref
reference "fig:3dtet4-mesh"

\end_inset

).
 This mesh would be quite difficult to generate by hand, so we use the LaGriT
 mesh generation package.
 For this example, we provide a documented journal file in 
\family typewriter
examples/3d/tet4.

\family default
 Investigation of this journal file should provide some insight into how
 to use LaGriT with PyLith.
 For more detailed information on using LaGriT, refer to the 
\begin_inset LatexCommand htmlurl
name "LaGriT web site"
target "lagrit.lanl.gov"

\end_inset

.
 If you have LaGriT installed on your machine, you can use the journal file
 to create your own mesh.
 Otherwise, you can use the mesh that has already been created.
\end_layout

\begin_layout Standard
If you are using LaGriT to generate your own mesh, there are two ways to
 use the journal file.
 The simplest method is to go to the
\family sans
 
\family default
examples directory (
\family typewriter
examples/3d/tet4
\family default
), start LaGriT, and then type:
\end_layout

\begin_layout LyX-Code
input/mesh_tet4_1000m.lagrit
\end_layout

\begin_layout Standard
This will run the commands in that file, which will produce the necessary
 files to run the example.
 This method will create the mesh, but you will gain very little insight
 into what is being done.
 A more informative approach is to input each command directly.
 That way, you will see what each command does.
 You can simply copy and paste the commands from 
\family typewriter
mesh_tet4_1000m.lagrit
\family default
.
 For example, the first six commands, which define the block shape, are
\end_layout

\begin_layout LyX-Code
define / domain_xm / -3.0e+3
\end_layout

\begin_layout LyX-Code
define / domain_xp /  3.0e+3
\end_layout

\begin_layout LyX-Code
define / domain_ym / -3.0e+3
\end_layout

\begin_layout LyX-Code
define / domain_yp /  3.0e+3
\end_layout

\begin_layout LyX-Code
define / domain_zm / -4.0e+3
\end_layout

\begin_layout LyX-Code
define / domain_zp /  0.0e+3 
\end_layout

\begin_layout Standard
Continuing through the remainder of the commands in 
\family typewriter
mesh_tet4_1000m.lagrit
\family default
, you will eventually end up with the files 
\family typewriter
tet4_1000m_binary.gmv
\family default
, 
\family typewriter
tet4_1000m_ascii.gmv
\family default
, 
\family typewriter
tet4_1000m_ascii.pset
\family default
, and 
\family typewriter
tet4_1000m_binary.pset
\family default
.
 The ASCII files are not actually needed, but we create them so users can
 see what is contained in the files.
 These files may also be used instead of the binary versions, if desired.
 The 
\family typewriter
.gmv
\family default
 files define the mesh information, and they may be read directly by the
 
\begin_inset LatexCommand htmlurl
name "GMV"
target "laws.lanl.gov/XCM/gmv/GMVHome.html"

\end_inset

 mesh visualization package.
 The 
\family typewriter
.pset
\family default
 files specify the vertices corresponding to each boundary used in the problem,
 including the fault as well as external boundaries to which boundary conditions
 are applied.
 This mesh may then be used for the examples described below.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Standard
\align center
\begin_inset Graphics
	filename figs/tet4-mesh.jpg
	lyxscale 50
	scale 45

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Caption

\begin_layout Standard
Mesh used for the two tetrahedra examples.
 The different colors represent the different material groups.
\begin_inset LatexCommand label
name "fig:3dtet4-mesh"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Additional Common Information
\end_layout

\begin_layout Standard
In addition to the mesh, the two example problems share additional information.
 For problems of this type, it is generally useful to create a file named
 
\family typewriter
pylithapp.cfg
\family default
 in the run directory, since this file is read automatically every time
 PyLith is run.
 Settings specific to a particular problem may be placed in other 
\family typewriter
.cfg
\family default
 files, as described later, and then those files are placed on the command
 line.
  The settings contained in 
\family typewriter
pylithapp.cfg
\family default
 for this problem consist of:
\end_layout

\begin_layout Description
pylithapp.journal.info Settings that control the verbosity of the output for
 the different components.
\end_layout

\begin_layout Description
pylithapp.mesh_generator Settings that control mesh importing, such as the
 importer type, the filenames, and the spatial dimension of the mesh.
\end_layout

\begin_layout Description
pylithapp.timedependent Settings that control the problem, such as the total
 time, time step size, and number of entries in the material array.
\end_layout

\begin_layout Description
pylithapp.timedependent.materials Settings that control the material type,
 specify which material IDs are to be associated with a particular material
 type, and give the name of the spatial database containing material parameters
 for the mesh.
 The quadrature information is also given.
\end_layout

\begin_layout Description
pylithapp.petsc PETSc settings to use for the problem, such as the preconditioner
 type.
\end_layout

\begin_layout Standard
Since these examples use LaGriT format, we set the importer to 
\family typewriter
MeshIO
\family default
Lagrit:
\end_layout

\begin_layout LyX-Code
[pylithapp.mesh_generator]
\end_layout

\begin_layout LyX-Code
importer = pylith.meshio.MeshIOLagrit
\end_layout

\begin_layout LyX-Code
 
\end_layout

\begin_layout LyX-Code
[pylithapp.mesh_generator.importer]
\end_layout

\begin_layout LyX-Code
filename_gmv = tet4_1000m_binary.gmv
\end_layout

\begin_layout LyX-Code
filename_pset = tet4_1000m_binary.pset
\end_layout

\begin_layout LyX-Code
flip_endian = True
\end_layout

\begin_layout LyX-Code
# record_header_32bit = False
\end_layout

\begin_layout Standard
Notice that there are a couple of settings pertinent to binary files.
 The first flag (
\family typewriter
flip_endian
\family default
) is used if the binary files were produced on a machine with a different
 endianness than the machine on which they are being read.
 If you get an error when attempting to run an example, you may need to
 change the setting of this flag.
 The second flag (
\family typewriter
record_header_32bit
\family default
) may need to be set to 
\family typewriter
False
\family default
 if the version of LaGriT being used has 64-bit Fortran record headers.
 
\end_layout

\begin_layout Standard
This example differs from most other examples, because we specify four material
 groups:
\end_layout

\begin_layout LyX-Code
[pylithapp.timedependent]
\end_layout

\begin_layout LyX-Code
materials = elastic_neg1,elastic_neg2,elastic_pos1,elastic_pos2
\end_layout

\begin_layout LyX-Code
 
\end_layout

\begin_layout LyX-Code
[pylithapp.timedependent.materials.elastic_pos1]
\end_layout

\begin_layout LyX-Code
label = Elastic material +x (upper)
\end_layout

\begin_layout LyX-Code
id = 1
\end_layout

\begin_layout LyX-Code
db.iohandler.filename = mat_elastic.spatialdb
\end_layout

\begin_layout LyX-Code
quadrature = pylith.feassemble.quadrature.Quadrature3D
\end_layout

\begin_layout LyX-Code
quadrature.cell = pylith.feassemble.FIATSimplex
\end_layout

\begin_layout LyX-Code
quadrature.cell.shape = tetrahedron
\end_layout

\begin_layout LyX-Code
 
\end_layout

\begin_layout LyX-Code
[pylithapp.timedependent.materials.elastic_neg1]
\end_layout

\begin_layout LyX-Code
label = Elastic material -x (upper)
\end_layout

\begin_layout LyX-Code
id = 2
\end_layout

\begin_layout LyX-Code
db.iohandler.filename = mat_elastic.spatialdb
\end_layout

\begin_layout LyX-Code
quadrature = pylith.feassemble.quadrature.Quadrature3D
\end_layout

\begin_layout LyX-Code
quadrature.cell = pylith.feassemble.FIATSimplex
\end_layout

\begin_layout LyX-Code
quadrature.cell.shape = tetrahedron
\end_layout

\begin_layout LyX-Code
 
\end_layout

\begin_layout LyX-Code
[pylithapp.timedependent.materials.elastic_pos2]
\end_layout

\begin_layout LyX-Code
label = Elastic material +x (lower)
\end_layout

\begin_layout LyX-Code
id = 3
\end_layout

\begin_layout LyX-Code
db.iohandler.filename = mat_elastic.spatialdb
\end_layout

\begin_layout LyX-Code
quadrature = pylith.feassemble.quadrature.Quadrature3D
\end_layout

\begin_layout LyX-Code
quadrature.cell = pylith.feassemble.FIATSimplex
\end_layout

\begin_layout LyX-Code
quadrature.cell.shape = tetrahedron
\end_layout

\begin_layout LyX-Code
 
\end_layout

\begin_layout LyX-Code
[pylithapp.timedependent.materials.elastic_neg2]
\end_layout

\begin_layout LyX-Code
label = Elastic material -x (lower)
\end_layout

\begin_layout LyX-Code
id = 4
\end_layout

\begin_layout LyX-Code
db.iohandler.filename = mat_elastic.spatialdb
\end_layout

\begin_layout LyX-Code
quadrature = pylith.feassemble.quadrature.Quadrature3D
\end_layout

\begin_layout LyX-Code
quadrature.cell = pylith.feassemble.FIATSimplex
\end_layout

\begin_layout LyX-Code
quadrature.cell.shape = tetrahedron 
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout Standard
The four material groups correspond to the four different colors in Figure
 
\begin_inset LatexCommand ref
reference "fig:3dtet4-mesh"

\end_inset

.
 In a more realistic example, we would have used a different database for
 each material; however, for this simple example, all material properties
 are contained in the file 
\family typewriter
mat_elastic.spatialdb
\family default
.
 One of the reasons that there are four material sets is because the boundary
 between material sets is used to define the fault surface.
 See the benchmarks for an example where these material sets are merged
 back together.
 Although the material groups are specified in 
\family typewriter
pylithapp.cfg
\family default
, the physical properties for the material model are given in 
\family typewriter
mat_elastic.spatialdb
\family default
.
 For this example, values describing three-dimensional elastic material
 properties are given at a single point, resulting in uniform material propertie
s.
\end_layout

\begin_layout Subsection
Shear Displacement Example
\end_layout

\begin_layout Standard
The first example problem is shearing of the mesh along the y-direction,
 with displacement boundary conditions applied on the planes corresponding
 to the minimum and maximum x-values.
 Parameter settings that override or augment those in 
\family typewriter
pylithapp.cfg
\family default
 are contained in the file 
\family typewriter
shearxy.cfg
\family default
.
 These settings are:
\end_layout

\begin_layout Description
pylithapp.timedependent Specifies an implicit formulation for the problem
 and specifies the array of boundary conditions.
\end_layout

\begin_layout Description
pylithapp.timedependent.implicit Specifies an array of two output managers,
 one for the full domain, and another for a subdomain corresponding to the
 ground surface.
\end_layout

\begin_layout Description
pylithapp.timedependent.bc.x_pos Specifies the boundary conditions for the
 right side of the mesh, defining which degrees of freedom are being constrained
 (
\family typewriter
x
\family default
 and 
\family typewriter
y
\family default
), providing the label (defined in 
\family typewriter
tet4_1000m_binary.pset
\family default
) defining the points desired, assigning a label to the boundary condition
 set, and giving the name of the spatial database defining the boundary
 conditions (
\family typewriter
fixeddisp_shear.spatialdb
\family default
).
\end_layout

\begin_layout Description
pylithapp.timedependent.bc.x_neg Specifies the boundary conditions for the
 left side of the mesh, defining which degrees of freedom are being constrained
 (
\family typewriter
x
\family default
 and 
\family typewriter
y
\family default
), providing the label (defined in 
\family typewriter
tet4_1000m_binary.
\family default
pset) defining the points desired, assigning a label to the boundary condition
 set, and giving the name of the spatial database defining the boundary
 conditions (
\family typewriter
fixeddisp_shear.spatialdb
\family default
).
\end_layout

\begin_layout Description
pylithapp.timedependent.bc.z_neg Specifies the boundary conditions for the
 bottom of the mesh, defining which degrees of freedom are being constrained
 (
\family typewriter
x
\family default
 and 
\family typewriter
y
\family default
), providing the label (defined in 
\family typewriter
tet4_1000m_binary.
\family default
pset) defining the points desired, assigning a label to the boundary condition
 set, and giving the name of the spatial database defining the boundary
 conditions (
\family typewriter
fixeddisp_shear.spatialdb
\family default
).
\end_layout

\begin_layout Description
pylithapp.problem.formulation.output.domain.writer Gives the base filename for
 VTK output over the entire domain (
\family typewriter
shearxy.vtk
\family default
).
\end_layout

\begin_layout Description
pylithapp.problem.formulation.output.subdomain Gives the label of the nodeset
 defining the subdomain and gives the base filename for VTK output over
 the subdomain corresponding to the ground surface (
\family typewriter
shearxy-groundsurf.vtk
\family default
).
\end_layout

\begin_layout Description
pylithapp.timedependent.materials.elastic_neg1.output Gives the base filename
 for state variable output files for the 
\family typewriter
elastic_neg1
\family default
 material set (
\family typewriter
shearxy-statevars-neg1.vtk
\family default
), and causes state variables to be averaged over all quadrature points
 in each cell.
\end_layout

\begin_layout Description
pylithapp.timedependent.materials.elastic_pos1.output Gives the base filename
 for state variable output files for the 
\family typewriter
elastic_pos1
\family default
 material set (
\family typewriter
shearxy-statevars-pos1.vtk
\family default
), and causes state variables to be averaged over all quadrature points
 in each cell.
\end_layout

\begin_layout Description
pylithapp.timedependent.materials.elastic_neg2.output Gives the base filename
 for state variable output files for the 
\family typewriter
elastic_neg2
\family default
 material set (
\family typewriter
shearxy-statevars-neg2.vtk
\family default
), and causes state variables to be averaged over all quadrature points
 in each cell.
\end_layout

\begin_layout Description
pylithapp.timedependent.materials.elastic_pos2.output Gives the base filename
 for state variable output files for the 
\family typewriter
elastic_pos2
\family default
 material set (
\family typewriter
shearxy-statevars-pos2.vtk
\family default
), and causes state variables to be averaged over all quadrature points
 in each cell.
\end_layout

\begin_layout Standard
The values for the Dirichlet boundary conditions are described in the file
 
\family typewriter
fixeddisp_shear.spatialdb
\family default
, as specified in 
\family typewriter
shearxy.cfg
\family default
.
 The format of all spatial database files is similar.
 Because data are being specified using two control points (rather than
 being uniform over the mesh, for example), the data dimension is one.
\end_layout

\begin_layout Standard
The files containing common information (
\family typewriter
tet4_1000m_binary.
\family default
gmv, 
\family typewriter
tet4_1000m_binary.pset
\family default
, 
\family typewriter
pylithapp.cfg
\family default
, 
\family typewriter
mat_elastic.spatialdb
\family default
) along with the problem-specific files (
\family typewriter
shearxy.cfg
\family default
, 
\family typewriter
fixeddisp_shear.spatialdb
\family default
) provide a complete description of the problem, and we can then run this
 example by typing
\end_layout

\begin_layout LyX-Code
pylith shearxy.cfg
\end_layout

\begin_layout Standard
Once the problem has run, ten files will be produced.
 The first file is named 
\family typewriter
shearxy_t0000000.vtk
\family default
.
 The 
\family typewriter
t0000000
\family default
 indicates that the output is for the first (and only) time step, corresponding
 to an elastic solution.
 This file contains mesh information as well as displacement values at the
 mesh vertices.
 The second file is named 
\family typewriter
shearxy-statevars-neg1_t0000000.vtk
\family default
.
 This file contains the state variables for each cell in the material group
 
\family typewriter
elastic_neg1
\family default
.
 The default fields are the total strain and stress fields.
 These values are computed at each quadrature point in the cell.
 We have requested that the values be averaged over all quadrature points
 for each cell; however, since we only have a single quadrature point for
 each linear tetrahedron, this will have no effect.
 The third file (
\family typewriter
shearxy-statevars-neg1_info.vtk
\family default
) gives the material properties used for the 
\family typewriter
elastic_neg1
\family default
 material set.
 Since we have not specified which properties to write, the default properties
 (
\family typewriter
mu
\family default
, 
\family typewriter
lambda
\family default
, 
\family typewriter
density
\family default
) are written.
 There are six additional files containing the state variables and material
 properties for each of the three additional material sets.
 The final file (
\family typewriter
shearxy-groundsurf_t0000000.vtk
\family default
) is analogous to 
\family typewriter
shearxy_t0000000.vtk
\family default
, but in this case the results are only given for a subset of the mesh correspon
ding to the ground surface.
 Also, the cells in this file are one dimension lower than the cells described
 in 
\family typewriter
shearxy_t0000000.vtk
\family default
, so they are triangles rather than tetrahedra.
 All of the 
\family typewriter
.vtk
\family default
 files may be used with a number of visualization packages.
 If the problem ran correctly, you should be able to generate a figure such
 as 
\begin_inset LatexCommand ref
reference "fig:3dtet4-shear"

\end_inset

, which was generated using ParaView.
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Standard
\align center
\begin_inset Graphics
	filename figs/shear.jpg
	lyxscale 50
	scale 45

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Caption

\begin_layout Standard
Color contours and vectors of displacement for the axial displacement example.
\begin_inset LatexCommand label
name "fig:3dtet4-shear"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Kinematic Fault Slip Example
\end_layout

\begin_layout Standard
The next example problem is a right-lateral fault slip applied on the vertical
 fault defined by 
\family typewriter
x = 0
\family default
.
 The left and right sides of the mesh are fixed in the 
\family typewriter
x
\family default
, 
\family typewriter
y
\family default
, and 
\family typewriter
z
\family default
 directions.
 Parameter settings that override or augment those in 
\family typewriter
pylithapp.cfg
\family default
 are contained in the file 
\family typewriter
dislocation.cfg
\family default
.
 These settings are:
\end_layout

\begin_layout Description
pylithapp.timedependent Specifies an implicit formulation for the problem,
 the array of boundary conditions, and the array of interfaces.
\end_layout

\begin_layout Description
pylithapp.timedependent.implicit Specifies an array of two output managers,
 one for the full domain, and another for a subdomain corresponding to the
 ground surface.
\end_layout

\begin_layout Description
pylithapp.timedependent.bc.x_pos Specifies the boundary conditions for the
 right side of the mesh, defining which degrees of freedom are being constrained
 (
\family typewriter
x
\family default
, 
\family typewriter
y
\family default
, and 
\family typewriter
z
\family default
), providing the label (defined in 
\family typewriter
tet4_1000m_binary.
\family default
pset) defining the points desired, and assigning a label to the boundary
 condition set.
 Rather than specifying a spatial database file to define the boundary condition
s, we use the default spatial database (FixedDOFDB) for the Dirichlet boundary
 condition, which sets the displacements to zero.
\end_layout

\begin_layout Description
pylithapp.timedependent.bc.x_neg Specifies the boundary conditions for the
 left side of the mesh, defining which degrees of freedom are being constrained
 (
\family typewriter
x
\family default
, 
\family typewriter
y
\family default
, and 
\family typewriter
z
\family default
), providing the label (defined in 
\family typewriter
tet4_1000m_binary.
\family default
pset) defining the points desired, and assigning a label to the boundary
 condition set.
 Rather than specifying a spatial database file to define the boundary condition
s, we use the default spatial database (FixedDOFDB) for the Dirichlet boundary
 condition, which sets the displacements to zero.
\end_layout

\begin_layout Description
pylithapp.timedependent.interfaces Gives the label (defined in 
\family typewriter
tet4_1000m_binary.
\family default
pset) defining the points on the fault, provides quadrature information,
 and then gives database names for material properties (needed for conditioning)
, fault slip, peak fault slip rate, and fault slip time.
\end_layout

\begin_layout Description
pylithapp.problem.formulation.output.output.writer Gives the base filename for
 VTK output over the entire domain (
\family typewriter
dislocation.vtk
\family default
).
\end_layout

\begin_layout Description
pylithapp.problem.formulation.output.subdomain Gives the label of the nodeset
 defining the subdomain and gives the base filename for VTK output over
 the subdomain corresponding to the ground surface (
\family typewriter
dislocation-groundsurf.vtk
\family default
).
\end_layout

\begin_layout Description
pylithapp.timedependent.interfaces.fault.output.writer Gives the base filename
 for cohesive cell output files (
\family typewriter
dislocation-fault.vtk
\family default
).
\end_layout

\begin_layout Description
pylithapp.timedependent.materials.elastic_neg1.output Gives the base filename
 for state variable output files for the 
\family typewriter
elastic_neg1
\family default
 material set (
\family typewriter
dislocation-statevars-neg1.vtk
\family default
), and causes state variables to be averaged over all quadrature points
 in each cell.
\end_layout

\begin_layout Description
pylithapp.timedependent.materials.elastic_pos1.output Gives the base filename
 for state variable output files for the 
\family typewriter
elastic_pos1
\family default
 material set (
\family typewriter
dislocation-statevars-pos1.vtk
\family default
), and causes state variables to be averaged over all quadrature points
 in each cell.
\end_layout

\begin_layout Description
pylithapp.timedependent.materials.elastic_neg2.output Gives the base filename
 for state variable output files for the 
\family typewriter
elastic_neg2
\family default
 material set (
\family typewriter
dislocation-statevars-neg2.vtk
\family default
), and causes state variables to be averaged over all quadrature points
 in each cell.
\end_layout

\begin_layout Description
pylithapp.timedependent.materials.elastic_pos2.output Gives the base filename
 for state variable output files for the 
\family typewriter
elastic_pos2
\family default
 material set (
\family typewriter
dislocation-statevars-pos2.vtk
\family default
), and causes state variables to be averaged over all quadrature points
 in each cell.
\end_layout

\begin_layout Standard
The fault example requires three additional database files that were not
 needed for the simple displacement example.
 The first file (
\family typewriter
finalslip.spatialdb
\family default
) specifies a constant value of 2 m of right-lateral fault slip that then
 tapers linearly to zero from 2 km to 4 km depth, and a linearly-varying
 amount of reverse slip, with a maximum of 0.25 m at the surface, linearly
 tapering to 0 m at 2 km depth.
 The data dimension is one since the data vary linearly along a vertical
 line.
 It is also necessary to specify the peak slip rate, which is done in the
 file 
\family typewriter
sliprate.spatialdb
\family default
.
 The peak slip rate of 1.0e6 m/s creates a step function for the slip time
 history.
 Finally, we must provide the time at which slip begins.
 The elastic solution begins at 
\begin_inset Formula $t=-dt$
\end_inset

, so this is the value given (
\begin_inset Formula $t=-1\sec$
\end_inset

) in 
\family typewriter
dislocation_sliptime.spatialdb
\family default
.
\end_layout

\begin_layout Standard
The files containing common information (
\family typewriter
tet4_1000m_binary.gmv
\family default
, 
\family typewriter
tet4_1000m_binary.pset
\family default
, 
\family typewriter
pylithapp.cfg
\family default
, 
\family typewriter
mat_elastic.spatialdb
\family default
) along with the problem-specific files (
\family typewriter
\size small
dislocation.cfg
\family default
, 
\family typewriter
finalslip.spatialdb
\family default
, 
\family typewriter
sliprate.spatialdb
\family default
, 
\family typewriter
sliptime.spatialdb
\family default
\size default
) provide a complete description of the problem, and we can then run this
 example by typing
\end_layout

\begin_layout LyX-Code
pylith dislocation.cfg
\end_layout

\begin_layout Standard
Once the problem has run, 12 files will be produced.
 The first file is named 
\family typewriter
dislocation_t0000000.vtk
\family default
.
 The 
\family typewriter
t0000000
\family default
 indicates that the output is for the first (and only) time step, corresponding
 to an elastic solution.
 This file contains mesh information as well as displacement values at the
 mesh vertices.
 The second file is named 
\family typewriter
dislocation-statevars-neg1_t0000000.vtk
\family default
.
 This file contains the state variables for each cell in the material group
 
\family typewriter
elastic_neg1
\family default
.
 The default fields are the total strain and stress fields.
 We have requested that the values be averaged over all quadrature points
 for each cell; however, since we only have a single quadrature point for
 each linear tetrahedron, this will have no effect.
 The third file (
\family typewriter
dislocation-statevars-neg1_info.vtk
\family default
) gives the material properties used for the 
\family typewriter
elastic_neg1
\family default
 material set.
 Since we have not specified which properties to write, the default properties
 (
\family typewriter
mu
\family default
, 
\family typewriter
lambda
\family default
, 
\family typewriter
density
\family default
) are written.
 There are six additional files containing the state variables and material
 properties for each of the three additional material sets.
 The tenth file (
\family typewriter
dislocation-groundsurf_t0000000.vtk
\family default
) is analogous to 
\family typewriter
dislocation_t0000000.vtk
\family default
, but in this case the results are only given for a subset of the mesh correspon
ding to the ground surface.
 Also, the cells in this file are one dimension lower than the cells described
 in 
\family typewriter
dislocation_t0000000.vtk
\family default
, so they are triangles rather than tetrahedra.
 The 11th file (
\family typewriter
dislocation-fault_t0000000.vtk
\family default
) gives the specified fault slip for each vertex on the fault, along with
 the computed traction change for the cohesive cell.
 The final file (
\family typewriter
dislocation-fault_info.vtk
\family default
) provides information such as the normal direction, final slip, and slip
 time for each vertex on the fault.
 All of the 
\family typewriter
.vtk
\family default
 files may be used with a number of visualization packages.
 If the problem ran correctly, you should be able to generate a figure such
 as
\begin_inset LatexCommand vref
reference "fig:3dtet-disloc"

\end_inset

, which was generated using ParaView.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Standard
\align center
\begin_inset Graphics
	filename figs/dislocation.jpg
	lyxscale 50
	scale 45

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Caption

\begin_layout Standard
Color contours and vectors of displacement for the kinematic fault example.
\begin_inset LatexCommand label
name "fig:3dtet-disloc"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_body
\end_document
