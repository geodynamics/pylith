#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass book
\begin_preamble

\end_preamble
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding latin1
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_amsmath 0
\use_esint 0
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1in
\topmargin 1in
\rightmargin 1in
\bottommargin 2in
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Tutorial-Two-tet4-geoproj"

\end_inset

Tutorial Using Two Tetrahedra with Georeferenced Coordinate System Mesh
\end_layout

\begin_layout Standard
PyLith features discussed in this tutorial:
\end_layout

\begin_layout Itemize
Quasi-static solution
\end_layout

\begin_layout Itemize
Mesh ASCII format
\end_layout

\begin_layout Itemize
Dirichlet boundary conditions
\end_layout

\begin_layout Itemize
Kinematic fault interface conditions
\end_layout

\begin_layout Itemize
Linearly elastic isotropic material
\end_layout

\begin_layout Itemize
VTK output
\end_layout

\begin_layout Itemize
Linear tetrahedral cells
\end_layout

\begin_layout Itemize
SimpleDB spatial database with geographic coordinates
\end_layout

\begin_layout Itemize
SCEC CVM-H spatial database
\end_layout

\begin_layout Itemize
ZeroDispDB spatial database
\end_layout

\begin_layout Standard
All of the files necessary to run the examples are contained in the directory
 
\family typewriter
examples/twocells/twotet4-geoproj.
\end_layout

\begin_layout Subsection
Overview
\end_layout

\begin_layout Standard
This tutorial is virtually identical to the other tutorial using two linear
 tetrahedra (See Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Tutorial-Two-tet4"

\end_inset

).
 The primary difference is in how the material properties are assigned.
 For this tutorial, the physical properties come from the SCEC CVM-H database
 (described in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:SCECCVMH-Impl"

\end_inset

).
 Using the SCEC CVM-H database is straightforward, requiring only a few
 modifications to 
\family typewriter
pylithapp.cfg
\family default
.
 Because the SCEC CVM-H database uses geographic coordinates, we must also
 use geographic coordinates in the PyLith mesh ASCII file and other spatial
 databases.
 Note that all of these geographic coordinate systems do not need to be
 the same.
 PyLith will automatically transform from one geographic coordinate system
 to another using the spatialdata package.
 The spatial databases should all use a georeferenced Cartesian coordinate
 system, such as a geographic projection to insure interpolation is performed
 properly.
 Since all aspects of this problem other than the material database and
 the coordinate system are identical to the examples in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Tutorial-Two-tet4"

\end_inset

, we only describe the kinematic fault problem in this tutorial.
\end_layout

\begin_layout Subsection
Mesh Description
\end_layout

\begin_layout Standard
The mesh consists of two tetrahedra forming a pyramid shape (Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:twotet4-geoproj-mesh"

\end_inset

).
 The mesh geometry and topology are described in the file 
\family typewriter
twotet4.mesh
\family default
, which is in PyLith mesh ASCII format.
 If you compare this mesh against the one used in 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Tutorial-Two-tet4"

\end_inset

, you will notice that, although the mesh topology is the same, the vertex
 coordinates are significantly different.
 We use zone 11 UTM coordinates with the NAD27 datum for the mesh.
 Although we used the same coordinate system as the SCEC CVM-H, we could
 have also used any other geographic projection supported by spatialdata
 and Proj.4.
 See Appendix 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Spatialdata:SimpleIOAscii"

\end_inset

 for other examples of using geographic coordinates.
 
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figs/twotet4-mesh.eps

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Mesh composed of two linear tetrahedral cells in a georeferenced coordinate
 system used for the example problems.
\begin_inset CommandInset label
LatexCommand label
name "fig:twotet4-geoproj-mesh"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Additional Common Information
\end_layout

\begin_layout Standard
This problem has some unique aspects compared to the other tutorials.
 First, all of the other tutorials use a Cartesian coordinate system, while
 this one uses a geographic coordinate system.
 In addition to using different vertex coordinates, we also define the coordinat
e system for the mesh in 
\family typewriter
pylithapp.cfg
\family default
:
\end_layout

\begin_layout LyX-Code
[pylithapp.mesh_generator.importer]
\end_layout

\begin_layout LyX-Code
coordsys = spatialdata.geocoords.CSGeoProj
\end_layout

\begin_layout LyX-Code
filename = twotet4.mesh
\end_layout

\begin_layout LyX-Code
coordsys.space_dim = 3
\end_layout

\begin_layout LyX-Code
 
\end_layout

\begin_layout LyX-Code
[pylithapp.mesh_generator.importer.coordsys]
\end_layout

\begin_layout LyX-Code
datum_horiz = NAD27
\end_layout

\begin_layout LyX-Code
datum_vert = mean sea level
\end_layout

\begin_layout LyX-Code
ellipsoid = clrk66
\end_layout

\begin_layout LyX-Code
 
\end_layout

\begin_layout LyX-Code
[pylithapp.mesh_generator.importer.coordsys.projector]
\end_layout

\begin_layout LyX-Code
projection = utm
\end_layout

\begin_layout LyX-Code
proj-options = +zone=11 
\end_layout

\begin_layout Standard
At the top level, we define the type of coordinate system, give the file
 describing the mesh, and give the number of spatial dimensions for the
 coordinate system.
 We then provide the horizontal datum and vertical datum for the coordinate
 system, along with the ellipsoid to be used.
 Finally, we specify a UTM projection, and specify zone 11 as the zone to
 be used.
\end_layout

\begin_layout Standard
In addition to the usual material information, we must specify that we want
 to use the 
\family typewriter
SCECCVMH
\family default
 database implementation:
\end_layout

\begin_layout LyX-Code
[pylithapp.timedependent.materials.material]
\end_layout

\begin_layout LyX-Code
db = spatialdata.spatialdb.SCECCVMH
\end_layout

\begin_layout LyX-Code
db.data_dir = /home/brad/data/sceccvm-h/vx53/bin
\end_layout

\begin_layout Standard
The first 
\family typewriter
db
\family default
 option defines 
\family typewriter
SCECCVMH
\family default
 as the spatial database to be used.
 The next line defines the location of the 
\family typewriter
vx53
\family default
 data files, and must be changed to the location specified by the user when
 the package is installed.
 The package may be obtained from Harvard's Structural Geology and Tectonics
 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

structure.harvard.edu/cvm-h
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
The final difference with the other examples is in the description of the
 spatial databases.
 They must also use geographic coordinates.
 Examining 
\family typewriter
dislocation_slip.spatialdb
\family default
, we find:
\end_layout

\begin_layout LyX-Code
// We are specifying the data in a projected geographic coordinate system.
\end_layout

\begin_layout LyX-Code
cs-data = geo-projected {
\end_layout

\begin_layout LyX-Code
  to-meters = 1.0
\end_layout

\begin_layout LyX-Code
  ellipsoid = clrk66
\end_layout

\begin_layout LyX-Code
  datum-horiz = NAD27
\end_layout

\begin_layout LyX-Code
  datum-vert = mean sea level
\end_layout

\begin_layout LyX-Code
  projector = projection {
\end_layout

\begin_layout LyX-Code
    projection = utm
\end_layout

\begin_layout LyX-Code
    units = m
\end_layout

\begin_layout LyX-Code
    proj-options = +zone=11
\end_layout

\begin_layout LyX-Code
  }
\end_layout

\begin_layout LyX-Code
}
\end_layout

\begin_layout Subsection
Kinematic Fault Slip Example
\end_layout

\begin_layout Standard
This example problem is a left-lateral fault slip applied between the two
 tetrahedral cells using kinematic cohesive cells.
 Note that we vary the amount of fault slip for each vertex with this example,
 as described in 
\family typewriter

\begin_inset Newline linebreak
\end_inset

dislocation_slip.spatialdb
\family default
.
 The vertices away from the fault are held fixed in the x, y, and z directions.
 Parameter settings that override or augment those in 
\family typewriter
pylithapp.cfg
\family default
 are contained in the file 
\family typewriter
dislocation.cfg
\family default
.
\end_layout

\begin_layout Standard
Recall that we condition problems with the kinematic fault interface using
 the material properties.
 Since the material properties are being defined using the SCEC CVM-H database,
 this same database should be used as the material database for the faults.
 This also applies to the AbsorbingDampers boundary condition.
\end_layout

\begin_layout Standard
The files containing common information (
\family typewriter
twotet4.mesh
\family default
, 
\family typewriter
pylithapp.cfg
\family default
) along with the problem-specific files (
\family typewriter
dislocation.cfg, dislocation_slip.spatialdb, dislocation_sliptime.spatialdb
\family default
) provide a complete description of the problem, and we can then run this
 example by typing
\end_layout

\begin_layout LyX-Code
pylith dislocation.cfg
\end_layout

\begin_layout Standard
If the problem ran correctly, you should be able to generate a figure such
 as Figure 
\begin_inset CommandInset ref
LatexCommand vref
reference "fig:twotet4-geoproj-disloc"

\end_inset

, which was generated using ParaView.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figs/dislocation.jpg
	lyxscale 50
	scale 33

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Color contours and vectors of displacement for the kinematic fault example
 using a mesh composed of two linear tetrahedral cells in a georeferenced
 coordinate system.
\begin_inset CommandInset label
LatexCommand label
name "fig:twotet4-geoproj-disloc"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_body
\end_document
