#LyX 1.4.3 created this file. For more info see http://www.lyx.org/
\lyxformat 245
\begin_document
\begin_header
\textclass book
\begin_preamble

\end_preamble
\language english
\inputencoding latin1
\fontscheme default
\graphics default
\paperfontsize default
\spacing single
\papersize default
\use_geometry true
\use_amsmath 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\leftmargin 1in
\topmargin 1in
\rightmargin 1in
\bottommargin 2in
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 2
\paperpagestyle default
\tracking_changes false
\output_changes false
\end_header

\begin_body

\begin_layout Chapter
Running PyLith
\end_layout

\begin_layout Section
Supported Finite Elements
\end_layout

\begin_layout Standard
PyLith currently only supports the 4-node linear tetrahedral and 8-node
 linear hexahedral elements.
 The node ordering must follow the convention shown in Figures\InsetSpace ~

\begin_inset LatexCommand \ref{fig:tet4}

\end_inset

 and\InsetSpace ~

\begin_inset LatexCommand \ref{fig:hex8}

\end_inset

.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Standard
\noindent
\align center
\begin_inset Graphics
	filename figs/tet4.eps

\end_inset

 
\end_layout

\begin_layout Caption
Linear tetrahedral finite element.
\end_layout

\begin_layout Standard
\begin_inset LatexCommand \label{fig:tet4}

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement t
wide false
sideways false
status collapsed

\begin_layout Standard
\align center
\begin_inset Graphics
	filename figs/hex8.eps

\end_inset

 
\end_layout

\begin_layout Caption
Linear hexahedral finite element.
\end_layout

\begin_layout Standard
\begin_inset LatexCommand \label{fig:hex8}

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Section
Input Files
\end_layout

\begin_layout Standard
PyLith gets its input from a variety of files.
 Most of these are associated with different kinds of boundary conditions.
 As a result only six files are required.
 The remaining files are only used when the associated boundary condition
 is used.
 See Appendix\InsetSpace ~

\begin_inset LatexCommand \ref{cha:File-Formats}

\end_inset

 for a detailed discussion of the file formats.
\end_layout

\begin_layout Standard
The first step in the simulation process involves partitioning the mesh
 among the processors.
 In this phase, PyLith reads in the entire mesh and then writes out processor-sp
ecific pieces with one file for each processor.
 The file names for these follow the convention 
\family typewriter
xx.PROC.ext
\family default
 where 
\family typewriter
PROC
\family default
 refers to the processor number and 
\family typewriter
xx.ext
\family default
 is the original file name.
 This procedure is applied to files with the following extensions:
\family typewriter
 coord, connect, split, bc
\family default
, and 
\family typewriter
traction
\family default
.
 The remaining files provide information common to all processors, and thus
 do not require separate files for each processor.
\end_layout

\begin_layout Standard
In some cases, a user may want to run the same simulation using different
 numbers of processors.
 In this case, users may wish to provide distinctive sets of file names
 to distinguish between the different runs.
 Setting up this naming scheme is most easily done using symbolic links
 or copying files to local directories on each machine using a shell script
 that starts a simulation.
 See 
\family typewriter
mklinks.py
\family default
 in Section\InsetSpace ~

\begin_inset LatexCommand \ref{sec:Tutorial-Using-Reverse-Slip}

\end_inset

 for a simple example.
 You can also choose your own file-name template by setting the appropriate
 parameters.
 See Section\InsetSpace ~

\begin_inset LatexCommand \ref{sec:setting:parameters}

\end_inset

 for more information.
\end_layout

\begin_layout Subsection
Required Input Files
\end_layout

\begin_layout Standard
The required input files define the finite-element mesh, boundary conditions,
 time-step information, output, and material properties.
\end_layout

\begin_layout Description

\family typewriter
xx.coord
\family default
 Coordinates of finite-element vertices.
 
\end_layout

\begin_layout Description

\family typewriter
xx.connect
\family default
 Topology and material information for the finite-element mesh.
 
\end_layout

\begin_layout Description

\family typewriter
xx.bc
\family default
 Boundary conditions at vertices on external boundaries.
 
\end_layout

\begin_layout Description

\family typewriter
xx.time 
\family default
Time stepping information.
 
\end_layout

\begin_layout Description

\family typewriter
xx.statevar
\family default
 State variables to be output for the elastic and (time-dependent) viscoelastic
 solution.
 
\end_layout

\begin_layout Description

\family typewriter
xx.prop
\family default
 Properties for each material.
 
\end_layout

\begin_layout Subsection
Optional Input Files
\end_layout

\begin_layout Standard
The optional input files are only read when a file exists matching the name
 of an input file PyLith expects to read.
 Note that explicit file names for each of the files can be specified using
 command-line arguments, with 
\family typewriter
.cfg
\family default
 files, or with 
\family typewriter
.pml
\family default
 files, as discussed in Section\InsetSpace ~

\begin_inset LatexCommand \ref{sec:setting:parameters}

\end_inset

.
\end_layout

\begin_layout Description

\family typewriter
\color black
xx.fuldat 
\family default
\color none
Time steps for which full output is requested.
 
\shape italic
Required for time-dependent problems.
\end_layout

\begin_layout Description

\family typewriter
\color black
xx.split
\family default
\color none
 Dislocation boundary condition information (implemented using split nodes).
 
\end_layout

\begin_layout Description

\family typewriter
\color black
xx.traction
\family default
\color none
 Traction boundary condition information.
\end_layout

\begin_layout Description

\family typewriter
\color black
xx.skew
\family default
\color none
 Local coordinate rotation information for boundary conditions.
 
\shape italic
Not yet implemented.
\end_layout

\begin_layout Description

\family typewriter
\color black
xx.keyval
\family default
\color none
 File for changing default parameters.
 
\shape italic
Now considered obsolete.
 Use 
\family typewriter
.cfg
\family default
 file instead.
\end_layout

\begin_layout Description

\family typewriter
\color black
xx.wink
\family default
\color none
 Winkler spring element boundary condition information.
 
\emph on
 Not yet implemented.

\emph default
 
\end_layout

\begin_layout Description

\family typewriter
\color black
xx.hist
\family default
\color none
 Time histories for split nodes and boundary conditions (if necessary).
  
\emph on
Not yet tested.

\emph default
 
\end_layout

\begin_layout Section
Setting Parameters for PyLith
\end_layout

\begin_layout Standard
\begin_inset LatexCommand \label{sec:setting:parameters}

\end_inset


\end_layout

\begin_layout Standard
There are several methods for setting input parameters for 
\family typewriter
pylith3dapp.py
\family default
: via the command line, or by using a configuration file in 
\family typewriter
.cfg
\family default
 or 
\family typewriter
.pml
\family default
 format.
 PyLith gathers many simulation parameters and settings using Pyre properties
 and facilities.
 Properties correspond to simple settings in the form of strings, integers,
 and real numbers.
 Facilities correspond to software modules.
 Both facilities and properties have default values provided, so you only
 need to set values when you want to deviate from the default behavior.
 Unless you write a module that extends PyLith's functionality, you will
 never need to change any of the facilities from the defaults.
\end_layout

\begin_layout Subsection
Using the Command Line
\end_layout

\begin_layout Standard
Pyre uses the following syntax to change properties from the command line.
 To change the value of a property of a component, use:
\end_layout

\begin_layout LyX-Code

\family typewriter
--[component].[property]=[value]
\end_layout

\begin_layout Standard
Each component is attached to a facility, so the option above can also be
 written as: 
\end_layout

\begin_layout LyX-Code

\family typewriter
--[facility].[property]=[value]
\end_layout

\begin_layout Standard
Each facility has a default component attached to it.
 A different component can be attached to a facility by:
\end_layout

\begin_layout LyX-Code

\family typewriter
--[facility]=[new_component] 
\end_layout

\begin_layout Standard
In general, PyLith's command-line arguments fall into three categories:
 MPI settings, Pyre/PyLith properties and facilities, and PETSc settings.
 You can get more information on the available options by typing
\end_layout

\begin_layout LyX-Code

\family typewriter
$ pylith3dapp.py --help
\end_layout

\begin_layout Standard
All PyLith-related properties are associated with the 
\family typewriter
pylith3d
\family default
 component.
 You can get a list of all of these properties along with a description
 of what they do by running PyLith with the 
\family typewriter
--pylith3d.help-properties
\family default
 command-line argument.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Quote
\noindent

\family typewriter
\color black
$ pylith3dapp.py --pylith3d.help-properties --pylith3d.fileRoot=
\shape italic
test
\shape default
 --pylith3d.asciiOutput=
\emph on
none
\emph default
 --pylith3d.title=
\emph on
"My simulation"
\emph default
 
\end_layout

\begin_layout Caption
Setting PyLith properties from the command line.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Using a 
\family typewriter
.cfg
\family default
 File
\end_layout

\begin_layout Standard
Entering all those parameters via the command line involves the risk of
 typographical errors, which can lead to undesired results.
 You may find it easier to write a brief 
\family typewriter
.cfg
\family default
 input file that contains the parameters.
 This file has a format similar to a Windows INI file.
 The file is composed of one or more sections which are formatted as follows:
\end_layout

\begin_layout LyX-Code
[pylith3d.component1.component2]
\end_layout

\begin_layout LyX-Code
# this is a comment
\end_layout

\begin_layout LyX-Code
property1 = value1
\end_layout

\begin_layout LyX-Code
property2 = value2 ; this is another comment
\end_layout

\begin_layout Standard
We strongly recommend that you use 
\family typewriter
.cfg
\family default
 files for your work.
 The files are syntax-colored by the vim editor.
\end_layout

\begin_layout Subsection
Using a 
\family typewriter
.pml
\family default
 File
\end_layout

\begin_layout Standard
A 
\family typewriter
.pml
\family default
 file is an XML file that specifies parameter values in a highly structured
 format.
 It is composed of nested sections which are formatted as follows:
\end_layout

\begin_layout LyX-Code
<component name='component1'>
\end_layout

\begin_layout LyX-Code
    <component name='component2'>
\end_layout

\begin_layout LyX-Code
        <property name='property1'>value1</property>
\end_layout

\begin_layout LyX-Code
        <property name='property2'>value2</property>
\end_layout

\begin_layout LyX-Code
    </component>
\end_layout

\begin_layout LyX-Code
</component>
\end_layout

\begin_layout Standard
XML files are intended to be read and written by machines, not edited manually
 by humans.
 The 
\family typewriter
.pml
\family default
 file format is intended for applications in which PyLith input files are
 generated by another program, e.g., a GUI, web application, or a high-level
 structured editor.
 This file fomat will not be discussed further here.
 But if you are interested in using 
\family typewriter
.pml
\family default
 files, note that 
\family typewriter
.pml
\family default
 files and 
\family typewriter
.cfg
\family default
 files can be used interchangeably; in the following discussion, a file
 with a 
\family typewriter
.pml
\family default
 extension can be substituted anywhere a 
\family typewriter
.cfg
\family default
 file can be used.
\end_layout

\begin_layout Subsection
Specification and Placement of Configuration Files
\end_layout

\begin_layout Standard
Configuration files may be specified on the command line:
\end_layout

\begin_layout LyX-Code
$ pylith3dapp.py example.cfg
\end_layout

\begin_layout Standard
In addition, the Pyre framework searches for configuration files named 
\family typewriter
pylith3d.cfg
\family default
 in several predefined locations.
 You may put settings in any or all of these locations, depending on the
 scope you want the settings to have:
\end_layout

\begin_layout Enumerate

\family typewriter
PREFIX/etc/pylith3d.cfg
\family default
, for system-wide settings;
\end_layout

\begin_layout Enumerate

\family typewriter
$HOME/.pyre/pylith3d/pylith3d.cfg
\family default
, for user settings and preferences;
\end_layout

\begin_layout Enumerate
the current directory (
\family typewriter
./pylith3d.cfg
\family default
), for local overrides.
 
\end_layout

\begin_layout Standard
Parameters given directly on the command line will override any input contained
 in a configuration file.
 Configuration files given on the command line override all others.
 The 
\family typewriter
pylith3d.cfg
\family default
 files placed in (3) will override those in (2), (2) overrides (1), and
 (1) overrides only the built-in defaults.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="3">
<features>
<column alignment="left" valignment="top" leftline="true" width="0.9in">
<column alignment="center" valignment="middle" leftline="true" width="0.8in">
<column alignment="left" valignment="top" leftline="true" rightline="true" width="4in">
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Property
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Default Value
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\series bold
Description
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
log_summary
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\shape italic
true
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Print logging objects and events.
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ksp_monitor
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\shape italic
true
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Dump preconditioned residual norm to stdout.
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ksp_view
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\shape italic
true
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Print linear solver parameters.
 
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
ksp_rtol
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\shape italic
1.0e-09
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Convergence tolerance for relative decrease in residual norm.
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
pc_type
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\shape italic
bjacobi
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Set preconditioner type to block Jacobi.
 See PETSc documentation for a list of all preconditioner types.
 
\end_layout

\end_inset
</cell>
</row>
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
sub_pc_type
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\shape italic
ilu
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Set preconditioner to incomplete factorization for each block.
 See PETSc documentation for a list of all preconditioners.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{tab:Useful-command-line-arguments}

\end_inset

Useful command-line arguments for setting PETSc options.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
PETSc Settings
\end_layout

\begin_layout Standard
PyLith relies on PETSc for the linear algebra computations.
 Many PETSc options can be set in 
\family typewriter
.cfg
\family default
 files.
 The ones of primary interest in the case of PyLith are shown in Table\InsetSpace ~

\begin_inset LatexCommand \ref{tab:Useful-command-line-arguments}

\end_inset

.
\end_layout

\begin_layout Standard

\end_layout

\end_body
\end_document
