Greetings,

I am pleased to announce the release of PyLith 1.3.0, a finite-element
code designed to solve dynamic elastic problems and quasi-static
viscoelastic problems in tectonic deformation.

This release adds two new time stepping options (nonuniform
user-specified and automatic constitutive model controlled) and
permits specification of an initial stress state. This release also
includes some minor improvements to the Sieve implementation, fixes
one bug, and corrects typos in the manual and installation
instructions. We encourage all users of previous PyLith releases to
switch to this latest release.

You can download the source code and binaries from

    http://geodynamics.org/cig/software/packages/short/pylith

Installation instructions are in the bundled README and INSTALL  
files, as well as in the User Manual on the web page.


RELEASE NOTES

  * Time stepping options

    In addition to a uniform, user-specified time step, which is the
    default, there are two new time-stepping options. The user may
    supply a file with nonuniform time steps or, for quasi-static
    simulations, the user can request the code to compute the time
    step automatically. For the current bulk constitutive models, the
    automatically determined time step is independent of the
    deformation rate, so it is uniform.

  * Initial stresses

    Users may optionally supply an initial stress state for each
    material via a spatial database. The initial stress state can
    balance the gravitational body forces so that the model is in
    equilibrium without any deformation. This implementation of an
    initial stress state is a prelude to specifying an initial state
    for each material, which will be available in a future release.

  * Bug fixes

    - Fixed labeling of physical properties in output for the Maxwell
      viscoelastic and generalized Maxwell viscoelastic materials (mu
      and lambda were switched).

MIGRATING FROM VERSION 1.2 TO 1.3

  The implementation of different options for controlling the time
  step requires adjusting input parameters from those used with PyLith
  1.2. The time stepping is not specified under the time-stepping
  formulation rather than the problem (i.e., one level deeper).
