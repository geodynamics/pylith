Greetings,

I am pleased to announce the release of PyLith 1.8.1, a finite-element
code designed to solve dynamic elastic problems and quasi-static
viscoelastic problems in tectonic deformation.

This release fixes a few bugs in PyLith v1.8.0. We strongly recommend
all users of previous PyLith releases switch to this latest
release.

See the README file for changes required to switch to the v1.8.x
release series from previous versions.

You can download the source code and binaries from

    http://geodynamics.org/cig/software/packages/short/pylith

Detailed installation instructions for the binary packages are in the
User Manual with detailed building instructions for a few platforms in
the INSTALL file bundled with the PyLith Installer utility.


RELEASE NOTES - PyLith v1.8.1

* Bug fixes

  - Fixed two MPI related bugs in computing Green's functions in
    parallel. The number of impulses corresponded to only those on
    processor 0.

  - Fixed bug when reading in list of output points with just one
    point.

  - Adjusted autoconf Python setup macro to remove temporary
    sysconfig.pyc file.

  - Added check to make sure degree of freedom specified in Dirichlet
    BC is consistent with spatial dimension of problem.

  - Corrected two typos in the manual related to fault opening and
    tractions in examples/3d/hex8/step20 and updating to the use of
    cell.dimension for the quadrature scheme with tets.

RELEASE NOTES - PyLith v1.8.0

* New features

  * Additional flexibility in PETSc nonlinear solver parameters

    The default line search type for the PETSc nonlinear (SNES) solver
    is a customized backtrace method included in PyLith. The user may
    now select alternative line search types (basic, bt, l2, cp)
    available in PETSc.

  * Post-processing utility pylith_eqinfo to compute slip information.

    This post-processing utility computes the moment magnitude,
    seismic moment, seismic potency, and average slip at
    user-specified snapshots in time from PyLith HDF5 output.
    Information is given for each fault and across all faults. See
    the Post-processing section of the manual in the Running PyLith
    chapter for more information.

  * Computation of the stable time step for explicit time-stepping.

    The stable time step for explicit time-stepping is computed based
    on the CFL condition and minimum edge lengths. For triangular and
    tetrahedral cells we also account for a reduction in the stable
    time step due to distorted cells (e.g., slivers and needles). See
    the Stable time step section in the Materials chapter of the
    manual for more information.

  * Output the stable time step for each cell in a material.
 
    Output cell_info_fields "stable_dt_implicit" and
    "stable_dt_explicit" can be included in material output.

  * Added netCDF Python module to binary distribution to provide
    Python interface to NetCDF files, including Exodus-II files. This
    is used in a new meshing example for setting the discretization
    size using an Exodus-II vertex field. Note that this required
    updating the NetCDF library.

  * New CUBIT meshing examples demonstrating how to merge surfaces and
    use and an Exodus-II vertex field to specify the discretization
    size.
    + examples/meshing/surface_nurbs/merge_surfs
    + examples/meshing/cubit_cellsize

* Bug fixes

  - Fixed omission of synchronization of stable time step computation
    among processors. Minimum time step among all processors rather
    than local value should be used.

  - Fixed density scale not being set in NondimElasticQuasistatic.
    Density scale should be set based on shear modulus, length scale,
    and relaxation time.

  - Added warning when initial state for a fault constitutive model is
    not set. If an initial state value is not given, for rate-state
    friction using a default value of L / reference slip rate. Other
    fault constitutive models use a default value of 0.0 for initial
    state variables.

  - Separated tensor components in Xdmf files to avoid confusion. The
    corresponding HDF5 files remain unchanged.

  - Removed explicit time-stepping formulation with non-lumped
    Jacobian. This formulation was not setup properly for spontaneous
    rupture models and is too computationally expensive for practical
    problems. The ExplicitLumped* formulations are now simply Explicit*.

  - Fixed parallel bug that resulting in inconsistent orientation of
    fault slip directions. Flipping the fault orientation was not
    synchronized across processors. This bug would only appear when
    running in parallel with faults that change from dipping in one
    direction to dipping in the opposite direction.

  - Fixed bug in setting name of field in OutputSolnPoints when output
    multiple fields. This bug caused the name of the first output
    field to be used and output data to overwrite each other.

