Greetings,

I am pleased to announce the release of PyLith 1.3.1, a finite-element
code designed to solve dynamic elastic problems and quasi-static
viscoelastic problems in tectonic deformation.

This release fixes several bugs associated with running PyLith in
parallel, including selection of the partitioner, calculating the
change in tractions on the fault surface, and quasi-static time
stepping. The PETSc logging has been enhanced by separating the events
using stages. This release also includes some minor performance
improvements to the Sieve implementation. We encourage all users of
previous PyLith releases to switch to this latest release.

You can download the source code and binaries from

    http://geodynamics.org/cig/software/packages/short/pylith

Installation instructions are in the bundled README and INSTALL  
files, as well as in the User Manual on the web page.


RELEASE NOTES

  * Added stages to PETSc logging (--petsc.log_summary=1) to collect
    event logging into groups.

  * Added ability to set the minimum shear wave speed in SCEC CVM-H
    queries. This prevents using physical properties that correspond
    to a nearly incompressible elastic material.

  * Bug fixes

    - Fixed partitioning options. Partitioning options were ignored in
      the 1.3.0 release.

    - Fixed assembling of Jacobian, residual, and fault sections
      across processors. This bug caused errors in the computation of
      the change in tractions over the fault surface and errors while
      time-stepping in parallel.

    - Fixed bug where fault material property databases were not
      closed, resulting in memory not being deallocated.

IMPORTANT NOTE ON UNIT TESTS

  Several unit tests in this release will fail, but this release has
  been thoroughly checked to verify that it produces correct
  results. The failing unit tests are associated with new vertices
  being added to the opposite side of the fault during creation of the
  cohesive cells in some cases compared with previous
  implementations. Instead of changing the test data in many locations
  and potentially encountering this issue in the future, we are going
  to make the unit tests smarter. We will make another release when
  these unit tests are updated.
