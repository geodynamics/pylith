# Example of a keyword=value file to be used with TECTON.
# In this example, the default values are listed, but commented out.
# To change a default value, uncomment the appropriate entry and
# edit the value.
# With the present implementation, there should not be any spaces
# before the keyword.
#
# Non-default parameters to be used for SCEC BM 2.
#
# Scaling factors applied to Winkler forces.  These factors may be
# used as a quick and easy way of changing the density or gravitational
# acceleration when Winkler forces are used to simulate gravity.
#
#self.winklerScaleX = 1.0
#self.winklerScaleY = 1.0
#self.winklerScaleZ = 1.0
#
#
# Parameters controlling stress integration and numerical computation
# of the tangent material matrix.  These default values should be
# reasonable for most cases.
#
#self.stressTolerance = 1.0e-12*Pa
#self.minimumStrainPerturbation = 1.0e-7
#self.initialStrainPerturbation = 1.0e-1
#
#
# Parameters controlling the solution of the linear problem at each
# iteration.  At present, the only solution method is preconditioned
# conjugate gradients.  The user can select the preconditioner type,
# the maximum number of iterations, and the factors controlling
# convergence.  Preconditioner types are as follows:
#    diagonalNoUpdate:      Diagonal preconditioning with an initial
#                           guess of zero for the displacement vector.
#    gaussSeidelNoUpdate:   Symmetrized Gauss-Seidel preconditioner with
#                           an initial guess of zero for the displacement
#                           vector.
#    diagonalUpdate:        Diagonal preconditioning with an initial
#                           guess for the displacement vector corresponding
#                           to the displacement vector from the previous
#                           time step.
#    gaussSeidelUpdate:     Symmetrized Gauss-Seidel preconditioner with
#                           an initial guess for the displacement vector
#                           corresponding to the displacement vector from
#                           the previous time step.
#
#    Note that the diagonal preconditioners generally require more iterations,
#    but at less computational cost per iteration.  In theory, the more
#    complex preconditioner should work better for more irregular meshes.
#
#self.preconditionerType = "diagonalNoUpdate"
#self.maxPcgIterations = 3000
self.displacementAccuracyMult = 0.001
self.forceAccuracyMult = 0.001
self.energyAccuracyMult = 0.00001
#self.minDisplacementAccuracy = 1.0e-8
#self.minForceAccuracy = 1.0e-8
#self.minEnergyAccuracy = 1.0e-14
#
#
# Quadrature order for the problem.  At present, only values of 1 or 2 are
# available.
#
self.quadratureOrder = 1
#
#
# Gravitational acceleration in each direction.
#
#self.gravityX = 0.0*m/(s*s)
#self.gravityY = 0.0*m/(s*s)
self.gravityZ = -10.0*m/(s*s)
#
#
# Factors controlling computation of prestresses.  When gravity is being
# used, an automatic computation option may be used, using an alternate
# value for Poisson's ratio.  If prestressAutoComputePoisson is set to a
# negative value, the original Poisson's ratio is used.  Each prestress
# component may also be scaled.  This option is only useful if the
# prestresses are read from a file (and not automatically computed).
#
#self.prestressAutoCompute = False
#self.prestressQuadrature = 1
#self.prestressAutoComputePoisson = -0.49
#self.prestressScaleXx = 1.0
#self.prestressScaleYy = 1.0
#self.prestressScaleZz = 1.0
#self.prestressScaleXy = 1.0
#self.prestressScaleXz = 1.0
#self.prestressScaleYz = 1.0
#
#
# Scaling factors applied to differential Winkler forces.  Differential
# Winkler forces are those applied across a slippery node interface, and
# are generally used to keep the fault locked at certain times.  These
# factors control the magnitudes and provide a simple way of scaling the
# forces so the fault remains sufficiently 'locked'.
#
#self.winklerSlipScaleX = 1.0
#self.winklerSlipScaleY = 1.0
#self.winklerSlipScaleZ = 1.0
#
#
# Unit numbers used by f77.  These defaults should work for most Unix
# systems, but may be altered if necessary.
#
#self.f77StandardInput = 5
#self.f77StandardOutput = 6
#self.f77FileInput = 10
#self.f77AsciiOutput = 11
#self.f77PlotOutput = 12
