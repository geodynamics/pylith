# This is a sample material properties input file for TECTON.  The
# current code can handle elastic, power-law viscoelastic, and
# Drucker-Prager/von Mises plastic rheologies, or any combination
# of these.  At present, the determination of whether to use a
# viscous or plastic solution is controlled by the magnitudes of the
# parameters controlling those behaviors, as described below.  To
# summarize, if any material has a value of emhu less than 1.0e30, the
# viscous solution flag (ivisc) should be set to true, while if any
# material has a value of rk0 less than 1.0e30, the plastic solution
# flag (iplas) should be set to true.  The current parameters are:
#
#   n     = material type number.
#   e     = Young' modulus.
#   pois  = Poisson's ratio.
#   rho   = Density.
#   emhu  = Viscosity coefficient.
#   anpwr = Power-law exponent.
#   alpha = Pressure parameter for Drucker-Prager yield.
#   rk0   = Cohesion parameter for Drucker-Prager yield.
#   hards = Hardening parameter for Drucker-Prager yield.
#   volch = Amount of volume change (units of strain).  This can
#           represent either a prestrain or an expansion/contraction
#           for each time step (if time histories are used).
#           Positive values represent expansion.
#   mhist = Time history for material properties.
#
# Units must be defined for several of these parameters.  The units
# for viscosity coefficient are somewhat tricky.  The units are
# (stress*time)^(1/anpwr), rather than simple viscosity units (e.g.,
# Pa-s).
#
# Units for density (rho).
density_units               = kg/m**3
#
#  Temporarily remove the units for volume change, since units conversion
#  will probably not work for quantities such as 'microstrain'.
#
# volume_change_units = microstrain
#
# Young's modulus units.
youngs_modulus_units        = Pa
# Base units for viscosity coefficient.  The actual units will be these units
# to the 1/anpwr, as described above.
viscosity_coefficient_units = Pa*s
# Units for cohesion (rk0).
cohesion_units              = Pa
#
# In the finite element code, all of the properties (other than n) are
# stored in a single real array of dimension (nprop,numat).  This means
# that the mhist parameter is internally converted from real to
# integer.  Note also that the value of numat (which should be the
# number of entries read from this file) should correspond to the
# value obtained from the connectivity file.  For the current material
# types, nprop is always equal to 10, but this will change as new
# material types are added.
#
# n     e      pois  rho     emhu  anpwr alpha  rk0   hards volch mhist
  1  1.00e+00  .30     0.  2.0e+30  1.0  0.5  2.00E+30  0.0  0.0  0.0
