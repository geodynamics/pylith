# Sample connectivity input file for 3D problem.  The element number is
# not strictly necessary, but makes it easier to examine the file.
# This file also contains the material type associated with each element
# and the infinite element information.  The type of element described
# in this file is an 8-node hexahedron, but more element types will be
# available later.  The entries are as follows:

#   n     = element number.
#   mat   = material type for element.
#   infin = infinite domain element code.
#   ia(i) = node numbers for element.
#
# The following description of the input for this element is copied from
# a TECTON input file:
#
#    NODE NUMBERS ARE ENTERED COUNTERCLOCKWISE FROM LOWER LEFT CORNER:
#
#             FRONT FACE         BACK FACE (FOR 3D)
#
#             NODE4--NODE3       NODE8--NODE7
#               |      |           |      |
#             NODE1--NODE2       NODE5--NODE6
#
#    IF NODE3 = NODE4, ELEMENT IS ASSUMED TO BE TRIANGULAR.
#
#    THE INFINITE DOMAIN ELEMENT CODE IS AN INTEGER COMPOSED OF 3
#    DIGITS.  THE RIGHTMOST DIGIT IS THE CODE FOR THE FIRST LOCAL
#    COORDINATE DIRECTION (R-DIRECTION), THE MIDDLE DIGIT IS THE CODE
#    FOR THE SECOND LOCAL COORDINATE DIRECTION (S-DIRECTION), AND THE
#    LEFTMOST DIGIT IS THE CODE FOR THE THIRD LOCAL COORDINATE
#    DIRECTION.  THE FIRST LOCAL COORDINATE DIRECTION IS POSITIVE
#    MOVING FROM NODE 1 TO NODE 2 (AND FROM NODE 5 TO NODE 6 FOR 3D).
#    THE SECOND LOCAL COORDINATE DIRECTION IS POSITIVE MOVING FROM
#    NODE 2 TO NODE 3.  THE THIRD LOCAL COORDINATE DIRECTION IS
#    POSITIVE MOVING FROM NODE 5 TO NODE 1.  EACH DIGIT OF INFIN CAN
#    THEN HAVE ONE OF THREE VALUES:
#        0 = THE ELEMENT IS A REGULAR ELEMENT IN THIS DIRECTION
#        1 = THE ELEMENT IS INFINITE IN THE NEGATIVE DIRECTION
#        2 = THE ELEMENT IS INFINITE IN THE POSITIVE DIRECTION
#
# It is envisioned that several different types of elements could be
# defined in the same file, with each type delimited by a description
# consisting of a line such as:
# element_type = XXX
# The code that parses this file should return the number of elements of
# each type (at present it should just return the total number of
# elements, numel), as well as the total number of material types
# encountered (numat).  The information should be stored in 3 arrays
# (lists).  The material array should be stored in array mat of
# dimension numel, the infinite element array should be stored in array
# infin of dimension numel, and the connectivity array should be stored
# in array ien of dimension (nen,numel), where nen is the number of
# elements per node.
#
# Note:  The new idea is that there will be a separate file for each
# element type.  Thus, the element type description below is not
# needed.  Also, the present implementation does not allow comments
# within the connectivity information.
#
# element_type = linear_hex
#    N    MAT  INFIN  N1    N2    N3    N4    N5    N6    N7    N8
#
     1     1     0     4     5     2     1    13    14    11    10
     2     1     0     5     6     3     2    14    15    12    11
     3     1     0     7     8     5     4    16    17    14    13
     4     1     0     8     9     6     5    17    18    15    14
     5     1     0    13    14    11    10    22    23    20    19
     6     1     0    14    15    12    11    23    24    21    20
     7     1     0    16    17    14    13    25    26    23    22
     8     1     0    17    18    15    14    26    27    24    23
