# -*- Python -*-

[pylithapp]

# ----------------------------------------------------------------------
# journal
# ----------------------------------------------------------------------
[pylithapp.journal.info]
timedependent = 1
#absorbingdampers = 1
#explicit = 1
#petsc = 1
#meshiocubit = 1
#explicitelasticity = 1
#quadrature2d = 1
#fiatlagrange = 1
#faultcohesivedyn = 1

[pylithapp.journal.debug]
#pylithapp = 1
#problem = 1
#explicit = 1

# ----------------------------------------------------------------------
# mesh_generator
# ----------------------------------------------------------------------
[pylithapp.mesh_generator]
reader = pylith.meshio.MeshIOCubit

[pylithapp.mesh_generator.reader]
filename = SCEC2004.exo
coordsys.space_dim = 3

# ----------------------------------------------------------------------
# problem
# ----------------------------------------------------------------------
[pylithapp.timedependent]

dimension = 3

# Set interfaces to an array with 1 faults: 'fault'.
interfaces = [fault]

# Set materials to an array with 1 material 'elastic'.
materials = [elastic]

formulation = pylith.problems.Explicit
formulation.solver = pylith.problems.SolverNonlinear
#formulation = pylith.problems.ExplicitLumped

# Nondimensionalize problem using wave propagation parameters.
normalizer = spatialdata.units.NondimElasticDynamic
#normalizer.mass_density = 1000.0*kg/m**3
#normalizer.shear_wave_speed = 1.0*m/s
#normalizer.wave_period = 1.0*s
 
bc = [x_neg,x_pos,z_neg,y_neg,y_pos]

# Change the DirichletPoints BC to the AbsorbingDampers BC
bc.x_neg = pylith.bc.AbsorbingDampers
bc.x_pos = pylith.bc.AbsorbingDampers
bc.z_neg = pylith.bc.AbsorbingDampers
bc.y_neg = pylith.bc.AbsorbingDampers
bc.y_pos = pylith.bc.AbsorbingDampers

[pylithapp.timedependent.formulation.time_step]
total_time = 0.1*s
dt = 0.01*s


# ----------------------------------------------------------------------
# materials
# ----------------------------------------------------------------------
[pylithapp.timedependent]

materials = [elastic]
materials.elastic = pylith.materials.ElasticIsotropic3D
#materials.elastic = pylith.materials.Homogeneous

[pylithapp.timedependent.materials.elastic]
label = Elastic material
id = 1
db_properties.iohandler.filename = SCEC2004matprops.spatialdb
quadrature.cell = pylith.feassemble.FIATLagrange
quadrature.cell.dimension = 3


# ----------------------------------------------------------------------
# boundary conditions
# ----------------------------------------------------------------------
[pylithapp.timedependent.bc.x_pos]
label = 26
db.label = Absorbing BC +x
db.iohandler.filename = SCEC2004matprops.spatialdb
quadrature.cell = pylith.feassemble.FIATLagrange
quadrature.cell.dimension = 2

[pylithapp.timedependent.bc.x_neg]
label = 27
db.label = Absorbing BC -x
db.iohandler.filename = SCEC2004matprops.spatialdb
quadrature.cell = pylith.feassemble.FIATLagrange
quadrature.cell.dimension = 2

[pylithapp.timedependent.bc.z_neg]
label = 28
up_dir = [0, 1, 0]
db.label = Absorbing BC -z
db.iohandler.filename = SCEC2004matprops.spatialdb
quadrature.cell = pylith.feassemble.FIATLagrange
quadrature.cell.dimension = 2

[pylithapp.timedependent.bc.y_pos]
label = 22
db.label = Absorbing BC +y
db.iohandler.filename = SCEC2004matprops.spatialdb
quadrature.cell = pylith.feassemble.FIATLagrange
quadrature.cell.dimension = 2

[pylithapp.timedependent.bc.y_neg]
label = 23
db.label = Absorbing BC -y
db.iohandler.filename = SCEC2004matprops.spatialdb
quadrature.cell = pylith.feassemble.FIATLagrange
quadrature.cell.dimension = 2


# ----------------------------------------------------------------------
# faults
# ----------------------------------------------------------------------

# Provide information on the fault (interface).
[pylithapp.timedependent.interfaces]

fault = pylith.faults.FaultCohesiveDyn

[pylithapp.timedependent.interfaces.fault]

# Material id
id = 100

# Nodeset id from CUBIT
label = 10

# Specify the basis functions and quadrature:
# 1-D Lagrange cell in 2-D space with 2nd order quadrature
quadrature.cell = pylith.feassemble.FIATLagrange
quadrature.cell.dimension = 2
quadrature.cell.quad_order = 2

db_initial_tractions = spatialdata.spatialdb.SimpleDB
db_initial_tractions.iohandler.filename = SCEC2004initTract.spatialdb
db_initial_tractions.label = "Initial fault tractions"

friction = pylith.friction.SlipWeakening

friction.db_properties = spatialdata.spatialdb.UniformDB
friction.db_properties.label = Slip weakening
friction.db_properties.values = [static-coefficient,dynamic-coefficient,slip-weakening-parameter,cohesion]
friction.db_properties.data = [0.677,0.525,0.4*m,0.0*Pa]


# ----------------------------------------------------------------------
# PETSc
# ----------------------------------------------------------------------
[pylithapp.petsc]
ksp_type = gmres
pc_type = asm

# Change the preconditioner settings.
sub_pc_factor_shift_type = nonzero

ksp_rtol = 1.0e-8
ksp_atol = 1.0e-15
ksp_max_it = 200
ksp_gmres_restart = 250
snes_max_it = 300

#ksp_monitor = true
#ksp_view = true
ksp_converged_reason = true

snes_rtol = 1.0e-8
snes_atol = 1.0e-15
snes_monitor = true
#snes_view = true
snes_converged_reason = true

#log_summary = true

# ----------------------------------------------------------------------
# output
# ----------------------------------------------------------------------
# Give basename for VTK domain output of solution over domain.
[pylithapp.problem.formulation.output.output]
writer.filename = SCEC2004.vtk

# Give basename for VTK fault output.
[pylithapp.timedependent.interfaces.fault.output]
vertex_info_fields = [strike_dir,normal_dir,initial_traction]
writer.filename = SCEC2004-fault.vtk

# Give basename for VTK output of state variables.
[pylithapp.timedependent.materials.elastic.output]
cell_filter = pylith.meshio.CellFilterAvgMesh
writer.filename = SCEC2004-elastic.vtk
