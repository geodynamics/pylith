// Global mesh object.
// This defines a brick-shaped mesh composed of two cubic elements.
mesh = {

  // This is a 3D mesh.is is a 3D mesh.
  dimension = 3

  // We are using zero-indexing (default) rather than one-indexing.
  use-index-zero = true

  // Describe the vertices (nodes) defining the mesh.
  vertices = {

    // The vertices are defined in a 3D coordinate system.
    dimension = 3

    count = 45

    // List the coordinates as:
    // Vertex number (starting from zero), x-coord, y-coord, z-coord
    // Use coordinate units that are consistent with the other units used.
    coordinates = {
             0     -1.0 -0.5 -0.5
             1     -1.0  0.0 -0.5
             2     -1.0  0.5 -0.5
             3     -1.0 -0.5  0.0
             4     -1.0  0.0  0.0
             5     -1.0  0.5  0.0
             6     -1.0 -0.5  0.5
             7     -1.0  0.0  0.5
             8     -1.0  0.5  0.5
             9     -0.5 -0.5 -0.5
            10     -0.5  0.0 -0.5
            11     -0.5  0.5 -0.5
            12     -0.5 -0.5  0.0
            13     -0.5  0.0  0.0
            14     -0.5  0.5  0.0
            15     -0.5 -0.5  0.5
            16     -0.5  0.0  0.5
            17     -0.5  0.5  0.5
            18      0.0 -0.5 -0.5
            19      0.0  0.0 -0.5
            20      0.0  0.5 -0.5
            21      0.0 -0.5  0.0
            22      0.0  0.0  0.0
            23      0.0  0.5  0.0
            24      0.0 -0.5  0.5
            25      0.0  0.0  0.5
            26      0.0  0.5  0.5
            27      0.5 -0.5 -0.5
            28      0.5  0.0 -0.5
            29      0.5  0.5 -0.5
            30      0.5 -0.5  0.0
            31      0.5  0.0  0.0
            32      0.5  0.5  0.0
            33      0.5 -0.5  0.5
            34      0.5  0.0  0.5
            35      0.5  0.5  0.5
            36      1.0 -0.5 -0.5
            37      1.0  0.0 -0.5
            38      1.0  0.5 -0.5
            39      1.0 -0.5  0.0
            40      1.0  0.0  0.0
            41      1.0  0.5  0.0
            42      1.0 -0.5  0.5
            43      1.0  0.0  0.5
            44      1.0  0.5  0.5
    }
  }

  // Describe the cells (elements) composing the mesh.
  cells = {

    // There are 2 cells.
    count = 2

    // These are trilinear hexahedral cells, so there are 8 corners per cell.
    num-corners = 27

    // List the vertices composing each cell (see manual for ordering).
    // List the information as:
    // Cell number (starting from zero), vertex 0, vertex 1, etc.
    simplices = {
             0       0 18 20  2  6 24 26  8  9 19 11  1 15 25 17  7  3 21 23  5  4 22 12 14 10 16 13
             1      18 36 38 20 24 42 44 26 27 37 29 19 33 43 35 25 21 39 41 23 22 40 30 32 28 34 31
    }

    // List the material ID's associated with each cell.
    // Different ID's may be used to specify a different material type, or
    // to use a different spatial database for each material ID.
    // In this example, cells 0 and 1 both are associated with material ID 1.
    material-ids = {
             0   1
             1   1
    }
  }

  // Here we list different groups (cells or vertices) that we want to associate
  // with a particular name (ID).

  // This group of vertices may be used to define a fault.
  group = {
    name = fault
    type = vertices
    count = 9
    indices = {
      18 19 20
      21 22 23
      24 25 26
    }
  }

  // This group of vertices may be used to specify boundary conditions.
  group = {
    name = x_neg
    type = vertices
    count = 9
    indices = {
      0  1  2
      3  4  5
      6  7  8
    }
  }

  // This group of vertices may be used to specify boundary conditions.
  group = {
    name = x_pos
    type = vertices
    count = 9
    indices = {
      36 37 38
      39 40 41
      42 43 44
    }
  }

  // This group of vertices may be used to specify boundary conditions.
  group = {
    name = y_neg
    type = vertices
    count = 15
    indices = {
      0  3  6
      9 12 15
     18 21 24
     27 30 33
     36 39 42
    }
  }

  // This group of vertices may be used to specify boundary conditions.
  group = {
    name = y_pos
    type = vertices
    count = 15
    indices = {
      2  5  8
     11 14 17
     20 23 26
     29 32 35
     38 41 44    
    }
  }

  // This group of vertices may be used to specify boundary conditions.
  group = {
    name = z_neg
    type = vertices
    count = 15
    indices = {
      0  1  2
      9 10 11
     18 19 20
     27 28 29
     36 37 38
    }
  }

}
