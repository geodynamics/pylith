
# The settings in this file (axialdisp.cfg) will be read if it is
# specified on the command line:
# 'pylith axialdisp.cfg'

# If this file is given, the settings in this file will override all
# others except for parameters specified directly on the command line.

# These setting define an implicit problem with Dirichlet (displacement)
# boundary conditions extending the rectangular mesh along the x-axis.

[pylithapp]

# ----------------------------------------------------------------------
# problem
# Specify the problem settings.
# This is a time-dependent problem so we use that facility.
# ----------------------------------------------------------------------
[pylithapp.timedependent]

# We want an implicit formulation.
formulation = pylith.problems.Implicit

# Set bc to an array of 2 boundary conditions: 'x_neg' and 'x_pos'.
bc = [x_neg,x_pos]

# ----------------------------------------------------------------------
# boundary conditions
# ----------------------------------------------------------------------

# Boundary conditions to be applied to the negative x-side of the mesh.
[pylithapp.timedependent.bc.x_neg]

# We are fixing all 3 degrees of freedom.
bc_dof = [0, 1, 2]

# The nodes associated with this boundary condition have the name
# 'x_neg' in the mesh file.
label = x_neg

# Change spatial database for initial value from ZeroDispDB (which has
# a uniform spatial distribution) to SimpleDB (which uses a data file
# to specify a spatial variation).
db_initial = spatialdata.spatialdb.SimpleDB

# We are assigning the label 'Dirichlet BC -x face' to the database.
db_initial.label = Dirichlet BC -x face

# The name of the file containing the spatial database for the BC
# specification.
db_initial.iohandler.filename = axialdisp.spatialdb


# Boundary conditions to be applied to the positive x-side of the mesh.
[pylithapp.timedependent.bc.x_pos]

# We are fixing all 3 degrees of freedom.
bc_dof = [0, 1, 2]

# The nodes associated with this boundary condition have the name
# 'x_pos' in the mesh file.
label = x_pos

# Change spatial database for initial value from ZeroDispDB (which has
# a uniform spatial distribution) to SimpleDB (which uses a data file
# to specify a spatial variation).
db_initial = spatialdata.spatialdb.SimpleDB

# We are assigning the label 'Dirichlet BC +x face' to the database.
db_initial.label = Dirichlet BC +x face

# The name of the file containing the spatial database for the BC
# specification.
db_initial.iohandler.filename = axialdisp.spatialdb

# ----------------------------------------------------------------------
# output
# ----------------------------------------------------------------------
# Give basename for VTK output of solution over domain.
[pylithapp.problem.formulation.output.output.writer]
filename = axialdisp.vtk
time_format = %04.1f ; Time stamp will be xxx.x with the "." removed.
time_constant = 1.0*year ; Normalize time stamp by years

# Give basename for VTK output of state variables.
[pylithapp.timedependent.materials.material.output]
cell_filter = pylith.meshio.CellFilterAvg
writer.filename = axialdisp-statevars.vtk
writer.time_format = %04.1f 
writer.time_constant = 1.0*year
