# docker build --build-arg BASE_IMAGE=${VARIABLE_NAME} --build-arg TEST_COVERAGE=yes/no --build-arg PYTHON_COVERAGE=${COVERAGE_EXECUTABLE} -f DOCKERFILE . -t IMAGE_NAME .

# BUILD CIG DEPENDENCIES ----------
ARG BASE_IMAGE
from ${BASE_IMAGE} as base
ARG TEST_COVERAGE=no
ARG PYTHON_COVERAGE=coverage2
ENV TEST_COVERAGE=${TEST_COVERAGE} PYTHON_COVERAGE=${PYTHON_COVERAGE} 

LABEL maintainer="Brad Aagaard <baagaard@usgs.gov>"

USER ${PYLITH_USER}
ENV TOP_DIR /home/${PYLITH_USER}
RUN mkdir -p ${TOP_DIR}/src

# ------------------------------------------------------------------------------
# Environment for CIG dependencies
# ------------------------------------------------------------------------------
ENV DEPS_DIR /opt/pylith/dependencies
ENV CIG_DIR /opt/pylith/cig
ENV PATH ${PATH}:${CIG_DIR}/bin
ENV LD_LIBRARY_PATH ${LD_LIBRARY_PATH}:${CIG_DIR}/lib:${CIG_DIR}/lib64
ENV PYTHONPATH ${PYTHONPATH}:${CIG_DIR}/lib/python${PYTHON_VERSION}/site-packages:${CIG_DIR}/lib64/python${PYTHON_VERSION}/site-packages


# ------------------------------------------------------------------------------
# Install pythia
# ------------------------------------------------------------------------------
ENV SRC_DIR ${TOP_DIR}/src/pythia
RUN mkdir -p ${CIG_DIR}/lib/python${PYTHON_VERSION}/site-packages

RUN git clone --branch v0.8.1.20 --depth 1 --recursive https://github.com/geodynamics/pythia.git ${SRC_DIR}
WORKDIR ${SRC_DIR}
RUN python2 setup.py install --prefix=${CIG_DIR}

# ------------------------------------------------------------------------------
# Install nemesis
# ------------------------------------------------------------------------------
ENV SRC_DIR $TOP_DIR/src/nemesis
ENV BUILD_DIR $TOP_DIR/build/nemesis
RUN mkdir -p ${BUILD_DIR}

RUN git clone --branch v1.1.1 --depth 1 --recursive https://github.com/geodynamics/nemesis.git ${SRC_DIR}
WORKDIR ${SRC_DIR}
RUN autoreconf --install --verbose
WORKDIR ${BUILD_DIR}
RUN ${SRC_DIR}/configure --prefix=${CIG_DIR} CPPFLAGS=-I${CIG_DIR} && make && make install


# ------------------------------------------------------------------------------
# Install spatialdata
# ------------------------------------------------------------------------------
ENV SRC_DIR $TOP_DIR/src/spatialdata
ENV BUILD_DIR $TOP_DIR/build/spatialdata
RUN mkdir -p ${BUILD_DIR}

RUN git clone --branch v2.0.0 --depth 100 --recursive https://github.com/geodynamics/spatialdata.git ${SRC_DIR}
WORKDIR ${SRC_DIR}

RUN autoreconf --install --verbose --force
WORKDIR ${BUILD_DIR}
RUN ${SRC_DIR}/configure --prefix=${CIG_DIR} --enable-testing --enable-swig CPPFLAGS="-I${DEPS_DIR}/include -I${CIG_DIR}/include" LDFLAGS="-L${DEPS_DIR}/lib -L${CIG_DIR}/lib" CXXFLAGS="-g -O" && make -j$(nproc) && make install && make -j$(nproc) check VERBOSE=1


# ------------------------------------------------------------------------------
# Install PETSc
# ------------------------------------------------------------------------------
ENV PETSC_DIR /opt/pylith/petsc
ENV PETSC_ARCH arch-pylith
RUN mkdir -p ${PETSC_DIR}

RUN git clone --branch knepley/pylith --single-branch https://gitlab.com/petsc/petsc.git ${PETSC_DIR}
WORKDIR ${PETSC_DIR}

RUN python2 ./configure --download-chaco=1 --download-ml=1 --download-f2cblaslapack=1 --with-hdf5=1 --with-hdf5-include=${HDF5_INCDIR} --with-hdf5-lib=${HDF5_LIBDIR}/lib/libhdf5.so --with-zlib=1 --LIBS=-lz --with-debugging=1 --with-fc=0 --with-64-bit-points=1 --with-large-file-io=1 CPPFLAGS="-I${DEPS_DIR}/include" LDFLAGS="-L${DEPS_DIR}/lib" CFLAGS="-g -O" && make -j$(nproc) && make check


# ------------------------------------------------------------------------------
# Install pylith
# ------------------------------------------------------------------------------
from base as src

ENV SRC_DIR ${TOP_DIR}/src/pylith
ENV BUILD_DIR ${TOP_DIR}/build/pylith
RUN mkdir -p ${BUILD_DIR}

COPY --chown=pylith-user:pylith-user . ${SRC_DIR}
WORKDIR ${SRC_DIR}
RUN autoreconf --install --verbose --force

WORKDIR ${BUILD_DIR}
RUN ${SRC_DIR}/configure --prefix=${CIG_DIR}  --enable-hdf5 --enable-cubit --enable-testing --enable-swig CPPFLAGS="-I${DEPS_DIR}/include -I${CIG_DIR}/include -I${HDF5_INCDIR}" LDFLAGS="-L${DEPS_DIR}/lib -L${CIG_DIR}/lib -L${HDF5_LIBDIR} --coverage" CXXFLAGS="-g -O --coverage" CC=mpicc CXX=mpicxx



# TESTING ----------
from src as test

RUN make -j$(nproc) install
RUN make clean-coverage && make -j$(nproc) check VERBOSE=1 -C tests/libtests && make coverage-libtests
RUN make clean-coverage && make -j$(nproc) check VERBOSE=1 -C tests/mmstests && make coverage-mmstests
#RUN make check VERBOSE=1 -C tests/pytests
RUN make clean-coverage && make check VERBOSE=1 -C tests/fullscale && make coverage-fullscale

CMD /bin/bash
