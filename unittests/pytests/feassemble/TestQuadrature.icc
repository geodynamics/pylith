// -*- C++ -*-
//
// ======================================================================
//
//                           Brad T. Aagaard
//                        U.S. Geological Survey
//
// {LicenseText}
//
// ======================================================================
//

#if !defined(pylith_feassemble_pytestquadrature_hh)
#error "TestQuadrature.icc must be included only from TestQuadrature.hh"
#else

// Get number of dimensions in reference cell.
inline
int
pylith::feassemble::TestQuadrature::cellDim(const Quadrature& q) {
  return q._cellDim;
}

// Get number of vertices in cell.
inline
int
pylith::feassemble::TestQuadrature::numBasis(const Quadrature& q) {
  return q._numBasis;
}

// Get number of quadrature points.
inline
int
pylith::feassemble::TestQuadrature::numQuadPts(const Quadrature& q) {
  return q._numQuadPts;
}

// Get number of dimensions in coordinates of cell vertices.
inline
int
pylith::feassemble::TestQuadrature::spaceDim(const Quadrature& q) {
  return q._spaceDim;
}

// Get basis functions evaluated at quadrature points.
inline
const double*
pylith::feassemble::TestQuadrature::basis(const Quadrature& q) {
  return &q._basis[0];
}

// Get derivatives of basis functions evaluated at quadrature points.
inline
const double*
pylith::feassemble::TestQuadrature::basisDeriv(const Quadrature& q) {
  return &q._basisDeriv[0];
}

// Get coordinates of quadrature points
inline
const double*
pylith::feassemble::TestQuadrature::quadPtsRef(const Quadrature& q) {
  return &q._quadPtsRef[0];
}

// Get weights of quadrature points
inline
const double*
pylith::feassemble::TestQuadrature::quadWts(const Quadrature& q) {
  return &q._quadWts[0];
}

#endif

// End of file
