// -*- C++ -*-
//
// ======================================================================
//
// Brad T. Aagaard, U.S. Geological Survey
// Charles A. Williams, GNS Science
// Matthew G. Knepley, University of Chicago
//
// This code was developed as part of the Computational Infrastructure
// for Geodynamics (http://geodynamics.org).
//
// Copyright (c) 2010-2012 University of California, Davis
//
// See COPYING for license information.
//
// ======================================================================
//


/* Original mesh
 *
 * Cells are 0-1, vertices are 2-6.
 *
 * 2   3,4,5  6
 *
 *     ^^^^^ Face in x-y plane
 *
 * After adding cohesive elements
 *
 * Cells are 0-1,2, vertices are 3-10,11-13.
 *
 * 3   4,5,6  8,9,10   7
 *             11,12,13
 *     ^^^^^^^^^^^^ Cohesive element in x-y plane.
 */

#include "CohesiveDynDataTet4.hh"

const char* pylith::faults::CohesiveDynDataTet4::_meshFilename =
  "data/tet4.mesh";

const int pylith::faults::CohesiveDynDataTet4::_spaceDim = 3;

const int pylith::faults::CohesiveDynDataTet4::_cellDim = 2;

const int pylith::faults::CohesiveDynDataTet4::_numBasis = 3;

const int pylith::faults::CohesiveDynDataTet4::_numQuadPts = 3;

const PylithScalar pylith::faults::CohesiveDynDataTet4::_quadPts[] = {
 -1.00000000e+00, -1.00000000e+00,
  1.00000000e+00, -1.00000000e+00,
 -1.00000000e+00,  1.00000000e+00,
};

const PylithScalar pylith::faults::CohesiveDynDataTet4::_quadWts[] = {
  2.0/3.0, 2.0/3.0, 2.0/3.0,
};

const PylithScalar pylith::faults::CohesiveDynDataTet4::_basis[] = {
  1.0, 0.0, 0.0,
  0.0, 1.0, 0.0,
  0.0, 0.0, 1.0,
};

const PylithScalar pylith::faults::CohesiveDynDataTet4::_basisDeriv[] = {
 -0.50000000e+00, -0.50000000e+00,
  0.50000000e+00,  0.00000000e+00,
  0.00000000e+00,  0.50000000e+00,
 -0.50000000e+00, -0.50000000e+00,
  0.50000000e+00,  0.00000000e+00,
  0.00000000e+00,  0.50000000e+00,
 -0.50000000e+00, -0.50000000e+00,
  0.50000000e+00,  0.00000000e+00,
  0.00000000e+00,  0.50000000e+00,
};

const PylithScalar pylith::faults::CohesiveDynDataTet4::_verticesRef[] = {
 -1.00000000e+00, -1.00000000e+00,
  1.00000000e+00, -1.00000000e+00,
 -1.00000000e+00,  1.00000000e+00,
};

const int pylith::faults::CohesiveDynDataTet4::_id = 10;

const char* pylith::faults::CohesiveDynDataTet4::_label = "fault";

const char* pylith::faults::CohesiveDynDataTet4::_initialTractFilename = 
  "data/tet4_initialtract.spatialdb";

const PylithScalar pylith::faults::CohesiveDynDataTet4::_fieldT[] = {
  7.1, 8.1, 9.1,
  7.2, 8.2, 9.2, // 3
  7.3, 8.3, 9.3, // 4
  7.4, 8.4, 9.4, // 5
  7.5, 8.5, 9.5,
  7.2, 8.2, 9.2, // 7
  7.3, 8.3, 9.3, // 8
  7.4, 8.4, 9.4, // 9
  7.7, 8.7, 9.7, // 10
  7.9, 8.9, 9.9, // 11
  7.1, 8.1, 9.1, // 12
};

const PylithScalar pylith::faults::CohesiveDynDataTet4::_jacobian[] = {
  1.0,  0.1,  0.2, // 2x
  0.3,  0.4,  0.5,
  0.6,  0.7,  0.8,
  0.9,  1.0,  1.1,
  1.2,  1.3,  1.4,
  1.5,  1.6,  1.7,
  1.8,  1.9,  2.0,
  2.1,  2.2,  2.3,
  2.4,  2.5,  2.6,
  2.7,  2.8,  2.9,
  3.0,  3.1,  3.2,
  2.0,  4.1,  3.2, // 2y
  2.3,  4.4,  3.5,
  2.6,  4.7,  3.8,
  2.9,  4.0,  3.1,
  2.2,  4.3,  3.4,
  2.5,  4.6,  3.7,
  2.8,  4.9,  3.0,
  2.1,  4.2,  3.3,
  2.4,  4.5,  3.6,
  2.7,  4.8,  3.9,
  2.0,  4.1,  3.2,
  1.0,  7.1,  2.2, // 2z
  1.3,  7.4,  2.5,
  1.6,  7.7,  2.8,
  1.9,  7.0,  2.1,
  1.2,  7.3,  2.4,
  1.5,  7.6,  2.7,
  1.8,  7.9,  2.0,
  1.1,  7.2,  2.3,
  1.4,  7.5,  2.6,
  1.7,  7.8,  2.9,
  1.0,  7.1,  2.2,
  1.0,  0.1,  0.2, // 3x
 +4.0, -1.1, -1.2, // 3
 -1.3, -1.4, -1.5, // 4
 -1.6, -1.7, -1.8, // 5
  0.3,  0.4,  0.5,
  1.5,  1.6,  1.7,
  1.8,  1.9,  2.0,
  2.1,  2.2,  2.3,
  2.4,  2.5,  2.6,
  2.7,  2.8,  2.9,
  3.0,  3.1,  3.2,
  2.0,  4.1,  3.2, // 3y
 -1.1, +4.1, -2.3, // 3
 -2.4, -2.5, -2.6, // 4
 -2.7, -2.8, -2.9, // 5
  2.3,  4.4,  3.5,
  2.5,  4.6,  3.7,
  2.8,  4.9,  3.0,
  2.1,  4.2,  3.3,
  2.4,  4.5,  3.6,
  2.7,  4.8,  3.9,
  2.0,  4.1,  3.2,
  1.0,  7.1,  2.2, // 3z
 -1.2, -2.3, +4.2, // 3
 -1.0, -1.1, -1.2, // 4
 -1.3, -1.4, -1.5, // 5
  1.5,  7.6,  2.7,
  1.3,  7.4,  2.5,
  1.8,  7.9,  2.0,
  1.1,  7.2,  2.3,
  1.4,  7.5,  2.6,
  1.7,  7.8,  2.9,
  1.0,  7.1,  2.2,
  1.0,  0.1,  0.2, // 4x
 -1.3, -2.4, -1.0, // 3
 +4.3, -0.2, -0.3, // 4
 -0.4, -0.5, -0.6, // 5
  0.3,  0.4,  0.5,
  1.5,  1.6,  1.7,
  1.8,  1.9,  2.0,
  2.1,  2.2,  2.3,
  2.4,  2.5,  2.6,
  2.7,  2.8,  2.9,
  3.0,  3.1,  3.2,
  2.0,  4.1,  3.2, // 4y
 -1.4, -2.5, -1.1, // 3
 -0.2, +4.4, -0.9, // 4
 -0.8, -0.7, -0.5, // 5
  2.3,  4.4,  3.5,
  2.5,  4.6,  3.7,
  2.8,  4.9,  3.0,
  2.1,  4.2,  3.3,
  2.4,  4.5,  3.6,
  2.7,  4.8,  3.9,
  2.0,  4.1,  3.2,
  1.0,  7.1,  2.2, // 4z
 -1.5, -2.6, -1.2, // 3
 -0.3, -0.9, +4.5, // 4
 -1.1, -1.2, -1.3, // 5
  1.3,  7.4,  2.5,
  1.5,  7.6,  2.7,
  1.8,  7.9,  2.0,
  1.1,  7.2,  2.3,
  1.4,  7.5,  2.6,
  1.7,  7.8,  2.9,
  1.0,  7.1,  2.2,
  1.0,  0.1,  0.2, // 5x
 -1.6, -2.7, -1.3, // 3
 -0.4, -0.8, -1.1, // 4
 +4.6, -1.8, -1.5, // 5
  0.3,  0.4,  0.5,
  1.5,  1.6,  1.7,
  1.8,  1.9,  2.0,
  2.1,  2.2,  2.3,
  2.4,  2.5,  2.6,
  2.7,  2.8,  2.9,
  3.0,  3.1,  3.2,
  1.0,  0.1,  0.2, // 5y
 -1.7, -2.8, -1.4, // 3
 -0.5, -0.7, -1.2, // 4
 -1.8, +4.7, -1.1, // 5
  0.3,  0.4,  0.5,
  1.5,  1.6,  1.7,
  1.8,  1.9,  2.0,
  2.1,  2.2,  2.3,
  2.4,  2.5,  2.6,
  2.7,  2.8,  2.9,
  3.0,  3.1,  3.2,
  1.0,  7.1,  2.2, // 5z
 -1.8, -2.9, -1.5, // 3
 -0.6, -0.5, -1.3, // 4
 -1.5, -1.1, +4.8, // 5
  1.3,  7.4,  2.5,
  1.5,  7.6,  2.7,
  1.8,  7.9,  2.0,
  1.1,  7.2,  2.3,
  1.4,  7.5,  2.6,
  1.7,  7.8,  2.9,
  1.0,  7.1,  2.2,
  1.0,  0.1,  0.2, // 6x
  0.3,  0.4,  0.5,
  0.6,  0.7,  0.8,
  0.9,  1.0,  1.1,
  1.2,  1.3,  1.4,
  1.5,  1.6,  1.7,
  1.8,  1.9,  2.0,
  2.1,  2.2,  2.3,
  2.4,  2.5,  2.6,
  2.7,  2.8,  2.9,
  3.0,  3.1,  3.2,
  2.0,  4.1,  3.2, // 6y
  2.3,  4.4,  3.5,
  2.6,  4.7,  3.8,
  2.9,  4.0,  3.1,
  2.2,  4.3,  3.4,
  2.5,  4.6,  3.7,
  2.8,  4.9,  3.0,
  2.1,  4.2,  3.3,
  2.4,  4.5,  3.6,
  2.7,  4.8,  3.9,
  2.0,  4.1,  3.2,
  1.0,  7.1,  2.2, // 6z
  1.3,  7.4,  2.5,
  1.6,  7.7,  2.8,
  1.9,  7.0,  2.1,
  1.2,  7.3,  2.4,
  1.5,  7.6,  2.7,
  1.8,  7.9,  2.0,
  1.1,  7.2,  2.3,
  1.4,  7.5,  2.6,
  1.7,  7.8,  2.9,
  1.0,  7.1,  2.2,
  1.0,  0.1,  0.2, // 7x
  0.3,  0.4,  0.5,
  1.5,  1.6,  1.7,
  1.8,  1.9,  2.0,
  2.1,  2.2,  2.3,
 +5.0, -1.1, -1.2, // 3
 -1.3, -1.4, -1.5, // 4
 -1.6, -1.7, -1.8, // 5
  2.4,  2.5,  2.6,
  2.7,  2.8,  2.9,
  3.0,  3.1,  3.2,
  2.0,  4.1,  3.2, // 7y
  2.3,  4.4,  3.5,
  2.5,  4.6,  3.7,
  2.8,  4.9,  3.0,
  2.1,  4.2,  3.3,
 -1.1, +5.1, -2.3, // 7
 -2.4, -2.5, -2.6, // 8
 -2.7, -2.8, -2.9, // 9
  2.4,  4.5,  3.6,
  2.7,  4.8,  3.9,
  2.0,  4.1,  3.2,
  1.0,  7.1,  2.2, // 7z
  1.5,  7.6,  2.7,
  1.8,  7.9,  2.0,
  1.1,  7.2,  2.3,
  1.3,  7.4,  2.5,
 -1.2, -2.3, +5.2, // 7
 -1.0, -1.1, -1.2, // 8
 -1.3, -1.4, -1.5, // 9
  1.4,  7.5,  2.6,
  1.7,  7.8,  2.9,
  1.0,  7.1,  2.2,
  1.0,  0.1,  0.2, // 8x
  0.3,  0.4,  0.5,
  1.5,  1.6,  1.7,
  1.8,  1.9,  2.0,
  2.1,  2.2,  2.3,
 -1.3, -2.4, -1.0, // 7
 +5.3, -0.2, -0.3, // 8
 -0.4, -0.5, -0.6, // 9
  2.4,  2.5,  2.6,
  2.7,  2.8,  2.9,
  3.0,  3.1,  3.2,
  2.0,  4.1,  3.2, // 8y
  2.3,  4.4,  3.5,
  2.5,  4.6,  3.7,
  2.8,  4.9,  3.0,
  2.1,  4.2,  3.3,
 -1.4, -2.5, -1.1, // 7
 -0.2, +5.4, -0.9, // 8
 -0.8, -0.7, -0.5, // 9
  2.4,  4.5,  3.6,
  2.7,  4.8,  3.9,
  2.0,  4.1,  3.2,
  1.0,  7.1,  2.2, // 8z
  1.3,  7.4,  2.5,
  1.5,  7.6,  2.7,
  1.8,  7.9,  2.0,
  1.1,  7.2,  2.3,
 -1.5, -2.6, -1.2, // 7
 -0.3, -0.9, +5.5, // 8
 -1.1, -1.2, -1.3, // 9
  1.4,  7.5,  2.6,
  1.7,  7.8,  2.9,
  1.0,  7.1,  2.2,
  1.0,  0.1,  0.2, // 9x
  0.3,  0.4,  0.5,
  1.5,  1.6,  1.7,
  1.8,  1.9,  2.0,
  2.1,  2.2,  2.3,
 -1.6, -2.7, -1.3, // 7
 -0.4, -0.8, -1.1, // 8
 +5.6, -1.8, -1.5, // 9
  2.4,  2.5,  2.6,
  2.7,  2.8,  2.9,
  3.0,  3.1,  3.2,
  2.0,  4.1,  3.2, // 9y
  2.3,  4.4,  3.5,
  2.5,  4.6,  3.7,
  2.8,  4.9,  3.0,
  2.1,  4.2,  3.3,
 -1.7, -2.8, -1.4, // 7
 -0.5, -0.7, -1.2, // 8
 -1.8, +5.7, -1.1, // 9
  2.4,  4.5,  3.6,
  2.7,  4.8,  3.9,
  2.0,  4.1,  3.2,
  1.0,  7.1,  2.2, // 9z
  1.3,  7.4,  2.5,
  1.5,  7.6,  2.7,
  1.8,  7.9,  2.0,
  1.1,  7.2,  2.3,
 -1.8, -2.9, -1.5, // 7
 -0.6, -0.5, -1.3, // 8
 -1.5, -1.1, +5.8, // 9
  1.4,  7.5,  2.6,
  1.7,  7.8,  2.9,
  1.0,  7.1,  2.2,
  1.0,  0.1,  0.2, // 10x
  0.3,  0.4,  0.5,
  0.6,  0.7,  0.8,
  0.9,  1.0,  1.1,
  1.2,  1.3,  1.4,
  1.5,  1.6,  1.7,
  1.8,  1.9,  2.0,
  2.1,  2.2,  2.3,
  2.4,  2.5,  2.6,
  2.7,  2.8,  2.9,
  3.0,  3.1,  3.2,
  2.0,  4.1,  3.2, // 10y
  2.3,  4.4,  3.5,
  2.6,  4.7,  3.8,
  2.9,  4.0,  3.1,
  2.2,  4.3,  3.4,
  2.5,  4.6,  3.7,
  2.8,  4.9,  3.0,
  2.1,  4.2,  3.3,
  2.4,  4.5,  3.6,
  2.7,  4.8,  3.9,
  2.0,  4.1,  3.2,
  1.0,  7.1,  2.2, // 10z
  1.3,  7.4,  2.5,
  1.6,  7.7,  2.8,
  1.9,  7.0,  2.1,
  1.2,  7.3,  2.4,
  1.5,  7.6,  2.7,
  1.8,  7.9,  2.0,
  1.1,  7.2,  2.3,
  1.4,  7.5,  2.6,
  1.7,  7.8,  2.9,
  1.0,  7.1,  2.2,
  1.0,  0.1,  0.2, // 11x
  0.3,  0.4,  0.5,
  0.6,  0.7,  0.8,
  0.9,  1.0,  1.1,
  1.2,  1.3,  1.4,
  1.5,  1.6,  1.7,
  1.8,  1.9,  2.0,
  2.1,  2.2,  2.3,
  2.4,  2.5,  2.6,
  2.7,  2.8,  2.9,
  3.0,  3.1,  3.2,
  2.0,  4.1,  3.2, // 11y
  2.3,  4.4,  3.5,
  2.6,  4.7,  3.8,
  2.9,  4.0,  3.1,
  2.2,  4.3,  3.4,
  2.5,  4.6,  3.7,
  2.8,  4.9,  3.0,
  2.1,  4.2,  3.3,
  2.4,  4.5,  3.6,
  2.7,  4.8,  3.9,
  2.0,  4.1,  3.2,
  1.0,  7.1,  2.2, // 11z
  1.3,  7.4,  2.5,
  1.6,  7.7,  2.8,
  1.9,  7.0,  2.1,
  1.2,  7.3,  2.4,
  1.5,  7.6,  2.7,
  1.8,  7.9,  2.0,
  1.1,  7.2,  2.3,
  1.4,  7.5,  2.6,
  1.7,  7.8,  2.9,
  1.0,  7.1,  2.2,
  1.0,  0.1,  0.2, // 12x
  0.3,  0.4,  0.5,
  0.6,  0.7,  0.8,
  0.9,  1.0,  1.1,
  1.2,  1.3,  1.4,
  1.5,  1.6,  1.7,
  1.8,  1.9,  2.0,
  2.1,  2.2,  2.3,
  2.4,  2.5,  2.6,
  2.7,  2.8,  2.9,
  3.0,  3.1,  3.2,
  2.0,  4.1,  3.2, // 12y
  2.3,  4.4,  3.5,
  2.6,  4.7,  3.8,
  2.9,  4.0,  3.1,
  2.2,  4.3,  3.4,
  2.5,  4.6,  3.7,
  2.8,  4.9,  3.0,
  2.1,  4.2,  3.3,
  2.4,  4.5,  3.6,
  2.7,  4.8,  3.9,
  2.0,  4.1,  3.2,
  1.0,  7.1,  2.2, // 12z
  1.3,  7.4,  2.5,
  1.6,  7.7,  2.8,
  1.9,  7.0,  2.1,
  1.2,  7.3,  2.4,
  1.5,  7.6,  2.7,
  1.8,  7.9,  2.0,
  1.1,  7.2,  2.3,
  1.4,  7.5,  2.6,
  1.7,  7.8,  2.9,
  1.0,  7.1,  2.2,
};

// ----------------------------------------------------------------------
// Computed values
// ----------------------------------------------------------------------

const PylithScalar pylith::faults::CohesiveDynDataTet4::_orientation[] = {
  0.0, -1.0, 0.0,    0.0, 0.0, +1.0,    -1.0, 0.0, 0.0,
  0.0, -1.0, 0.0,    0.0, 0.0, +1.0,    -1.0, 0.0, 0.0,
  0.0, -1.0, 0.0,    0.0, 0.0, +1.0,    -1.0, 0.0, 0.0,
};

const PylithScalar pylith::faults::CohesiveDynDataTet4::_area[] = {
  1.0/3.0, 
  1.0/3.0, 
  1.0/3.0,
};

const PylithScalar pylith::faults::CohesiveDynDataTet4::_initialTractions[] = {
  // Fault coordinate frame
  +1.0, +2.0, -3.0,
  +1.1, +2.1, -3.1,
  +1.2, +2.2, -3.2,
};


const int pylith::faults::CohesiveDynDataTet4::_numConstraintVert = 3;
const int pylith::faults::CohesiveDynDataTet4::_constraintVertices[] = {
  11, 12, 13
};

// ----------------------------------------------------------------------
// Stick case
// ----------------------------------------------------------------------
// Input
const PylithScalar pylith::faults::CohesiveDynDataTet4::_fieldIncrStick[] = {
  1.1, 2.1, 3.1,
  1.2, 2.2, 3.2, // 3
  1.3, 2.3, 3.3, // 4
  1.4, 2.4, 3.4, // 5
  1.5, 2.5, 3.5,
  1.2, 2.2, 3.2, // 7
  1.3, 2.3, 3.3, // 8
  1.4, 2.4, 3.4, // 9
  41.7, 2.7, 3.7, // 10
  41.9, 2.9, 3.9, // 11
  41.1, 2.1, 3.1, // 12
};

// No slip
const PylithScalar pylith::faults::CohesiveDynDataTet4::_slipStickE[] = {
  0.0,  0.0,  0.0,
  0.0,  0.0,  0.0,
  0.0,  0.0,  0.0,
};

// ----------------------------------------------------------------------
// Slip case
// ----------------------------------------------------------------------
// Input
const PylithScalar pylith::faults::CohesiveDynDataTet4::_fieldIncrSlip[] = {
  1.1, 2.1, 3.1,
  1.2, 2.2, 3.2, // 3
  1.3, 2.3, 3.3, // 4
  1.4, 2.4, 3.4, // 5
  1.5, 2.5, 3.5,
  1.2, 2.2, 3.2, // 7
  1.3, 2.3, 3.3, // 8
  1.4, 2.4, 3.4, // 9
  9.7, 2.7, 3.7, // 10
  9.9, 2.9, 3.9, // 11
  9.1, 2.1, 3.1, // 12
};

// Output
const PylithScalar pylith::faults::CohesiveDynDataTet4::_fieldIncrSlipE[] = {
   1.100000000000,   2.100000000000,   3.100000000000,
   1.200000000000,   2.200000227020,   3.200000026805,
   1.300000000000,   2.299999981535,   3.299999992288,
   1.400000000000,   2.400000143753,   3.400000099170,
   1.500000000000,   2.500000000000,   3.500000000000,
   1.200000000000,   2.199999772980,   3.199999973195,
   1.300000000000,   2.300000018465,   3.300000007712,
   1.400000000000,   2.399999856247,   3.399999900830,
   9.700000000000,  -1.935106067360,  -1.748282570405,
   9.900000000000,  -1.959241090539,  -1.782841275376,
   9.100000000000,  -1.865391385620,  -1.642919108291,
};

const PylithScalar pylith::faults::CohesiveDynDataTet4::_slipSlipE[] = {
   0.000000454040,  -0.000000053610,   0.000000000000,
  -0.000000036930,   0.000000015423,   0.000000000000,
   0.000000287507,  -0.000000198341,   0.000000000000,
};

// ----------------------------------------------------------------------
// Open case
// ----------------------------------------------------------------------
// Input
const PylithScalar pylith::faults::CohesiveDynDataTet4::_fieldIncrOpen[] = {
  1.1, 2.1, 3.1,
  1.2, 2.2, 3.2, // 3
  1.3, 2.3, 3.3, // 4
  1.4, 2.4, 3.4, // 5
  1.5, 2.5, 3.5,
  1.2, 2.2, 3.2, // 7
  1.3, 2.3, 3.3, // 8
  1.4, 2.4, 3.4, // 9
 -20.7, 2.7, 3.7, // 10
 -20.9, 2.9, 3.9, // 11
 -20.1, 2.1, 3.1, // 12
};

// Output
const PylithScalar pylith::faults::CohesiveDynDataTet4::_fieldIncrOpenE[] = {
   1.100000000000,   2.100000000000,   3.100000000000,
   1.200001278936,   2.200000000669,   3.199999666497,
   1.300001214834,   2.299999606576,   3.299999568855,
   1.400001060387,   2.399999973508,   3.399999858697,
   1.500000000000,   2.500000000000,   3.500000000000,
   1.199998721064,   2.199999999331,   3.200000333503,
   1.299998785166,   2.300000393424,   3.300000431145,
   1.399998939613,   2.400000026492,   3.400000141303,
  -7.700000000000,  -8.700000000000,  -9.700000000000,
  -7.900000000000,  -8.900000000000,  -9.900000000000,
  -7.100000000000,  -8.100000000000,  -9.100000000000,
};

const PylithScalar pylith::faults::CohesiveDynDataTet4::_slipOpenE[] = {
   0.000000001338,   0.000000667006,   0.000002557871,
  -0.000000786848,   0.000000862291,   0.000002429668,
  -0.000000052983,   0.000000282605,   0.000002120773,
};

// ----------------------------------------------------------------------
pylith::faults::CohesiveDynDataTet4::CohesiveDynDataTet4(void)
{ // constructor
  meshFilename = const_cast<char*>(_meshFilename);
  spaceDim = _spaceDim;
  cellDim = _cellDim;
  numBasis = _numBasis;
  numQuadPts = _numQuadPts;
  quadPts = const_cast<PylithScalar*>(_quadPts);
  quadWts = const_cast<PylithScalar*>(_quadWts);
  basis = const_cast<PylithScalar*>(_basis);
  basisDeriv = const_cast<PylithScalar*>(_basisDeriv);
  verticesRef = const_cast<PylithScalar*>(_verticesRef);
  id = _id;
  label = const_cast<char*>(_label);
  initialTractFilename = const_cast<char*>(_initialTractFilename);

  fieldT = const_cast<PylithScalar*>(_fieldT);
  jacobian = const_cast<PylithScalar*>(_jacobian);
  orientation = const_cast<PylithScalar*>(_orientation);
  area = const_cast<PylithScalar*>(_area);
  initialTractions = const_cast<PylithScalar*>(_initialTractions);

  constraintVertices = const_cast<int*>(_constraintVertices);
  numConstraintVert = _numConstraintVert;  

  // Stick
  fieldIncrStick = const_cast<PylithScalar*>(_fieldIncrStick);
  slipStickE = const_cast<PylithScalar*>(_slipStickE);

  // Slip
  fieldIncrSlip = const_cast<PylithScalar*>(_fieldIncrSlip);
  fieldIncrSlipE = const_cast<PylithScalar*>(_fieldIncrSlipE);
  slipSlipE = const_cast<PylithScalar*>(_slipSlipE);

  // Open
  fieldIncrOpen = const_cast<PylithScalar*>(_fieldIncrOpen);
  fieldIncrOpenE = const_cast<PylithScalar*>(_fieldIncrOpenE);
  slipOpenE = const_cast<PylithScalar*>(_slipOpenE);
} // constructor

pylith::faults::CohesiveDynDataTet4::~CohesiveDynDataTet4(void)
{}


// End of file
