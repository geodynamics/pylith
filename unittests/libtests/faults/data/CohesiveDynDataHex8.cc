// -*- C++ -*-
//
// ======================================================================
//
// Brad T. Aagaard, U.S. Geological Survey
// Charles A. Williams, GNS Science
// Matthew G. Knepley, University of Chicago
//
// This code was developed as part of the Computational Infrastructure
// for Geodynamics (http://geodynamics.org).
//
// Copyright (c) 2010-2011 University of California, Davis
//
// See COPYING for license information.
//
// ======================================================================
//


/* Original mesh
 *
 * Cells are 0-1 and vertices are 2-13.
 *
 *       2,3,4,5 -------- 6,7,8,9 -------- 10,11,12,13
 *
 *                        ^^^^^^^ Vertices forming fault
 *
 * After adding cohesive elements
 *
 * Cells are 0-1,16 and vertices are 4-15.
 *
 *       2,3,4,5 -------- 6,7,8,9 -- 14,15,16,17 -------- 10,11,12,13
 *                                    18,19,20,21
 *                        ^^^^^^^^^^^^^^^^^^^^^^ Cohesive element
 *
 */

#include "CohesiveDynDataHex8.hh"

const char* pylith::faults::CohesiveDynDataHex8::_meshFilename =
  "data/hex8.mesh";

const int pylith::faults::CohesiveDynDataHex8::_spaceDim = 3;

const int pylith::faults::CohesiveDynDataHex8::_cellDim = 2;

const int pylith::faults::CohesiveDynDataHex8::_numBasis = 4;

const int pylith::faults::CohesiveDynDataHex8::_numQuadPts = 4;

const double pylith::faults::CohesiveDynDataHex8::_quadPts[] = {
  -1.0, -1.0,
  +1.0, -1.0,
  +1.0, +1.0,
  -1.0, +1.0
};

const double pylith::faults::CohesiveDynDataHex8::_quadWts[] = {
  1.0, 1.0, 1.0, 1.0
};

const double pylith::faults::CohesiveDynDataHex8::_basis[] = {
  1.0, 0.0, 0.0, 0.0,
  0.0, 1.0, 0.0, 0.0,
  0.0, 0.0, 1.0, 0.0,
  0.0, 0.0, 0.0, 1.0,
};

const double pylith::faults::CohesiveDynDataHex8::_basisDeriv[] = {
  -0.39433757, -0.39433757,
  +0.39433757, -0.10566243,
  +0.10566243, +0.10566243,
  -0.10566243, +0.39433757,

  -0.39433757, -0.10566243,
  +0.39433757, -0.39433757,
  +0.10566243, +0.39433757,
  -0.10566243, +0.10566243,

  -0.10566243, -0.10566243,
  +0.10566243, -0.39433757,
  +0.39433757, +0.39433757,
  -0.39433757, +0.10566243,

  -0.10566243, -0.39433757,
  +0.10566243, -0.10566243,
  +0.39433757, +0.10566243,
  -0.39433757, +0.39433757,
};

const double pylith::faults::CohesiveDynDataHex8::_verticesRef[] = {
  -1.0, -1.0,
  +1.0, -1.0,
  +1.0, +1.0,
  -1.0, +1.0
};

const int pylith::faults::CohesiveDynDataHex8::_id = 10;

const char* pylith::faults::CohesiveDynDataHex8::_label = "fault";

const char* pylith::faults::CohesiveDynDataHex8::_initialTractFilename = 
  "data/hex8_initialtract.spatialdb";

const double pylith::faults::CohesiveDynDataHex8::_fieldT[] = {
  4.1, 2.1, 3.1,
  4.2, 2.2, 3.2,
  4.3, 2.3, 3.3,
  4.4, 2.4, 3.4,
  4.5, 2.5, 3.5, // 6
  4.6, 2.6, 3.6, // 7
  4.7, 2.7, 3.7, // 8
  4.8, 2.8, 3.8, // 9
  4.9, 2.9, 3.9,
  4.0, 2.0, 3.0,
  4.1, 2.1, 3.1,
  4.2, 2.2, 3.2,
  4.3, 2.3, 3.3, // 14
  4.5, 2.5, 3.5, // 15
  4.7, 2.7, 3.7, // 16
  4.9, 2.9, 3.9, // 17
  4.4, 2.4, 3.4, // 18
  4.6, 2.6, 3.6, // 19
  4.8, 2.8, 3.8, // 20
  4.0, 2.0, 3.0, // 21
};

const double pylith::faults::CohesiveDynDataHex8::_jacobian[] = {
  1.0,  0.1,  0.2, // 2x
  0.3,  0.4,  0.5,
  0.6,  0.7,  0.8,
  0.9,  1.0,  1.1,
  1.2,  1.3,  1.4,
  1.5,  1.6,  1.7,
  1.8,  1.9,  2.0,
  2.1,  2.2,  2.3,
  2.4,  2.5,  2.6,
  2.7,  2.8,  2.9,
  3.0,  3.1,  3.2,
  3.3,  3.4,  3.5,
  3.6,  3.7,  3.8,
  3.9,  4.0,  4.1,
  4.2,  4.3,  4.4,
  4.5,  4.6,  4.7,
  4.8,  4.9,  5.0,
  5.1,  5.2,  5.3,
  5.4,  5.5,  5.6,
  5.7,  5.8,  5.9,
  3.0,  4.1,  1.2, // 2y
  3.3,  6.4,  4.5,
  3.6,  3.7,  6.8,
  3.9,  7.0,  6.1,
  3.2,  5.3,  3.4,
  1.5,  4.6,  2.7,
  2.8,  3.9,  2.0,
  2.1,  6.2,  2.3,
  1.4,  6.5,  2.6,
  1.7,  9.8,  2.9,
  1.0,  5.1,  3.2,
  1.3,  3.4,  3.5,
  2.6,  2.7,  3.8,
  2.9,  4.0,  4.1,
  2.2,  4.3,  4.4,
  3.5,  4.6,  4.7,
  3.8,  4.9,  5.0,
  4.1,  5.2,  5.3,
  5.4,  5.5,  5.6,
  7.7,  5.8,  5.9,
  3.0,  4.1,  1.2, // 2z
  3.3,  6.4,  4.5,
  3.6,  3.7,  6.8,
  3.9,  7.0,  6.1,
  3.2,  5.3,  3.4,
  1.5,  4.6,  2.7,
  2.8,  3.9,  2.0,
  2.1,  6.2,  2.3,
  1.4,  6.5,  2.6,
  1.7,  9.8,  2.9,
  1.0,  5.1,  3.2,
  1.3,  3.4,  3.5,
  2.6,  2.7,  3.8,
  2.9,  4.0,  4.1,
  2.2,  4.3,  4.4,
  3.5,  4.6,  4.7,
  3.8,  4.9,  5.0,
  4.1,  5.2,  5.3,
  5.4,  5.5,  5.6,
  7.7,  5.8,  5.9,
  1.0,  0.1,  0.2, // 3x
  0.3,  0.4,  0.5,
  0.6,  0.7,  0.8,
  0.9,  1.0,  1.1,
  1.2,  1.3,  1.4,
  1.5,  1.6,  1.7,
  1.8,  1.9,  2.0,
  2.1,  2.2,  2.3,
  2.4,  2.5,  2.6,
  2.7,  2.8,  2.9,
  3.0,  3.1,  3.2,
  3.3,  3.4,  3.5,
  3.6,  3.7,  3.8,
  3.9,  4.0,  4.1,
  4.2,  4.3,  4.4,
  4.5,  4.6,  4.7,
  4.8,  4.9,  5.0,
  5.1,  5.2,  5.3,
  5.4,  5.5,  5.6,
  5.7,  5.8,  5.9,
  3.0,  4.1,  1.2, // 3y
  3.3,  6.4,  4.5,
  3.6,  3.7,  6.8,
  3.9,  7.0,  6.1,
  3.2,  5.3,  3.4,
  1.5,  4.6,  2.7,
  2.8,  3.9,  2.0,
  2.1,  6.2,  2.3,
  1.4,  6.5,  2.6,
  1.7,  9.8,  2.9,
  1.0,  5.1,  3.2,
  1.3,  3.4,  3.5,
  2.6,  2.7,  3.8,
  2.9,  4.0,  4.1,
  2.2,  4.3,  4.4,
  3.5,  4.6,  4.7,
  3.8,  4.9,  5.0,
  4.1,  5.2,  5.3,
  5.4,  5.5,  5.6,
  7.7,  5.8,  5.9,
  3.0,  4.1,  1.2, // 3z
  3.3,  6.4,  4.5,
  3.6,  3.7,  6.8,
  3.9,  7.0,  6.1,
  3.2,  5.3,  3.4,
  1.5,  4.6,  2.7,
  2.8,  3.9,  2.0,
  2.1,  6.2,  2.3,
  1.4,  6.5,  2.6,
  1.7,  9.8,  2.9,
  1.0,  5.1,  3.2,
  1.3,  3.4,  3.5,
  2.6,  2.7,  3.8,
  2.9,  4.0,  4.1,
  2.2,  4.3,  4.4,
  3.5,  4.6,  4.7,
  3.8,  4.9,  5.0,
  4.1,  5.2,  5.3,
  5.4,  5.5,  5.6,
  7.7,  5.8,  5.9,
  1.0,  0.1,  0.2, // 4x
  0.3,  0.4,  0.5,
  0.6,  0.7,  0.8,
  0.9,  1.0,  1.1,
  1.2,  1.3,  1.4,
  1.5,  1.6,  1.7,
  1.8,  1.9,  2.0,
  2.1,  2.2,  2.3,
  2.4,  2.5,  2.6,
  2.7,  2.8,  2.9,
  3.0,  3.1,  3.2,
  3.3,  3.4,  3.5,
  3.6,  3.7,  3.8,
  3.9,  4.0,  4.1,
  4.2,  4.3,  4.4,
  4.5,  4.6,  4.7,
  4.8,  4.9,  5.0,
  5.1,  5.2,  5.3,
  5.4,  5.5,  5.6,
  5.7,  5.8,  5.9,
  3.0,  4.1,  1.2, // 4y
  3.3,  6.4,  4.5,
  3.6,  3.7,  6.8,
  3.9,  7.0,  6.1,
  3.2,  5.3,  3.4,
  1.5,  4.6,  2.7,
  2.8,  3.9,  2.0,
  2.1,  6.2,  2.3,
  1.4,  6.5,  2.6,
  1.7,  9.8,  2.9,
  1.0,  5.1,  3.2,
  1.3,  3.4,  3.5,
  2.6,  2.7,  3.8,
  2.9,  4.0,  4.1,
  2.2,  4.3,  4.4,
  3.5,  4.6,  4.7,
  3.8,  4.9,  5.0,
  4.1,  5.2,  5.3,
  5.4,  5.5,  5.6,
  7.7,  5.8,  5.9,
  3.0,  4.1,  1.2, // 4z
  3.3,  6.4,  4.5,
  3.6,  3.7,  6.8,
  3.9,  7.0,  6.1,
  3.2,  5.3,  3.4,
  1.5,  4.6,  2.7,
  2.8,  3.9,  2.0,
  2.1,  6.2,  2.3,
  1.4,  6.5,  2.6,
  1.7,  9.8,  2.9,
  1.0,  5.1,  3.2,
  1.3,  3.4,  3.5,
  2.6,  2.7,  3.8,
  2.9,  4.0,  4.1,
  2.2,  4.3,  4.4,
  3.5,  4.6,  4.7,
  3.8,  4.9,  5.0,
  4.1,  5.2,  5.3,
  5.4,  5.5,  5.6,
  7.7,  5.8,  5.9,
  1.0,  0.1,  0.2, // 5x
  0.3,  0.4,  0.5,
  0.6,  0.7,  0.8,
  0.9,  1.0,  1.1,
  1.2,  1.3,  1.4,
  1.5,  1.6,  1.7,
  1.8,  1.9,  2.0,
  2.1,  2.2,  2.3,
  2.4,  2.5,  2.6,
  2.7,  2.8,  2.9,
  3.0,  3.1,  3.2,
  3.3,  3.4,  3.5,
  3.6,  3.7,  3.8,
  3.9,  4.0,  4.1,
  4.2,  4.3,  4.4,
  4.5,  4.6,  4.7,
  4.8,  4.9,  5.0,
  5.1,  5.2,  5.3,
  5.4,  5.5,  5.6,
  5.7,  5.8,  5.9,
  3.0,  4.1,  1.2, // 5y
  3.3,  6.4,  4.5,
  3.6,  3.7,  6.8,
  3.9,  7.0,  6.1,
  3.2,  5.3,  3.4,
  1.5,  4.6,  2.7,
  2.8,  3.9,  2.0,
  2.1,  6.2,  2.3,
  1.4,  6.5,  2.6,
  1.7,  9.8,  2.9,
  1.0,  5.1,  3.2,
  1.3,  3.4,  3.5,
  2.6,  2.7,  3.8,
  2.9,  4.0,  4.1,
  2.2,  4.3,  4.4,
  3.5,  4.6,  4.7,
  3.8,  4.9,  5.0,
  4.1,  5.2,  5.3,
  5.4,  5.5,  5.6,
  7.7,  5.8,  5.9,
  3.0,  4.1,  1.2, // 5z
  3.3,  6.4,  4.5,
  3.6,  3.7,  6.8,
  3.9,  7.0,  6.1,
  3.2,  5.3,  3.4,
  1.5,  4.6,  2.7,
  2.8,  3.9,  2.0,
  2.1,  6.2,  2.3,
  1.4,  6.5,  2.6,
  1.7,  9.8,  2.9,
  1.0,  5.1,  3.2,
  1.3,  3.4,  3.5,
  2.6,  2.7,  3.8,
  2.9,  4.0,  4.1,
  2.2,  4.3,  4.4,
  3.5,  4.6,  4.7,
  3.8,  4.9,  5.0,
  4.1,  5.2,  5.3,
  5.4,  5.5,  5.6,
  7.7,  5.8,  5.9,
  1.0,  0.1,  0.2, // 6x
  0.3,  0.4,  0.5,
  0.6,  0.7,  0.8,
  0.9,  1.0,  1.1,
 +6.0, -0.5, -0.6, // 6
 -0.7, -0.8, -0.9, // 7
 -1.0, -0.8, -0.7, // 8
 -0.6, -0.5, -0.4, // 9
  2.4,  2.5,  2.6,
  2.7,  2.8,  2.9,
  3.0,  3.1,  3.2,
  3.3,  3.4,  3.5,
  3.6,  3.7,  3.8,
  3.9,  4.0,  4.1,
  4.2,  4.3,  4.4,
  4.5,  4.6,  4.7,
  4.8,  4.9,  5.0,
  5.1,  5.2,  5.3,
  5.4,  5.5,  5.6,
  5.7,  5.8,  5.9,
  3.0,  4.1,  1.2, // 6y
  3.3,  6.4,  4.5,
  3.6,  3.7,  6.8,
  3.9,  7.0,  6.1,
 -0.5, +6.1, -1.0, // 6
 -1.1, -1.2, -1.3, // 7
 -1.4, -1.3, -1.2, // 8
 -1.1, -1.0, -0.9, // 9
  1.4,  6.5,  2.6,
  1.7,  9.8,  2.9,
  1.0,  5.1,  3.2,
  1.3,  3.4,  3.5,
  2.6,  2.7,  3.8,
  2.9,  4.0,  4.1,
  2.2,  4.3,  4.4,
  3.5,  4.6,  4.7,
  3.8,  4.9,  5.0,
  4.1,  5.2,  5.3,
  5.4,  5.5,  5.6,
  7.7,  5.8,  5.9,
  3.0,  4.1,  1.2, // 6z
  3.3,  6.4,  4.5,
  3.6,  3.7,  6.8,
  3.9,  7.0,  6.1,
 -0.6, -1.0, +6.2, // 6
 -0.5, -0.6, -0.7, // 7
 -0.8, -0.9, -0.8, // 8
 -0.7, -0.6, -0.5, // 9
  1.4,  6.5,  2.6,
  1.7,  9.8,  2.9,
  1.0,  5.1,  3.2,
  1.3,  3.4,  3.5,
  2.6,  2.7,  3.8,
  2.9,  4.0,  4.1,
  2.2,  4.3,  4.4,
  3.5,  4.6,  4.7,
  3.8,  4.9,  5.0,
  4.1,  5.2,  5.3,
  5.4,  5.5,  5.6,
  7.7,  5.8,  5.9,
  1.0,  0.1,  0.2, // 7x
  0.3,  0.4,  0.5,
  0.6,  0.7,  0.8,
  0.9,  1.0,  1.1,
 -0.7, -1.1, -0.5, // 6
 +6.3, -0.8, -0.7, // 7
 -0.6, -0.5, -0.4, // 8
 -0.3, -0.2, -0.1, // 9
  2.4,  2.5,  2.6,
  2.7,  2.8,  2.9,
  3.0,  3.1,  3.2,
  3.3,  3.4,  3.5,
  3.6,  3.7,  3.8,
  3.9,  4.0,  4.1,
  4.2,  4.3,  4.4,
  4.5,  4.6,  4.7,
  4.8,  4.9,  5.0,
  5.1,  5.2,  5.3,
  5.4,  5.5,  5.6,
  5.7,  5.8,  5.9,
  3.0,  4.1,  1.2, // 7y
  3.3,  6.4,  4.5,
  3.6,  3.7,  6.8,
  3.9,  7.0,  6.1,
 -0.8, -1.2, -0.6, // 6
 -0.8, +6.4, -0.3, // 7
 -0.4, -0.5, -0.6, // 8
 -0.7, -0.8, -0.9, // 9
  1.4,  6.5,  2.6,
  1.7,  9.8,  2.9,
  1.0,  5.1,  3.2,
  1.3,  3.4,  3.5,
  2.6,  2.7,  3.8,
  2.9,  4.0,  4.1,
  2.2,  4.3,  4.4,
  3.5,  4.6,  4.7,
  3.8,  4.9,  5.0,
  4.1,  5.2,  5.3,
  5.4,  5.5,  5.6,
  7.7,  5.8,  5.9,
  3.0,  4.1,  1.2, // 7z
  3.3,  6.4,  4.5,
  3.6,  3.7,  6.8,
  3.9,  7.0,  6.1,
 -0.9, -1.3, -0.7, // 6
 -0.7, -0.3, +6.5, // 7
 -0.3, -0.8, -0.7, // 8
 -0.6, -0.9, -0.7, // 9
  1.4,  6.5,  2.6,
  1.7,  9.8,  2.9,
  1.0,  5.1,  3.2,
  1.3,  3.4,  3.5,
  2.6,  2.7,  3.8,
  2.9,  4.0,  4.1,
  2.2,  4.3,  4.4,
  3.5,  4.6,  4.7,
  3.8,  4.9,  5.0,
  4.1,  5.2,  5.3,
  5.4,  5.5,  5.6,
  7.7,  5.8,  5.9,
  1.0,  0.1,  0.2, // 8x
  0.3,  0.4,  0.5,
  0.6,  0.7,  0.8,
  0.9,  1.0,  1.1,
 -1.0, -1.4, -0.8, // 6
 -0.6, -0.4, -0.3, // 7
 +6.6, -1.1, -0.8, // 8
 -0.7, -0.6, -0.5, // 9
  2.4,  2.5,  2.6,
  2.7,  2.8,  2.9,
  3.0,  3.1,  3.2,
  3.3,  3.4,  3.5,
  3.6,  3.7,  3.8,
  3.9,  4.0,  4.1,
  4.2,  4.3,  4.4,
  4.5,  4.6,  4.7,
  4.8,  4.9,  5.0,
  5.1,  5.2,  5.3,
  5.4,  5.5,  5.6,
  5.7,  5.8,  5.9,
  3.0,  4.1,  1.2, // 8y
  3.3,  6.4,  4.5,
  3.6,  3.7,  6.8,
  3.9,  7.0,  6.1,
 -0.8, -1.3, -0.9, // 6
 -0.5, -0.5, -0.8, // 7
 -1.1, +6.7, -0.8, // 8
 -0.9, -1.0, -1.1, // 9
  1.4,  6.5,  2.6,
  1.7,  9.8,  2.9,
  1.0,  5.1,  3.2,
  1.3,  3.4,  3.5,
  2.6,  2.7,  3.8,
  2.9,  4.0,  4.1,
  2.2,  4.3,  4.4,
  3.5,  4.6,  4.7,
  3.8,  4.9,  5.0,
  4.1,  5.2,  5.3,
  5.4,  5.5,  5.6,
  7.7,  5.8,  5.9,
  3.0,  4.1,  1.2, // 8z
  3.3,  6.4,  4.5,
  3.6,  3.7,  6.8,
  3.9,  7.0,  6.1,
 -0.7, -1.2, -0.8, // 6
 -0.4, -0.6, -0.7, // 7
 -0.8, -0.8, +6.8, // 8
 -1.0, -1.1, -1.2, // 9
  1.4,  6.5,  2.6,
  1.7,  9.8,  2.9,
  1.0,  5.1,  3.2,
  1.3,  3.4,  3.5,
  2.6,  2.7,  3.8,
  2.9,  4.0,  4.1,
  2.2,  4.3,  4.4,
  3.5,  4.6,  4.7,
  3.8,  4.9,  5.0,
  4.1,  5.2,  5.3,
  5.4,  5.5,  5.6,
  7.7,  5.8,  5.9,
  1.0,  0.1,  0.2, // 9x
  0.3,  0.4,  0.5,
  0.6,  0.7,  0.8,
  0.9,  1.0,  1.1,
 -0.6, -1.1, -0.7, // 6
 -0.3, -0.7, -0.6, // 7
 -0.7, -0.9, -1.0, // 8
 +6.9, -0.5, -0.4, // 9
  2.4,  2.5,  2.6,
  2.7,  2.8,  2.9,
  3.0,  3.1,  3.2,
  3.3,  3.4,  3.5,
  3.6,  3.7,  3.8,
  3.9,  4.0,  4.1,
  4.2,  4.3,  4.4,
  4.5,  4.6,  4.7,
  4.8,  4.9,  5.0,
  5.1,  5.2,  5.3,
  5.4,  5.5,  5.6,
  5.7,  5.8,  5.9,
  3.0,  4.1,  1.2, // 9y
  3.3,  6.4,  4.5,
  3.6,  3.7,  6.8,
  3.9,  7.0,  6.1,
 -0.5, -1.0, -0.6, // 6
 -0.2, -0.8, -0.9, // 7
 -0.6, -1.0, -1.1, // 8
 -0.5, +6.0, -1.2, // 9
  1.4,  6.5,  2.6,
  1.7,  9.8,  2.9,
  1.0,  5.1,  3.2,
  1.3,  3.4,  3.5,
  2.6,  2.7,  3.8,
  2.9,  4.0,  4.1,
  2.2,  4.3,  4.4,
  3.5,  4.6,  4.7,
  3.8,  4.9,  5.0,
  4.1,  5.2,  5.3,
  5.4,  5.5,  5.6,
  7.7,  5.8,  5.9,
  3.0,  4.1,  1.2, // 9z
  3.3,  6.4,  4.5,
  3.6,  3.7,  6.8,
  3.9,  7.0,  6.1,
 -0.4, -0.9, -0.5, // 6
 -0.1, -0.9, -0.7, // 7
 -0.5, -1.1, -1.2, // 8
 -0.4, -1.2, +6.1, // 9
  1.4,  6.5,  2.6,
  1.7,  9.8,  2.9,
  1.0,  5.1,  3.2,
  1.3,  3.4,  3.5,
  2.6,  2.7,  3.8,
  2.9,  4.0,  4.1,
  2.2,  4.3,  4.4,
  3.5,  4.6,  4.7,
  3.8,  4.9,  5.0,
  4.1,  5.2,  5.3,
  5.4,  5.5,  5.6,
  7.7,  5.8,  5.9,
  1.0,  0.1,  0.2, // 10x
  0.3,  0.4,  0.5,
  0.6,  0.7,  0.8,
  0.9,  1.0,  1.1,
  1.2,  1.3,  1.4,
  1.5,  1.6,  1.7,
  1.8,  1.9,  2.0,
  2.1,  2.2,  2.3,
  2.4,  2.5,  2.6,
  2.7,  2.8,  2.9,
  3.0,  3.1,  3.2,
  3.3,  3.4,  3.5,
  3.6,  3.7,  3.8,
  3.9,  4.0,  4.1,
  4.2,  4.3,  4.4,
  4.5,  4.6,  4.7,
  4.8,  4.9,  5.0,
  5.1,  5.2,  5.3,
  5.4,  5.5,  5.6,
  5.7,  5.8,  5.9,
  3.0,  4.1,  1.2, // 10y
  3.3,  6.4,  4.5,
  3.6,  3.7,  6.8,
  3.9,  7.0,  6.1,
  3.2,  5.3,  3.4,
  1.5,  4.6,  2.7,
  2.8,  3.9,  2.0,
  2.1,  6.2,  2.3,
  1.4,  6.5,  2.6,
  1.7,  9.8,  2.9,
  1.0,  5.1,  3.2,
  1.3,  3.4,  3.5,
  2.6,  2.7,  3.8,
  2.9,  4.0,  4.1,
  2.2,  4.3,  4.4,
  3.5,  4.6,  4.7,
  3.8,  4.9,  5.0,
  4.1,  5.2,  5.3,
  5.4,  5.5,  5.6,
  7.7,  5.8,  5.9,
  3.0,  4.1,  1.2, // 10z
  3.3,  6.4,  4.5,
  3.6,  3.7,  6.8,
  3.9,  7.0,  6.1,
  3.2,  5.3,  3.4,
  1.5,  4.6,  2.7,
  2.8,  3.9,  2.0,
  2.1,  6.2,  2.3,
  1.4,  6.5,  2.6,
  1.7,  9.8,  2.9,
  1.0,  5.1,  3.2,
  1.3,  3.4,  3.5,
  2.6,  2.7,  3.8,
  2.9,  4.0,  4.1,
  2.2,  4.3,  4.4,
  3.5,  4.6,  4.7,
  3.8,  4.9,  5.0,
  4.1,  5.2,  5.3,
  5.4,  5.5,  5.6,
  7.7,  5.8,  5.9,
  1.0,  0.1,  0.2, // 11x
  0.3,  0.4,  0.5,
  0.6,  0.7,  0.8,
  0.9,  1.0,  1.1,
  1.2,  1.3,  1.4,
  1.5,  1.6,  1.7,
  1.8,  1.9,  2.0,
  2.1,  2.2,  2.3,
  2.4,  2.5,  2.6,
  2.7,  2.8,  2.9,
  3.0,  3.1,  3.2,
  3.3,  3.4,  3.5,
  3.6,  3.7,  3.8,
  3.9,  4.0,  4.1,
  4.2,  4.3,  4.4,
  4.5,  4.6,  4.7,
  4.8,  4.9,  5.0,
  5.1,  5.2,  5.3,
  5.4,  5.5,  5.6,
  5.7,  5.8,  5.9,
  3.0,  4.1,  1.2, // 11y
  3.3,  6.4,  4.5,
  3.6,  3.7,  6.8,
  3.9,  7.0,  6.1,
  3.2,  5.3,  3.4,
  1.5,  4.6,  2.7,
  2.8,  3.9,  2.0,
  2.1,  6.2,  2.3,
  1.4,  6.5,  2.6,
  1.7,  9.8,  2.9,
  1.0,  5.1,  3.2,
  1.3,  3.4,  3.5,
  2.6,  2.7,  3.8,
  2.9,  4.0,  4.1,
  2.2,  4.3,  4.4,
  3.5,  4.6,  4.7,
  3.8,  4.9,  5.0,
  4.1,  5.2,  5.3,
  5.4,  5.5,  5.6,
  7.7,  5.8,  5.9,
  3.0,  4.1,  1.2, // 11z
  3.3,  6.4,  4.5,
  3.6,  3.7,  6.8,
  3.9,  7.0,  6.1,
  3.2,  5.3,  3.4,
  1.5,  4.6,  2.7,
  2.8,  3.9,  2.0,
  2.1,  6.2,  2.3,
  1.4,  6.5,  2.6,
  1.7,  9.8,  2.9,
  1.0,  5.1,  3.2,
  1.3,  3.4,  3.5,
  2.6,  2.7,  3.8,
  2.9,  4.0,  4.1,
  2.2,  4.3,  4.4,
  3.5,  4.6,  4.7,
  3.8,  4.9,  5.0,
  4.1,  5.2,  5.3,
  5.4,  5.5,  5.6,
  7.7,  5.8,  5.9,
  1.0,  0.1,  0.2, // 12x
  0.3,  0.4,  0.5,
  0.6,  0.7,  0.8,
  0.9,  1.0,  1.1,
  1.2,  1.3,  1.4,
  1.5,  1.6,  1.7,
  1.8,  1.9,  2.0,
  2.1,  2.2,  2.3,
  2.4,  2.5,  2.6,
  2.7,  2.8,  2.9,
  3.0,  3.1,  3.2,
  3.3,  3.4,  3.5,
  3.6,  3.7,  3.8,
  3.9,  4.0,  4.1,
  4.2,  4.3,  4.4,
  4.5,  4.6,  4.7,
  4.8,  4.9,  5.0,
  5.1,  5.2,  5.3,
  5.4,  5.5,  5.6,
  5.7,  5.8,  5.9,
  3.0,  4.1,  1.2, // 12y
  3.3,  6.4,  4.5,
  3.6,  3.7,  6.8,
  3.9,  7.0,  6.1,
  3.2,  5.3,  3.4,
  1.5,  4.6,  2.7,
  2.8,  3.9,  2.0,
  2.1,  6.2,  2.3,
  1.4,  6.5,  2.6,
  1.7,  9.8,  2.9,
  1.0,  5.1,  3.2,
  1.3,  3.4,  3.5,
  2.6,  2.7,  3.8,
  2.9,  4.0,  4.1,
  2.2,  4.3,  4.4,
  3.5,  4.6,  4.7,
  3.8,  4.9,  5.0,
  4.1,  5.2,  5.3,
  5.4,  5.5,  5.6,
  7.7,  5.8,  5.9,
  3.0,  4.1,  1.2, // 12z
  3.3,  6.4,  4.5,
  3.6,  3.7,  6.8,
  3.9,  7.0,  6.1,
  3.2,  5.3,  3.4,
  1.5,  4.6,  2.7,
  2.8,  3.9,  2.0,
  2.1,  6.2,  2.3,
  1.4,  6.5,  2.6,
  1.7,  9.8,  2.9,
  1.0,  5.1,  3.2,
  1.3,  3.4,  3.5,
  2.6,  2.7,  3.8,
  2.9,  4.0,  4.1,
  2.2,  4.3,  4.4,
  3.5,  4.6,  4.7,
  3.8,  4.9,  5.0,
  4.1,  5.2,  5.3,
  5.4,  5.5,  5.6,
  7.7,  5.8,  5.9,
  1.0,  0.1,  0.2, // 13x
  0.3,  0.4,  0.5,
  0.6,  0.7,  0.8,
  0.9,  1.0,  1.1,
  1.2,  1.3,  1.4,
  1.5,  1.6,  1.7,
  1.8,  1.9,  2.0,
  2.1,  2.2,  2.3,
  2.4,  2.5,  2.6,
  2.7,  2.8,  2.9,
  3.0,  3.1,  3.2,
  3.3,  3.4,  3.5,
  3.6,  3.7,  3.8,
  3.9,  4.0,  4.1,
  4.2,  4.3,  4.4,
  4.5,  4.6,  4.7,
  4.8,  4.9,  5.0,
  5.1,  5.2,  5.3,
  5.4,  5.5,  5.6,
  5.7,  5.8,  5.9,
  3.0,  4.1,  1.2, // 13y
  3.3,  6.4,  4.5,
  3.6,  3.7,  6.8,
  3.9,  7.0,  6.1,
  3.2,  5.3,  3.4,
  1.5,  4.6,  2.7,
  2.8,  3.9,  2.0,
  2.1,  6.2,  2.3,
  1.4,  6.5,  2.6,
  1.7,  9.8,  2.9,
  1.0,  5.1,  3.2,
  1.3,  3.4,  3.5,
  2.6,  2.7,  3.8,
  2.9,  4.0,  4.1,
  2.2,  4.3,  4.4,
  3.5,  4.6,  4.7,
  3.8,  4.9,  5.0,
  4.1,  5.2,  5.3,
  5.4,  5.5,  5.6,
  7.7,  5.8,  5.9,
  3.0,  4.1,  1.2, // 13z
  3.3,  6.4,  4.5,
  3.6,  3.7,  6.8,
  3.9,  7.0,  6.1,
  3.2,  5.3,  3.4,
  1.5,  4.6,  2.7,
  2.8,  3.9,  2.0,
  2.1,  6.2,  2.3,
  1.4,  6.5,  2.6,
  1.7,  9.8,  2.9,
  1.0,  5.1,  3.2,
  1.3,  3.4,  3.5,
  2.6,  2.7,  3.8,
  2.9,  4.0,  4.1,
  2.2,  4.3,  4.4,
  3.5,  4.6,  4.7,
  3.8,  4.9,  5.0,
  4.1,  5.2,  5.3,
  5.4,  5.5,  5.6,
  7.7,  5.8,  5.9,
  1.0,  0.1,  0.2, // 14x
  0.3,  0.4,  0.5,
  0.6,  0.7,  0.8,
  0.9,  1.0,  1.1,
  2.4,  2.5,  2.6,
  2.7,  2.8,  2.9,
  3.0,  3.1,  3.2,
  3.3,  3.4,  3.5,
  3.6,  3.7,  3.8,
  3.9,  4.0,  4.1,
  4.2,  4.3,  4.4,
  4.5,  4.6,  4.7,
 +7.0, -0.5, -0.6, // 14
 -0.7, -0.8, -0.9, // 15
 -1.0, -0.8, -0.7, // 16
 -0.6, -0.5, -0.4, // 17
  4.8,  4.9,  5.0,
  5.1,  5.2,  5.3,
  5.4,  5.5,  5.6,
  5.7,  5.8,  5.9,
  3.0,  4.1,  1.2, // 14y
  3.3,  6.4,  4.5,
  3.6,  3.7,  6.8,
  3.9,  7.0,  6.1,
  1.4,  6.5,  2.6,
  1.7,  9.8,  2.9,
  1.0,  5.1,  3.2,
  1.3,  3.4,  3.5,
  2.6,  2.7,  3.8,
  2.9,  4.0,  4.1,
  2.2,  4.3,  4.4,
  3.5,  4.6,  4.7,
 -0.5, +7.1, -1.0, // 14
 -1.1, -1.2, -1.3, // 15
 -1.4, -1.3, -1.2, // 16
 -1.1, -1.0, -0.9, // 17
  3.8,  4.9,  5.0,
  4.1,  5.2,  5.3,
  5.4,  5.5,  5.6,
  7.7,  5.8,  5.9,
  3.0,  4.1,  1.2, // 14z
  3.3,  6.4,  4.5,
  3.6,  3.7,  6.8,
  3.9,  7.0,  6.1,
  1.4,  6.5,  2.6,
  1.7,  9.8,  2.9,
  1.0,  5.1,  3.2,
  1.3,  3.4,  3.5,
  2.6,  2.7,  3.8,
  2.9,  4.0,  4.1,
  2.2,  4.3,  4.4,
  3.5,  4.6,  4.7,
 -0.6, -1.0, +7.2, // 14
 -0.5, -0.6, -0.7, // 15
 -0.8, -0.9, -0.8, // 16
 -0.7, -0.6, -0.5, // 17
  3.8,  4.9,  5.0,
  4.1,  5.2,  5.3,
  5.4,  5.5,  5.6,
  7.7,  5.8,  5.9,
  1.0,  0.1,  0.2, // 15x
  0.3,  0.4,  0.5,
  0.6,  0.7,  0.8,
  0.9,  1.0,  1.1,
  2.4,  2.5,  2.6,
  2.7,  2.8,  2.9,
  3.0,  3.1,  3.2,
  3.3,  3.4,  3.5,
  3.6,  3.7,  3.8,
  3.9,  4.0,  4.1,
  4.2,  4.3,  4.4,
  4.5,  4.6,  4.7,
 -0.7, -1.1, -0.5, // 14
 +7.3, -0.8, -0.7, // 15
 -0.6, -0.5, -0.4, // 16
 -0.3, -0.2, -0.1, // 17
  4.8,  4.9,  5.0,
  5.1,  5.2,  5.3,
  5.4,  5.5,  5.6,
  5.7,  5.8,  5.9,
  3.0,  4.1,  1.2, // 15y
  3.3,  6.4,  4.5,
  3.6,  3.7,  6.8,
  3.9,  7.0,  6.1,
  1.4,  6.5,  2.6,
  1.7,  9.8,  2.9,
  1.0,  5.1,  3.2,
  1.3,  3.4,  3.5,
  2.6,  2.7,  3.8,
  2.9,  4.0,  4.1,
  2.2,  4.3,  4.4,
  3.5,  4.6,  4.7,
 -0.8, -1.2, -0.6, // 14
 -0.8, +7.4, -0.3, // 15
 -0.4, -0.5, -0.6, // 16
 -0.7, -0.8, -0.9, // 17
  3.8,  4.9,  5.0,
  4.1,  5.2,  5.3,
  5.4,  5.5,  5.6,
  7.7,  5.8,  5.9,
  3.0,  4.1,  1.2, // 15z
  3.3,  6.4,  4.5,
  3.6,  3.7,  6.8,
  3.9,  7.0,  6.1,
  1.4,  6.5,  2.6,
  1.7,  9.8,  2.9,
  1.0,  5.1,  3.2,
  1.3,  3.4,  3.5,
  2.6,  2.7,  3.8,
  2.9,  4.0,  4.1,
  2.2,  4.3,  4.4,
  3.5,  4.6,  4.7,
 -0.9, -1.3, -0.7, // 14
 -0.7, -0.3, +7.5, // 15
 -0.3, -0.8, -0.7, // 16
 -0.6, -0.9, -0.7, // 17
  3.8,  4.9,  5.0,
  4.1,  5.2,  5.3,
  5.4,  5.5,  5.6,
  7.7,  5.8,  5.9,
  1.0,  0.1,  0.2, // 16x
  0.3,  0.4,  0.5,
  0.6,  0.7,  0.8,
  0.9,  1.0,  1.1,
  2.4,  2.5,  2.6,
  2.7,  2.8,  2.9,
  3.0,  3.1,  3.2,
  3.3,  3.4,  3.5,
  3.6,  3.7,  3.8,
  3.9,  4.0,  4.1,
  4.2,  4.3,  4.4,
  4.5,  4.6,  4.7,
 -1.0, -1.4, -0.8, // 14
 -0.6, -0.4, -0.3, // 15
 +7.6, -1.1, -0.8, // 16
 -0.7, -0.6, -0.5, // 17
  4.8,  4.9,  5.0,
  5.1,  5.2,  5.3,
  5.4,  5.5,  5.6,
  5.7,  5.8,  5.9,
  3.0,  4.1,  1.2, // 16y
  3.3,  6.4,  4.5,
  3.6,  3.7,  6.8,
  3.9,  7.0,  6.1,
  1.4,  6.5,  2.6,
  1.7,  9.8,  2.9,
  1.0,  5.1,  3.2,
  1.3,  3.4,  3.5,
  2.6,  2.7,  3.8,
  2.9,  4.0,  4.1,
  2.2,  4.3,  4.4,
  3.5,  4.6,  4.7,
 -0.8, -1.3, -0.9, // 14
 -0.5, -0.5, -0.8, // 15
 -1.1, +7.7, -0.8, // 16
 -0.9, -1.0, -1.1, // 17
  3.8,  4.9,  5.0,
  4.1,  5.2,  5.3,
  5.4,  5.5,  5.6,
  7.7,  5.8,  5.9,
  3.0,  4.1,  1.2, // 16z
  3.3,  6.4,  4.5,
  3.6,  3.7,  6.8,
  3.9,  7.0,  6.1,
  1.4,  6.5,  2.6,
  1.7,  9.8,  2.9,
  1.0,  5.1,  3.2,
  1.3,  3.4,  3.5,
  2.6,  2.7,  3.8,
  2.9,  4.0,  4.1,
  2.2,  4.3,  4.4,
  3.5,  4.6,  4.7,
 -0.7, -1.2, -0.8, // 14
 -0.4, -0.6, -0.7, // 15
 -0.8, -0.8, +7.8, // 16
 -1.0, -1.1, -1.2, // 17
  3.8,  4.9,  5.0,
  4.1,  5.2,  5.3,
  5.4,  5.5,  5.6,
  7.7,  5.8,  5.9,
  1.0,  0.1,  0.2, // 17x
  0.3,  0.4,  0.5,
  0.6,  0.7,  0.8,
  0.9,  1.0,  1.1,
  2.4,  2.5,  2.6,
  2.7,  2.8,  2.9,
  3.0,  3.1,  3.2,
  3.3,  3.4,  3.5,
  3.6,  3.7,  3.8,
  3.9,  4.0,  4.1,
  4.2,  4.3,  4.4,
  4.5,  4.6,  4.7,
 -0.6, -1.1, -0.7, // 14
 -0.3, -0.7, -0.6, // 15
 -0.7, -0.9, -1.0, // 16
 +7.9, -0.5, -0.4, // 17
  4.8,  4.9,  5.0,
  5.1,  5.2,  5.3,
  5.4,  5.5,  5.6,
  5.7,  5.8,  5.9,
  3.0,  4.1,  1.2, // 17y
  3.3,  6.4,  4.5,
  3.6,  3.7,  6.8,
  3.9,  7.0,  6.1,
  1.4,  6.5,  2.6,
  1.7,  9.8,  2.9,
  1.0,  5.1,  3.2,
  1.3,  3.4,  3.5,
  2.6,  2.7,  3.8,
  2.9,  4.0,  4.1,
  2.2,  4.3,  4.4,
  3.5,  4.6,  4.7,
 -0.5, -1.0, -0.6, // 14
 -0.2, -0.8, -0.9, // 15
 -0.6, -1.0, -1.1, // 16
 -0.5, +7.0, -1.2, // 17
  3.8,  4.9,  5.0,
  4.1,  5.2,  5.3,
  5.4,  5.5,  5.6,
  7.7,  5.8,  5.9,
  3.0,  4.1,  1.2, // 17z
  3.3,  6.4,  4.5,
  3.6,  3.7,  6.8,
  3.9,  7.0,  6.1,
  1.4,  6.5,  2.6,
  1.7,  9.8,  2.9,
  1.0,  5.1,  3.2,
  1.3,  3.4,  3.5,
  2.6,  2.7,  3.8,
  2.9,  4.0,  4.1,
  2.2,  4.3,  4.4,
  3.5,  4.6,  4.7,
 -0.4, -0.9, -0.5, // 14
 -0.1, -0.9, -0.7, // 15
 -0.5, -1.1, -1.2, // 16
 -0.4, -1.2, +7.1, // 17
  3.8,  4.9,  5.0,
  4.1,  5.2,  5.3,
  5.4,  5.5,  5.6,
  7.7,  5.8,  5.9,
};

const double pylith::faults::CohesiveDynDataHex8::_orientation[] = {
  0.0, -1.0, 0.0,    0.0, 0.0, +1.0,    -1.0, 0.0, 0.0,
  0.0, -1.0, 0.0,    0.0, 0.0, +1.0,    -1.0, 0.0, 0.0,
  0.0, -1.0, 0.0,    0.0, 0.0, +1.0,    -1.0, 0.0, 0.0,
  0.0, -1.0, 0.0,    0.0, 0.0, +1.0,    -1.0, 0.0, 0.0,
};

const double pylith::faults::CohesiveDynDataHex8::_area[] = {
  1.0, 1.0, 1.0, 1.0
};

const double pylith::faults::CohesiveDynDataHex8::_initialTractions[] = {
  +3.0, -1.0, +2.0,
  +3.1, -1.1, +2.1,
  +3.2, -1.2, +2.2,
  +3.3, -1.3, +2.3,
};


const int pylith::faults::CohesiveDynDataHex8::_numConstraintVert = 4;
const int pylith::faults::CohesiveDynDataHex8::_constraintVertices[] = {
  18, 19, 20, 21
};
// ----------------------------------------------------------------------
// Stick case
// ----------------------------------------------------------------------
// Input
const double pylith::faults::CohesiveDynDataHex8::_fieldIncrStick[] = {
  0.1, 2.1, 1.1,
  0.2, 2.2, 1.2,
  0.3, 2.3, 1.3,
  0.4, 2.4, 1.4,
  0.5, 2.5, 1.5, // 6
  0.6, 2.6, 1.6, // 7
  0.7, 2.7, 1.7, // 8
  0.8, 2.8, 1.8, // 9
  0.9, 2.9, 1.9,
  0.0, 2.0, 1.0,
  1.1, 3.1, 2.1,
  1.2, 3.2, 2.2,
  1.3, 3.3, 2.3, // 14
  1.5, 3.5, 2.5, // 15
  1.7, 3.7, 2.7, // 16
  1.9, 3.9, 2.9, // 17
  41.4, 3.4, 2.4, // 18
  41.6, 3.6, 2.6, // 19
  41.8, 3.8, 2.8, // 20
  41.0, 3.0, 2.0, // 21
};

// No change in fieldIncr
// Zero slip

// ----------------------------------------------------------------------
// Slip case
// ----------------------------------------------------------------------
// Input
const double pylith::faults::CohesiveDynDataHex8::_fieldIncrSlip[] = {
  1.1, 2.1, 0.1,
  1.2, 2.2, 0.2,
  1.3, 2.3, 0.3,
  1.4, 2.4, 0.4,
  1.5, 2.5, 0.5, // 6
  1.6, 2.6, 0.6, // 7
  1.7, 2.7, 0.7, // 8
  1.8, 2.8, 0.8, // 9
  1.9, 2.9, 0.9,
  1.0, 2.0, 0.0,
  1.1, 2.1, 0.1,
  1.2, 2.2, 0.2,
  1.3, 2.3, 0.3, // 14
  1.5, 2.5, 0.5, // 15
  1.7, 2.7, 0.7, // 16
  1.9, 2.9, 0.9, // 17
  1.4, 2.4, 0.4, // 18
  1.6, 2.6, 0.6, // 19
  1.8, 2.8, 0.8, // 20
  1.0, 2.0, 0.2, // 21
};

// Output
const double pylith::faults::CohesiveDynDataHex8::_fieldIncrSlipE[] = {
   1.100000000000,   2.100000000000,   0.100000000000,
   1.200000000000,   2.200000000000,   0.200000000000,
   1.300000000000,   2.300000000000,   0.300000000000,
   1.400000000000,   2.400000000000,   0.400000000000,
   1.500000000000,   3.745293503266,   1.312227205500,
   1.600000000000,   3.294980394575,   1.386664200491,
   1.700000000000,   3.591763265955,   1.582543631245,
   1.800000000000,   3.703107773803,   1.671356663600,
   1.900000000000,   2.900000000000,   0.900000000000,
   1.000000000000,   2.000000000000,   0.000000000000,
   1.100000000000,   2.100000000000,   0.100000000000,
   1.200000000000,   2.200000000000,   0.200000000000,
   1.300000000000,   1.054706496734,  -0.512227205500,
   1.500000000000,   1.805019605425,  -0.286664200491,
   1.700000000000,   1.808236734045,  -0.182543631245,
   1.900000000000,   1.996892226197,   0.028643336400,
   1.400000000000,   0.328479469127,  -1.239953753608,
   1.600000000000,   0.293941190358,  -1.262585961634,
   1.800000000000,   0.259995967920,  -1.286431883494,
   1.000000000000,   0.342606428329,  -1.125914857337,
};

const double pylith::faults::CohesiveDynDataHex8::_slipSlipE[] = {
   2.490587006532,  -1.624454410999,   0.000000000000,
   1.389960789150,  -1.573328400983,   0.000000000000,
   1.783526531910,  -1.765087262491,   0.000000000000,
   1.806215547605,  -1.742713327201,   0.000000000000,
};

// ----------------------------------------------------------------------
// Open case
// ----------------------------------------------------------------------
// Input
const double pylith::faults::CohesiveDynDataHex8::_fieldIncrOpen[] = {
  1.1, 2.1, 0.1,
  1.2, 2.2, 0.2,
  1.3, 2.3, 0.3,
  1.4, 2.4, 0.4,
  1.5, 2.5, 0.5, // 6
  1.6, 2.6, 0.6, // 7
  1.7, 2.7, 0.7, // 8
  1.8, 2.8, 0.8, // 9
  1.9, 2.9, 0.9,
  1.0, 2.0, 0.0,
  1.1, 2.1, 0.1,
  1.2, 2.2, 0.2,
  1.3, 2.3, 0.3, // 14
  1.5, 2.5, 0.5, // 15
  1.7, 2.7, 0.7, // 16
  1.9, 2.9, 0.9, // 17
 -10.4, 2.4, 0.4, // 18
 -10.6, 2.6, 0.6, // 19
 -10.8, 2.8, 0.8, // 20
 -10.0, 2.0, 0.2, // 21
};

// Output
const double pylith::faults::CohesiveDynDataHex8::_fieldIncrOpenE[] = {
   1.100000000000,   2.100000000000,   0.100000000000,
   1.200000000000,   2.200000000000,   0.200000000000,
   1.300000000000,   2.300000000000,   0.300000000000,
   1.400000000000,   2.400000000000,   0.400000000000,
   3.473386524898,   3.450458773757,   1.061077907335,
   3.302801176428,   2.966499592247,   1.097759351340,
   3.627558189277,   3.252968860584,   1.264881344260,
   3.475698668581,   3.241605816971,   1.233144951440,
   1.900000000000,   2.900000000000,   0.900000000000,
   1.000000000000,   2.000000000000,   0.000000000000,
   1.100000000000,   2.100000000000,   0.100000000000,
   1.200000000000,   2.200000000000,   0.200000000000,
  -0.673386524898,   1.349541226243,  -0.261077907335,
  -0.202801176428,   2.133500407753,   0.002240648660,
  -0.227558189277,   2.147031139416,   0.135118655740,
   0.224301331419,   2.458394183029,   0.466855048560,
  -4.400000000000,  -2.400000000000,  -3.400000000000,
  -4.600000000000,  -2.600000000000,  -3.600000000000,
  -4.800000000000,  -2.800000000000,  -3.800000000000,
  -4.000000000000,  -2.000000000000,  -3.000000000000,
};

const double pylith::faults::CohesiveDynDataHex8::_slipOpenE[] = {
   1.900917547514,  -1.122155814671,   3.946773049797,
   0.732999184495,  -0.995518702680,   3.405602352856,
   1.105937721169,  -1.129762688519,   3.855116378553,
   0.883211633942,  -0.866289902880,   3.351397337162,
};

// ----------------------------------------------------------------------
pylith::faults::CohesiveDynDataHex8::CohesiveDynDataHex8(void)
{ // constructor
  meshFilename = const_cast<char*>(_meshFilename);
  spaceDim = _spaceDim;
  cellDim = _cellDim;
  numBasis = _numBasis;
  numQuadPts = _numQuadPts;
  quadPts = const_cast<double*>(_quadPts);
  quadWts = const_cast<double*>(_quadWts);
  basis = const_cast<double*>(_basis);
  basisDeriv = const_cast<double*>(_basisDeriv);
  verticesRef = const_cast<double*>(_verticesRef);
  id = _id;
  label = const_cast<char*>(_label);
  initialTractFilename = const_cast<char*>(_initialTractFilename);

  fieldT = const_cast<double*>(_fieldT);
  jacobian = const_cast<double*>(_jacobian);
  orientation = const_cast<double*>(_orientation);
  area = const_cast<double*>(_area);
  initialTractions = const_cast<double*>(_initialTractions);

  constraintVertices = const_cast<int*>(_constraintVertices);
  numConstraintVert = _numConstraintVert;  

  // Stick
  fieldIncrStick = const_cast<double*>(_fieldIncrStick);

  // Slip
  fieldIncrSlip = const_cast<double*>(_fieldIncrSlip);
  fieldIncrSlipE = const_cast<double*>(_fieldIncrSlipE);
  slipSlipE = const_cast<double*>(_slipSlipE);

  // Open
  fieldIncrOpen = const_cast<double*>(_fieldIncrOpen);
  fieldIncrOpenE = const_cast<double*>(_fieldIncrOpenE);
  slipOpenE = const_cast<double*>(_slipOpenE);
} // constructor

pylith::faults::CohesiveDynDataHex8::~CohesiveDynDataHex8(void)
{}


// End of file
