// -*- C++ -*-
//
// ======================================================================
//
//                           Brad T. Aagaard
//                        U.S. Geological Survey
//
// {LicenseText}
//
// ======================================================================
//

// DO NOT EDIT THIS FILE
// This file was generated from python application quadrature1din2dlinear.

#include "QuadratureData1Din2DLinear.hh"

const int pylith::feassemble::QuadratureData1Din2DLinear::_numVertices = 2;

const int pylith::feassemble::QuadratureData1Din2DLinear::_spaceDim = 2;

const int pylith::feassemble::QuadratureData1Din2DLinear::_numCells = 1;

const int pylith::feassemble::QuadratureData1Din2DLinear::_cellDim = 1;

const int pylith::feassemble::QuadratureData1Din2DLinear::_numBasis = 2;

const int pylith::feassemble::QuadratureData1Din2DLinear::_numQuadPts = 1;

const double pylith::feassemble::QuadratureData1Din2DLinear::_vertices[] = {
 -2.00000000e-01, -5.00000000e-01,
  7.00000000e-01,  3.00000000e-01,
};

const int pylith::feassemble::QuadratureData1Din2DLinear::_cells[] = {
       0,       1,
};

const double pylith::feassemble::QuadratureData1Din2DLinear::_quadPtsRef[] = {
  0.00000000e+00,
};

const double pylith::feassemble::QuadratureData1Din2DLinear::_quadWts[] = {
  2.00000000e+00,
};

const double pylith::feassemble::QuadratureData1Din2DLinear::_quadPts[] = {
  2.50000000e-01, -1.00000000e-01,
};

const double pylith::feassemble::QuadratureData1Din2DLinear::_basisVert[] = {
  1.00000000e+00,
  0.00000000e+00,
  0.00000000e+00,
  1.00000000e+00,
};

const double pylith::feassemble::QuadratureData1Din2DLinear::_basisDerivVert[] = {
 -5.00000000e-01,
  5.00000000e-01,
 -5.00000000e-01,
  5.00000000e-01,
};

const double pylith::feassemble::QuadratureData1Din2DLinear::_jacobianVert[] = {
  4.50000000e-01,  4.00000000e-01,
  4.50000000e-01,  4.00000000e-01,
};

const double pylith::feassemble::QuadratureData1Din2DLinear::_jacobianDetVert[] = {
  6.02079729e-01,  6.02079729e-01,
};

const double pylith::feassemble::QuadratureData1Din2DLinear::_basisQuad[] = {
  5.00000000e-01,
  5.00000000e-01,
};

const double pylith::feassemble::QuadratureData1Din2DLinear::_basisDerivQuad[] = {
 -5.00000000e-01,
  5.00000000e-01,
};

const double pylith::feassemble::QuadratureData1Din2DLinear::_jacobianQuad[] = {
  4.50000000e-01,  4.00000000e-01,
};

const double pylith::feassemble::QuadratureData1Din2DLinear::_jacobianDetQuad[] = {
  6.02079729e-01,
};

const double pylith::feassemble::QuadratureData1Din2DLinear::_jacobianInvQuad[] = {
  2.22222222e+00,
  2.50000000e+00,
};

pylith::feassemble::QuadratureData1Din2DLinear::QuadratureData1Din2DLinear(void)
{ // constructor
  numVertices = _numVertices;
  spaceDim = _spaceDim;
  numCells = _numCells;
  cellDim = _cellDim;
  numBasis = _numBasis;
  numQuadPts = _numQuadPts;
  vertices = const_cast<double*>(_vertices);
  cells = const_cast<int*>(_cells);
  quadPtsRef = const_cast<double*>(_quadPtsRef);
  quadWts = const_cast<double*>(_quadWts);
  quadPts = const_cast<double*>(_quadPts);
  basisVert = const_cast<double*>(_basisVert);
  basisDerivVert = const_cast<double*>(_basisDerivVert);
  jacobianVert = const_cast<double*>(_jacobianVert);
  jacobianDetVert = const_cast<double*>(_jacobianDetVert);
  basisQuad = const_cast<double*>(_basisQuad);
  basisDerivQuad = const_cast<double*>(_basisDerivQuad);
  jacobianQuad = const_cast<double*>(_jacobianQuad);
  jacobianDetQuad = const_cast<double*>(_jacobianDetQuad);
  jacobianInvQuad = const_cast<double*>(_jacobianInvQuad);
} // constructor

pylith::feassemble::QuadratureData1Din2DLinear::~QuadratureData1Din2DLinear(void)
{}


// End of file
