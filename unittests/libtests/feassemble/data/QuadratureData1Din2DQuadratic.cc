// -*- C++ -*-
//
// ======================================================================
//
//                           Brad T. Aagaard
//                        U.S. Geological Survey
//
// {LicenseText}
//
// ======================================================================
//

// DO NOT EDIT THIS FILE
// This file was generated from python application quadrature1din2dquadratic.

#include "QuadratureData1Din2DQuadratic.hh"

const int pylith::feassemble::QuadratureData1Din2DQuadratic::_numVertices = 3;

const int pylith::feassemble::QuadratureData1Din2DQuadratic::_spaceDim = 2;

const int pylith::feassemble::QuadratureData1Din2DQuadratic::_numCells = 1;

const int pylith::feassemble::QuadratureData1Din2DQuadratic::_cellDim = 1;

const int pylith::feassemble::QuadratureData1Din2DQuadratic::_numBasis = 3;

const int pylith::feassemble::QuadratureData1Din2DQuadratic::_numQuadPts = 2;

const double pylith::feassemble::QuadratureData1Din2DQuadratic::_vertices[] = {
 -2.00000000e-01, -5.00000000e-01,
  3.00000000e-01, -2.00000000e-01,
  7.00000000e-01,  3.00000000e-01,
};

const int pylith::feassemble::QuadratureData1Din2DQuadratic::_cells[] = {
       0,       1,       2,
};

const double pylith::feassemble::QuadratureData1Din2DQuadratic::_quadPtsRef[] = {
 -5.77350269e-01,
  5.77350269e-01,
};

const double pylith::feassemble::QuadratureData1Din2DQuadratic::_quadWts[] = {
  1.00000000e+00,  1.00000000e+00,
};

const double pylith::feassemble::QuadratureData1Din2DQuadratic::_quadPts[] = {
  2.35257122e-02, -3.97606774e-01,
  5.43140954e-01,  6.42734410e-02,
};

const double pylith::feassemble::QuadratureData1Din2DQuadratic::_basisVert[] = {
  1.00000000e+00,
  0.00000000e+00,
 -0.00000000e+00,
 -0.00000000e+00,
  1.00000000e+00,
  0.00000000e+00,
 -0.00000000e+00,
  0.00000000e+00,
  1.00000000e+00,
};

const double pylith::feassemble::QuadratureData1Din2DQuadratic::_basisDerivVert[] = {
 -1.50000000e+00,
  2.00000000e+00,
 -5.00000000e-01,
 -5.00000000e-01,
 -0.00000000e+00,
  5.00000000e-01,
  5.00000000e-01,
 -2.00000000e+00,
  1.50000000e+00,
};

const double pylith::feassemble::QuadratureData1Din2DQuadratic::_jacobianVert[] = {
  5.50000000e-01,  2.00000000e-01,
  4.50000000e-01,  4.00000000e-01,
  3.50000000e-01,  6.00000000e-01,
};

const double pylith::feassemble::QuadratureData1Din2DQuadratic::_jacobianDetVert[] = {
  5.85234996e-01,  6.02079729e-01,  6.94622199e-01,
};

const double pylith::feassemble::QuadratureData1Din2DQuadratic::_basisQuad[] = {
  4.55341801e-01,
  6.66666667e-01,
 -1.22008468e-01,
 -1.22008468e-01,
  6.66666667e-01,
  4.55341801e-01,
};

const double pylith::feassemble::QuadratureData1Din2DQuadratic::_basisDerivQuad[] = {
 -1.07735027e+00,
  1.15470054e+00,
 -7.73502692e-02,
  7.73502692e-02,
 -1.15470054e+00,
  1.07735027e+00,
};

const double pylith::feassemble::QuadratureData1Din2DQuadratic::_jacobianQuad[] = {
  5.07735027e-01,  2.84529946e-01,
  3.92264973e-01,  5.15470054e-01,
};

const double pylith::feassemble::QuadratureData1Din2DQuadratic::_jacobianDetQuad[] = {
  5.82024181e-01,  6.47750867e-01,
};

const double pylith::feassemble::QuadratureData1Din2DQuadratic::_jacobianInvQuad[] = {
  1.96953125e+00,
  3.51456855e+00,
  2.54929721e+00,
  1.93997691e+00,
};

pylith::feassemble::QuadratureData1Din2DQuadratic::QuadratureData1Din2DQuadratic(void)
{ // constructor
  numVertices = _numVertices;
  spaceDim = _spaceDim;
  numCells = _numCells;
  cellDim = _cellDim;
  numBasis = _numBasis;
  numQuadPts = _numQuadPts;
  vertices = const_cast<double*>(_vertices);
  cells = const_cast<int*>(_cells);
  quadPtsRef = const_cast<double*>(_quadPtsRef);
  quadWts = const_cast<double*>(_quadWts);
  quadPts = const_cast<double*>(_quadPts);
  basisVert = const_cast<double*>(_basisVert);
  basisDerivVert = const_cast<double*>(_basisDerivVert);
  jacobianVert = const_cast<double*>(_jacobianVert);
  jacobianDetVert = const_cast<double*>(_jacobianDetVert);
  basisQuad = const_cast<double*>(_basisQuad);
  basisDerivQuad = const_cast<double*>(_basisDerivQuad);
  jacobianQuad = const_cast<double*>(_jacobianQuad);
  jacobianDetQuad = const_cast<double*>(_jacobianDetQuad);
  jacobianInvQuad = const_cast<double*>(_jacobianInvQuad);
} // constructor

pylith::feassemble::QuadratureData1Din2DQuadratic::~QuadratureData1Din2DQuadratic(void)
{}


// End of file
