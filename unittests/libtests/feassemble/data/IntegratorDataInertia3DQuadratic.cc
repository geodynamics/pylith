// -*- C++ -*-
//
// ======================================================================
//
//                           Brad T. Aagaard
//                        U.S. Geological Survey
//
// {LicenseText}
//
// ======================================================================
//

// DO NOT EDIT THIS FILE
// This file was generated from python application itnegratorinertia3dquadratic.

#include "IntegratorDataInertia3DQuadratic.hh"

const int pylith::feassemble::IntegratorDataInertia3DQuadratic::_numVertices = 10;

const int pylith::feassemble::IntegratorDataInertia3DQuadratic::_spaceDim = 3;

const int pylith::feassemble::IntegratorDataInertia3DQuadratic::_numCells = 1;

const int pylith::feassemble::IntegratorDataInertia3DQuadratic::_cellDim = 3;

const int pylith::feassemble::IntegratorDataInertia3DQuadratic::_numCorners = 10;

const int pylith::feassemble::IntegratorDataInertia3DQuadratic::_numQuadPts = 4;

const int pylith::feassemble::IntegratorDataInertia3DQuadratic::_fiberDim = 3;

const double pylith::feassemble::IntegratorDataInertia3DQuadratic::_vertices[] = {
 -5.00000000e-01, -2.00000000e+00, -1.00000000e+00,
  2.00000000e+00, -2.00000000e+00, -5.00000000e-01,
  1.00000000e+00,  1.00000000e+00,  0.00000000e+00,
  2.00000000e-01,  5.00000000e-01,  2.00000000e+00,
  7.00000000e-01, -2.10000000e+00, -8.00000000e-01,
  3.00000000e-01, -5.00000000e-01, -5.00000000e-01,
 -2.00000000e-01, -8.00000000e-01,  5.00000000e-01,
  1.50000000e+00, -6.00000000e-01, -2.00000000e-01,
  6.00000000e-01,  8.00000000e-01,  9.00000000e-01,
  1.10000000e+00, -8.00000000e-01,  7.00000000e-01,
};

const int pylith::feassemble::IntegratorDataInertia3DQuadratic::_cells[] = {
       0,       1,       2,       3,       4,       5,       6,       7,       8,       9,
};

const double pylith::feassemble::IntegratorDataInertia3DQuadratic::_quadPts[] = {
  8.33333333e-02,  8.33333333e-02,  8.33333333e-02,
  7.50000000e-01,  8.33333333e-02,  8.33333333e-02,
  8.33333333e-02,  7.50000000e-01,  8.33333333e-02,
  8.33333333e-02,  8.33333333e-02,  7.50000000e-01,
};

const double pylith::feassemble::IntegratorDataInertia3DQuadratic::_quadWts[] = {
  1.25000000e-01,  1.25000000e-01,  1.25000000e-01,  1.25000000e-01,
};

const double pylith::feassemble::IntegratorDataInertia3DQuadratic::_basis[] = {
  3.75000000e-01, -6.94444444e-02, -6.94444444e-02,
 -6.94444444e-02,  2.50000000e-01,  2.50000000e-01,
  2.50000000e-01,  2.77777778e-02,  2.77777778e-02,
  2.77777778e-02, -6.94444444e-02,  3.75000000e-01,
 -6.94444444e-02, -6.94444444e-02,  2.50000000e-01,
  2.77777778e-02,  2.77777778e-02,  2.50000000e-01,
  2.77777778e-02,  2.50000000e-01, -6.94444444e-02,
 -6.94444444e-02,  3.75000000e-01, -6.94444444e-02,
  2.77777778e-02,  2.50000000e-01,  2.77777778e-02,
  2.50000000e-01,  2.50000000e-01,  2.77777778e-02,
 -6.94444444e-02, -6.94444444e-02, -6.94444444e-02,
  3.75000000e-01,  2.77777778e-02,  2.77777778e-02,
  2.50000000e-01,  2.77777778e-02,  2.50000000e-01,
  2.50000000e-01,};

const double pylith::feassemble::IntegratorDataInertia3DQuadratic::_basisDeriv[] = {
 -2.00000000e+00, -2.00000000e+00, -2.00000000e+00,
 -6.66666667e-01,  0.00000000e+00,  0.00000000e+00,
  0.00000000e+00, -6.66666667e-01,  0.00000000e+00,
  0.00000000e+00,  0.00000000e+00, -6.66666667e-01,
  2.66666667e+00, -3.33333333e-01, -3.33333333e-01,
 -3.33333333e-01,  2.66666667e+00, -3.33333333e-01,
 -3.33333333e-01, -3.33333333e-01,  2.66666667e+00,
  3.33333333e-01,  3.33333333e-01,  0.00000000e+00,
  0.00000000e+00,  3.33333333e-01,  3.33333333e-01,
  3.33333333e-01,  0.00000000e+00,  3.33333333e-01,
  6.66666667e-01,  6.66666667e-01,  6.66666667e-01,
  2.00000000e+00,  0.00000000e+00,  0.00000000e+00,
  0.00000000e+00, -6.66666667e-01,  0.00000000e+00,
  0.00000000e+00,  0.00000000e+00, -6.66666667e-01,
 -2.66666667e+00, -3.00000000e+00, -3.00000000e+00,
 -3.33333333e-01,  1.11022302e-16, -3.33333333e-01,
 -3.33333333e-01, -3.33333333e-01,  1.11022302e-16,
  3.33333333e-01,  3.00000000e+00,  0.00000000e+00,
  0.00000000e+00,  3.33333333e-01,  3.33333333e-01,
  3.33333333e-01,  0.00000000e+00,  3.00000000e+00,
  6.66666667e-01,  6.66666667e-01,  6.66666667e-01,
 -6.66666667e-01,  0.00000000e+00,  0.00000000e+00,
  0.00000000e+00,  2.00000000e+00,  0.00000000e+00,
  0.00000000e+00,  0.00000000e+00, -6.66666667e-01,
  1.11022302e-16, -3.33333333e-01, -3.33333333e-01,
 -3.00000000e+00, -2.66666667e+00, -3.00000000e+00,
 -3.33333333e-01, -3.33333333e-01, -1.11022302e-16,
  3.00000000e+00,  3.33333333e-01,  0.00000000e+00,
  0.00000000e+00,  3.33333333e-01,  3.00000000e+00,
  3.33333333e-01,  0.00000000e+00,  3.33333333e-01,
  6.66666667e-01,  6.66666667e-01,  6.66666667e-01,
 -6.66666667e-01,  0.00000000e+00,  0.00000000e+00,
  0.00000000e+00, -6.66666667e-01,  0.00000000e+00,
  0.00000000e+00,  0.00000000e+00,  2.00000000e+00,
 -1.11022302e-16, -3.33333333e-01, -3.33333333e-01,
 -3.33333333e-01, -1.11022302e-16, -3.33333333e-01,
 -3.00000000e+00, -3.00000000e+00, -2.66666667e+00,
  3.33333333e-01,  3.33333333e-01,  0.00000000e+00,
  0.00000000e+00,  3.00000000e+00,  3.33333333e-01,
  3.00000000e+00,  0.00000000e+00,  3.33333333e-01,
};

const double pylith::feassemble::IntegratorDataInertia3DQuadratic::_fieldIn[] = {
  1.20000000e+00,  1.50000000e+00,  3.00000000e-01,
  8.00000000e-01,  9.00000000e-01,  1.40000000e+00,
  7.00000000e-01,  2.00000000e-01,  8.00000000e-01,
  1.40000000e+00,  1.50000000e+00,  1.40000000e+00,
  5.00000000e-01,  7.00000000e-01,  1.60000000e+00,
  1.90000000e+00,  1.20000000e+00,  1.30000000e+00,
  6.00000000e-01,  3.00000000e-01,  1.50000000e+00,
  1.30000000e+00,  6.00000000e-01,  3.00000000e-01,
  1.40000000e+00,  1.00000000e-01,  1.80000000e+00,
  2.00000000e-01,  1.00000000e+00,  8.00000000e-01,
};

const double pylith::feassemble::IntegratorDataInertia3DQuadratic::_valsAction[] = {
  4.64606100e-01,  5.25788473e-01,  3.06532606e-01,
 -3.05228438e-02,  1.75997618e-01,  2.45750439e-01,
  4.30815359e-01, -1.55977942e-01,  1.64247809e-01,
  5.76536621e-01,  5.11894577e-01,  1.01873542e+00,
  1.05787885e+00,  9.67886303e-01,  1.28838018e+00,
  1.28854795e+00,  8.01898523e-01,  1.24762887e+00,
  1.36140858e+00,  1.13583478e+00,  1.67487267e+00,
  1.04098348e+00,  6.27003095e-01,  1.21723778e+00,
  1.34451321e+00,  7.94951575e-01,  1.60373027e+00,
  1.11384411e+00,  9.60939355e-01,  1.64448159e+00,
};

const double pylith::feassemble::IntegratorDataInertia3DQuadratic::_valsMatrix[] = {
  3.43548568e-01,  0.00000000e+00,  0.00000000e+00,
 -8.48894747e-02,  0.00000000e+00,  0.00000000e+00,
 -8.56725109e-02,  0.00000000e+00,  0.00000000e+00,
 -1.09147591e-01,  0.00000000e+00,  0.00000000e+00,
  1.66568959e-01,  0.00000000e+00,  0.00000000e+00,
  1.66177441e-01,  0.00000000e+00,  0.00000000e+00,
  1.54439901e-01,  0.00000000e+00,  0.00000000e+00,
 -4.80415809e-02,  0.00000000e+00,  0.00000000e+00,
 -6.01706390e-02,  0.00000000e+00,  0.00000000e+00,
 -5.97791209e-02,  0.00000000e+00,  0.00000000e+00,
  0.00000000e+00,  3.43548568e-01,  0.00000000e+00,
  0.00000000e+00, -8.48894747e-02,  0.00000000e+00,
  0.00000000e+00, -8.56725109e-02,  0.00000000e+00,
  0.00000000e+00, -1.09147591e-01,  0.00000000e+00,
  0.00000000e+00,  1.66568959e-01,  0.00000000e+00,
  0.00000000e+00,  1.66177441e-01,  0.00000000e+00,
  0.00000000e+00,  1.54439901e-01,  0.00000000e+00,
  0.00000000e+00, -4.80415809e-02,  0.00000000e+00,
  0.00000000e+00, -6.01706390e-02,  0.00000000e+00,
  0.00000000e+00, -5.97791209e-02,  0.00000000e+00,
  0.00000000e+00,  0.00000000e+00,  3.43548568e-01,
  0.00000000e+00,  0.00000000e+00, -8.48894747e-02,
  0.00000000e+00,  0.00000000e+00, -8.56725109e-02,
  0.00000000e+00,  0.00000000e+00, -1.09147591e-01,
  0.00000000e+00,  0.00000000e+00,  1.66568959e-01,
  0.00000000e+00,  0.00000000e+00,  1.66177441e-01,
  0.00000000e+00,  0.00000000e+00,  1.54439901e-01,
  0.00000000e+00,  0.00000000e+00, -4.80415809e-02,
  0.00000000e+00,  0.00000000e+00, -6.01706390e-02,
  0.00000000e+00,  0.00000000e+00, -5.97791209e-02,
 -8.48894747e-02,  0.00000000e+00,  0.00000000e+00,
  2.98421911e-01,  0.00000000e+00,  0.00000000e+00,
 -7.54164523e-02,  0.00000000e+00,  0.00000000e+00,
 -9.88915324e-02,  0.00000000e+00,  0.00000000e+00,
  1.29647148e-01,  0.00000000e+00,  0.00000000e+00,
 -5.72720336e-02,  0.00000000e+00,  0.00000000e+00,
 -6.90095736e-02,  0.00000000e+00,  0.00000000e+00,
  1.34383659e-01,  0.00000000e+00,  0.00000000e+00,
 -6.42730624e-02,  0.00000000e+00,  0.00000000e+00,
  1.22646119e-01,  0.00000000e+00,  0.00000000e+00,
  0.00000000e+00, -8.48894747e-02,  0.00000000e+00,
  0.00000000e+00,  2.98421911e-01,  0.00000000e+00,
  0.00000000e+00, -7.54164523e-02,  0.00000000e+00,
  0.00000000e+00, -9.88915324e-02,  0.00000000e+00,
  0.00000000e+00,  1.29647148e-01,  0.00000000e+00,
  0.00000000e+00, -5.72720336e-02,  0.00000000e+00,
  0.00000000e+00, -6.90095736e-02,  0.00000000e+00,
  0.00000000e+00,  1.34383659e-01,  0.00000000e+00,
  0.00000000e+00, -6.42730624e-02,  0.00000000e+00,
  0.00000000e+00,  1.22646119e-01,  0.00000000e+00,
  0.00000000e+00,  0.00000000e+00, -8.48894747e-02,
  0.00000000e+00,  0.00000000e+00,  2.98421911e-01,
  0.00000000e+00,  0.00000000e+00, -7.54164523e-02,
  0.00000000e+00,  0.00000000e+00, -9.88915324e-02,
  0.00000000e+00,  0.00000000e+00,  1.29647148e-01,
  0.00000000e+00,  0.00000000e+00, -5.72720336e-02,
  0.00000000e+00,  0.00000000e+00, -6.90095736e-02,
  0.00000000e+00,  0.00000000e+00,  1.34383659e-01,
  0.00000000e+00,  0.00000000e+00, -6.42730624e-02,
  0.00000000e+00,  0.00000000e+00,  1.22646119e-01,
 -8.56725109e-02,  0.00000000e+00,  0.00000000e+00,
 -7.54164523e-02,  0.00000000e+00,  0.00000000e+00,
  3.01867270e-01,  0.00000000e+00,  0.00000000e+00,
 -9.96745685e-02,  0.00000000e+00,  0.00000000e+00,
 -5.65673011e-02,  0.00000000e+00,  0.00000000e+00,
  1.32074560e-01,  0.00000000e+00,  0.00000000e+00,
 -6.86963592e-02,  0.00000000e+00,  0.00000000e+00,
  1.37202589e-01,  0.00000000e+00,  0.00000000e+00,
  1.25073531e-01,  0.00000000e+00,  0.00000000e+00,
 -6.35683299e-02,  0.00000000e+00,  0.00000000e+00,
  0.00000000e+00, -8.56725109e-02,  0.00000000e+00,
  0.00000000e+00, -7.54164523e-02,  0.00000000e+00,
  0.00000000e+00,  3.01867270e-01,  0.00000000e+00,
  0.00000000e+00, -9.96745685e-02,  0.00000000e+00,
  0.00000000e+00, -5.65673011e-02,  0.00000000e+00,
  0.00000000e+00,  1.32074560e-01,  0.00000000e+00,
  0.00000000e+00, -6.86963592e-02,  0.00000000e+00,
  0.00000000e+00,  1.37202589e-01,  0.00000000e+00,
  0.00000000e+00,  1.25073531e-01,  0.00000000e+00,
  0.00000000e+00, -6.35683299e-02,  0.00000000e+00,
  0.00000000e+00,  0.00000000e+00, -8.56725109e-02,
  0.00000000e+00,  0.00000000e+00, -7.54164523e-02,
  0.00000000e+00,  0.00000000e+00,  3.01867270e-01,
  0.00000000e+00,  0.00000000e+00, -9.96745685e-02,
  0.00000000e+00,  0.00000000e+00, -5.65673011e-02,
  0.00000000e+00,  0.00000000e+00,  1.32074560e-01,
  0.00000000e+00,  0.00000000e+00, -6.86963592e-02,
  0.00000000e+00,  0.00000000e+00,  1.37202589e-01,
  0.00000000e+00,  0.00000000e+00,  1.25073531e-01,
  0.00000000e+00,  0.00000000e+00, -6.35683299e-02,
 -1.09147591e-01,  0.00000000e+00,  0.00000000e+00,
 -9.88915324e-02,  0.00000000e+00,  0.00000000e+00,
 -9.96745685e-02,  0.00000000e+00,  0.00000000e+00,
  4.05157622e-01,  0.00000000e+00,  0.00000000e+00,
 -4.71772691e-02,  0.00000000e+00,  0.00000000e+00,
 -4.75687872e-02,  0.00000000e+00,  0.00000000e+00,
  2.04847308e-01,  0.00000000e+00,  0.00000000e+00,
 -4.24407579e-02,  0.00000000e+00,  0.00000000e+00,
  2.09583819e-01,  0.00000000e+00,  0.00000000e+00,
  2.09975337e-01,  0.00000000e+00,  0.00000000e+00,
  0.00000000e+00, -1.09147591e-01,  0.00000000e+00,
  0.00000000e+00, -9.88915324e-02,  0.00000000e+00,
  0.00000000e+00, -9.96745685e-02,  0.00000000e+00,
  0.00000000e+00,  4.05157622e-01,  0.00000000e+00,
  0.00000000e+00, -4.71772691e-02,  0.00000000e+00,
  0.00000000e+00, -4.75687872e-02,  0.00000000e+00,
  0.00000000e+00,  2.04847308e-01,  0.00000000e+00,
  0.00000000e+00, -4.24407579e-02,  0.00000000e+00,
  0.00000000e+00,  2.09583819e-01,  0.00000000e+00,
  0.00000000e+00,  2.09975337e-01,  0.00000000e+00,
  0.00000000e+00,  0.00000000e+00, -1.09147591e-01,
  0.00000000e+00,  0.00000000e+00, -9.88915324e-02,
  0.00000000e+00,  0.00000000e+00, -9.96745685e-02,
  0.00000000e+00,  0.00000000e+00,  4.05157622e-01,
  0.00000000e+00,  0.00000000e+00, -4.71772691e-02,
  0.00000000e+00,  0.00000000e+00, -4.75687872e-02,
  0.00000000e+00,  0.00000000e+00,  2.04847308e-01,
  0.00000000e+00,  0.00000000e+00, -4.24407579e-02,
  0.00000000e+00,  0.00000000e+00,  2.09583819e-01,
  0.00000000e+00,  0.00000000e+00,  2.09975337e-01,
  1.66568959e-01,  0.00000000e+00,  0.00000000e+00,
  1.29647148e-01,  0.00000000e+00,  0.00000000e+00,
 -5.65673011e-02,  0.00000000e+00,  0.00000000e+00,
 -4.71772691e-02,  0.00000000e+00,  0.00000000e+00,
  2.60383116e-01,  0.00000000e+00,  0.00000000e+00,
  1.67275892e-01,  0.00000000e+00,  0.00000000e+00,
  1.71970908e-01,  0.00000000e+00,  0.00000000e+00,
  1.48814986e-01,  0.00000000e+00,  0.00000000e+00,
  6.04027778e-02,  0.00000000e+00,  0.00000000e+00,
  1.53510002e-01,  0.00000000e+00,  0.00000000e+00,
  0.00000000e+00,  1.66568959e-01,  0.00000000e+00,
  0.00000000e+00,  1.29647148e-01,  0.00000000e+00,
  0.00000000e+00, -5.65673011e-02,  0.00000000e+00,
  0.00000000e+00, -4.71772691e-02,  0.00000000e+00,
  0.00000000e+00,  2.60383116e-01,  0.00000000e+00,
  0.00000000e+00,  1.67275892e-01,  0.00000000e+00,
  0.00000000e+00,  1.71970908e-01,  0.00000000e+00,
  0.00000000e+00,  1.48814986e-01,  0.00000000e+00,
  0.00000000e+00,  6.04027778e-02,  0.00000000e+00,
  0.00000000e+00,  1.53510002e-01,  0.00000000e+00,
  0.00000000e+00,  0.00000000e+00,  1.66568959e-01,
  0.00000000e+00,  0.00000000e+00,  1.29647148e-01,
  0.00000000e+00,  0.00000000e+00, -5.65673011e-02,
  0.00000000e+00,  0.00000000e+00, -4.71772691e-02,
  0.00000000e+00,  0.00000000e+00,  2.60383116e-01,
  0.00000000e+00,  0.00000000e+00,  1.67275892e-01,
  0.00000000e+00,  0.00000000e+00,  1.71970908e-01,
  0.00000000e+00,  0.00000000e+00,  1.48814986e-01,
  0.00000000e+00,  0.00000000e+00,  6.04027778e-02,
  0.00000000e+00,  0.00000000e+00,  1.53510002e-01,
  1.66177441e-01,  0.00000000e+00,  0.00000000e+00,
 -5.72720336e-02,  0.00000000e+00,  0.00000000e+00,
  1.32074560e-01,  0.00000000e+00,  0.00000000e+00,
 -4.75687872e-02,  0.00000000e+00,  0.00000000e+00,
  1.67275892e-01,  0.00000000e+00,  0.00000000e+00,
  2.61949188e-01,  0.00000000e+00,  0.00000000e+00,
  1.72127515e-01,  0.00000000e+00,  0.00000000e+00,
  1.50224451e-01,  0.00000000e+00,  0.00000000e+00,
  1.55076075e-01,  0.00000000e+00,  0.00000000e+00,
  6.04027778e-02,  0.00000000e+00,  0.00000000e+00,
  0.00000000e+00,  1.66177441e-01,  0.00000000e+00,
  0.00000000e+00, -5.72720336e-02,  0.00000000e+00,
  0.00000000e+00,  1.32074560e-01,  0.00000000e+00,
  0.00000000e+00, -4.75687872e-02,  0.00000000e+00,
  0.00000000e+00,  1.67275892e-01,  0.00000000e+00,
  0.00000000e+00,  2.61949188e-01,  0.00000000e+00,
  0.00000000e+00,  1.72127515e-01,  0.00000000e+00,
  0.00000000e+00,  1.50224451e-01,  0.00000000e+00,
  0.00000000e+00,  1.55076075e-01,  0.00000000e+00,
  0.00000000e+00,  6.04027778e-02,  0.00000000e+00,
  0.00000000e+00,  0.00000000e+00,  1.66177441e-01,
  0.00000000e+00,  0.00000000e+00, -5.72720336e-02,
  0.00000000e+00,  0.00000000e+00,  1.32074560e-01,
  0.00000000e+00,  0.00000000e+00, -4.75687872e-02,
  0.00000000e+00,  0.00000000e+00,  1.67275892e-01,
  0.00000000e+00,  0.00000000e+00,  2.61949188e-01,
  0.00000000e+00,  0.00000000e+00,  1.72127515e-01,
  0.00000000e+00,  0.00000000e+00,  1.50224451e-01,
  0.00000000e+00,  0.00000000e+00,  1.55076075e-01,
  0.00000000e+00,  0.00000000e+00,  6.04027778e-02,
  1.54439901e-01,  0.00000000e+00,  0.00000000e+00,
 -6.90095736e-02,  0.00000000e+00,  0.00000000e+00,
 -6.86963592e-02,  0.00000000e+00,  0.00000000e+00,
  2.04847308e-01,  0.00000000e+00,  0.00000000e+00,
  1.71970908e-01,  0.00000000e+00,  0.00000000e+00,
  1.72127515e-01,  0.00000000e+00,  0.00000000e+00,
  3.08899348e-01,  0.00000000e+00,  0.00000000e+00,
  6.04027778e-02,  0.00000000e+00,  0.00000000e+00,
  1.97331219e-01,  0.00000000e+00,  0.00000000e+00,
  1.97174611e-01,  0.00000000e+00,  0.00000000e+00,
  0.00000000e+00,  1.54439901e-01,  0.00000000e+00,
  0.00000000e+00, -6.90095736e-02,  0.00000000e+00,
  0.00000000e+00, -6.86963592e-02,  0.00000000e+00,
  0.00000000e+00,  2.04847308e-01,  0.00000000e+00,
  0.00000000e+00,  1.71970908e-01,  0.00000000e+00,
  0.00000000e+00,  1.72127515e-01,  0.00000000e+00,
  0.00000000e+00,  3.08899348e-01,  0.00000000e+00,
  0.00000000e+00,  6.04027778e-02,  0.00000000e+00,
  0.00000000e+00,  1.97331219e-01,  0.00000000e+00,
  0.00000000e+00,  1.97174611e-01,  0.00000000e+00,
  0.00000000e+00,  0.00000000e+00,  1.54439901e-01,
  0.00000000e+00,  0.00000000e+00, -6.90095736e-02,
  0.00000000e+00,  0.00000000e+00, -6.86963592e-02,
  0.00000000e+00,  0.00000000e+00,  2.04847308e-01,
  0.00000000e+00,  0.00000000e+00,  1.71970908e-01,
  0.00000000e+00,  0.00000000e+00,  1.72127515e-01,
  0.00000000e+00,  0.00000000e+00,  3.08899348e-01,
  0.00000000e+00,  0.00000000e+00,  6.04027778e-02,
  0.00000000e+00,  0.00000000e+00,  1.97331219e-01,
  0.00000000e+00,  0.00000000e+00,  1.97174611e-01,
 -4.80415809e-02,  0.00000000e+00,  0.00000000e+00,
  1.34383659e-01,  0.00000000e+00,  0.00000000e+00,
  1.37202589e-01,  0.00000000e+00,  0.00000000e+00,
 -4.24407579e-02,  0.00000000e+00,  0.00000000e+00,
  1.48814986e-01,  0.00000000e+00,  0.00000000e+00,
  1.50224451e-01,  0.00000000e+00,  0.00000000e+00,
  6.04027778e-02,  0.00000000e+00,  0.00000000e+00,
  2.41437071e-01,  0.00000000e+00,  0.00000000e+00,
  1.53024863e-01,  0.00000000e+00,  0.00000000e+00,
  1.51615398e-01,  0.00000000e+00,  0.00000000e+00,
  0.00000000e+00, -4.80415809e-02,  0.00000000e+00,
  0.00000000e+00,  1.34383659e-01,  0.00000000e+00,
  0.00000000e+00,  1.37202589e-01,  0.00000000e+00,
  0.00000000e+00, -4.24407579e-02,  0.00000000e+00,
  0.00000000e+00,  1.48814986e-01,  0.00000000e+00,
  0.00000000e+00,  1.50224451e-01,  0.00000000e+00,
  0.00000000e+00,  6.04027778e-02,  0.00000000e+00,
  0.00000000e+00,  2.41437071e-01,  0.00000000e+00,
  0.00000000e+00,  1.53024863e-01,  0.00000000e+00,
  0.00000000e+00,  1.51615398e-01,  0.00000000e+00,
  0.00000000e+00,  0.00000000e+00, -4.80415809e-02,
  0.00000000e+00,  0.00000000e+00,  1.34383659e-01,
  0.00000000e+00,  0.00000000e+00,  1.37202589e-01,
  0.00000000e+00,  0.00000000e+00, -4.24407579e-02,
  0.00000000e+00,  0.00000000e+00,  1.48814986e-01,
  0.00000000e+00,  0.00000000e+00,  1.50224451e-01,
  0.00000000e+00,  0.00000000e+00,  6.04027778e-02,
  0.00000000e+00,  0.00000000e+00,  2.41437071e-01,
  0.00000000e+00,  0.00000000e+00,  1.53024863e-01,
  0.00000000e+00,  0.00000000e+00,  1.51615398e-01,
 -6.01706390e-02,  0.00000000e+00,  0.00000000e+00,
 -6.42730624e-02,  0.00000000e+00,  0.00000000e+00,
  1.25073531e-01,  0.00000000e+00,  0.00000000e+00,
  2.09583819e-01,  0.00000000e+00,  0.00000000e+00,
  6.04027778e-02,  0.00000000e+00,  0.00000000e+00,
  1.55076075e-01,  0.00000000e+00,  0.00000000e+00,
  1.97331219e-01,  0.00000000e+00,  0.00000000e+00,
  1.53024863e-01,  0.00000000e+00,  0.00000000e+00,
  2.89953304e-01,  0.00000000e+00,  0.00000000e+00,
  1.95280007e-01,  0.00000000e+00,  0.00000000e+00,
  0.00000000e+00, -6.01706390e-02,  0.00000000e+00,
  0.00000000e+00, -6.42730624e-02,  0.00000000e+00,
  0.00000000e+00,  1.25073531e-01,  0.00000000e+00,
  0.00000000e+00,  2.09583819e-01,  0.00000000e+00,
  0.00000000e+00,  6.04027778e-02,  0.00000000e+00,
  0.00000000e+00,  1.55076075e-01,  0.00000000e+00,
  0.00000000e+00,  1.97331219e-01,  0.00000000e+00,
  0.00000000e+00,  1.53024863e-01,  0.00000000e+00,
  0.00000000e+00,  2.89953304e-01,  0.00000000e+00,
  0.00000000e+00,  1.95280007e-01,  0.00000000e+00,
  0.00000000e+00,  0.00000000e+00, -6.01706390e-02,
  0.00000000e+00,  0.00000000e+00, -6.42730624e-02,
  0.00000000e+00,  0.00000000e+00,  1.25073531e-01,
  0.00000000e+00,  0.00000000e+00,  2.09583819e-01,
  0.00000000e+00,  0.00000000e+00,  6.04027778e-02,
  0.00000000e+00,  0.00000000e+00,  1.55076075e-01,
  0.00000000e+00,  0.00000000e+00,  1.97331219e-01,
  0.00000000e+00,  0.00000000e+00,  1.53024863e-01,
  0.00000000e+00,  0.00000000e+00,  2.89953304e-01,
  0.00000000e+00,  0.00000000e+00,  1.95280007e-01,
 -5.97791209e-02,  0.00000000e+00,  0.00000000e+00,
  1.22646119e-01,  0.00000000e+00,  0.00000000e+00,
 -6.35683299e-02,  0.00000000e+00,  0.00000000e+00,
  2.09975337e-01,  0.00000000e+00,  0.00000000e+00,
  1.53510002e-01,  0.00000000e+00,  0.00000000e+00,
  6.04027778e-02,  0.00000000e+00,  0.00000000e+00,
  1.97174611e-01,  0.00000000e+00,  0.00000000e+00,
  1.51615398e-01,  0.00000000e+00,  0.00000000e+00,
  1.95280007e-01,  0.00000000e+00,  0.00000000e+00,
  2.88387231e-01,  0.00000000e+00,  0.00000000e+00,
  0.00000000e+00, -5.97791209e-02,  0.00000000e+00,
  0.00000000e+00,  1.22646119e-01,  0.00000000e+00,
  0.00000000e+00, -6.35683299e-02,  0.00000000e+00,
  0.00000000e+00,  2.09975337e-01,  0.00000000e+00,
  0.00000000e+00,  1.53510002e-01,  0.00000000e+00,
  0.00000000e+00,  6.04027778e-02,  0.00000000e+00,
  0.00000000e+00,  1.97174611e-01,  0.00000000e+00,
  0.00000000e+00,  1.51615398e-01,  0.00000000e+00,
  0.00000000e+00,  1.95280007e-01,  0.00000000e+00,
  0.00000000e+00,  2.88387231e-01,  0.00000000e+00,
  0.00000000e+00,  0.00000000e+00, -5.97791209e-02,
  0.00000000e+00,  0.00000000e+00,  1.22646119e-01,
  0.00000000e+00,  0.00000000e+00, -6.35683299e-02,
  0.00000000e+00,  0.00000000e+00,  2.09975337e-01,
  0.00000000e+00,  0.00000000e+00,  1.53510002e-01,
  0.00000000e+00,  0.00000000e+00,  6.04027778e-02,
  0.00000000e+00,  0.00000000e+00,  1.97174611e-01,
  0.00000000e+00,  0.00000000e+00,  1.51615398e-01,
  0.00000000e+00,  0.00000000e+00,  1.95280007e-01,
  0.00000000e+00,  0.00000000e+00,  2.88387231e-01,
};

pylith::feassemble::IntegratorDataInertia3DQuadratic::IntegratorDataInertia3DQuadratic(void)
{ // constructor
  numVertices = _numVertices;
  spaceDim = _spaceDim;
  numCells = _numCells;
  cellDim = _cellDim;
  numCorners = _numCorners;
  numQuadPts = _numQuadPts;
  fiberDim = _fiberDim;
  vertices = const_cast<double*>(_vertices);
  cells = const_cast<int*>(_cells);
  quadPts = const_cast<double*>(_quadPts);
  quadWts = const_cast<double*>(_quadWts);
  basis = const_cast<double*>(_basis);
  basisDeriv = const_cast<double*>(_basisDeriv);
  fieldIn = const_cast<double*>(_fieldIn);
  valsAction = const_cast<double*>(_valsAction);
  valsMatrix = const_cast<double*>(_valsMatrix);
} // constructor

pylith::feassemble::IntegratorDataInertia3DQuadratic::~IntegratorDataInertia3DQuadratic(void)
{}


// End of file
