// -*- C++ -*-
//
// ======================================================================
//
//                           Brad T. Aagaard
//                        U.S. Geological Survey
//
// {LicenseText}
//
// ======================================================================
//

// DO NOT EDIT THIS FILE
// This file was generated from python application quadratureapp.

#include "QuadratureData3DQuadratic.hh"

const int pylith::feassemble::QuadratureData3DQuadratic::_numVertices = 10;

const int pylith::feassemble::QuadratureData3DQuadratic::_spaceDim = 3;

const int pylith::feassemble::QuadratureData3DQuadratic::_numCells = 1;

const int pylith::feassemble::QuadratureData3DQuadratic::_cellDim = 3;

const int pylith::feassemble::QuadratureData3DQuadratic::_numBasis = 10;

const int pylith::feassemble::QuadratureData3DQuadratic::_numQuadPts = 4;

const double pylith::feassemble::QuadratureData3DQuadratic::_vertices[] = {
 -5.00000000e-01, -2.00000000e+00, -1.00000000e+00,
  2.00000000e+00, -2.00000000e+00, -5.00000000e-01,
  1.00000000e+00,  1.00000000e+00,  0.00000000e+00,
  2.00000000e-01,  5.00000000e-01,  2.00000000e+00,
  7.00000000e-01, -2.10000000e+00, -8.00000000e-01,
  3.00000000e-01, -5.00000000e-01, -5.00000000e-01,
 -2.00000000e-01, -8.00000000e-01,  5.00000000e-01,
  1.50000000e+00, -6.00000000e-01, -2.00000000e-01,
  6.00000000e-01,  8.00000000e-01,  9.00000000e-01,
  1.10000000e+00, -8.00000000e-01,  7.00000000e-01,
};

const int pylith::feassemble::QuadratureData3DQuadratic::_cells[] = {
       0,       1,       2,       3,       4,       5,       6,       7,       8,       9,
};

const double pylith::feassemble::QuadratureData3DQuadratic::_verticesRef[] = {
 -1.00000000e+00, -1.00000000e+00, -1.00000000e+00,
  1.00000000e+00, -1.00000000e+00, -1.00000000e+00,
 -1.00000000e+00,  1.00000000e+00, -1.00000000e+00,
 -1.00000000e+00, -1.00000000e+00,  1.00000000e+00,
 -1.00000000e+00,  0.00000000e+00, -1.00000000e+00,
  0.00000000e+00,  0.00000000e+00, -1.00000000e+00,
  0.00000000e+00, -1.00000000e+00, -1.00000000e+00,
 -1.00000000e+00, -1.00000000e+00,  0.00000000e+00,
  0.00000000e+00, -1.00000000e+00,  0.00000000e+00,
 -1.00000000e+00,  0.00000000e+00,  0.00000000e+00,
};

const double pylith::feassemble::QuadratureData3DQuadratic::_quadPtsRef[] = {
  8.33333333e-02,  8.33333333e-02,  8.33333333e-02,
  7.50000000e-01,  8.33333333e-02,  8.33333333e-02,
  8.33333333e-02,  7.50000000e-01,  8.33333333e-02,
  8.33333333e-02,  8.33333333e-02,  7.50000000e-01,
};

const double pylith::feassemble::QuadratureData3DQuadratic::_quadWts[] = {
  1.25000000e-01,  1.25000000e-01,  1.25000000e-01,  1.25000000e-01,
};

const double pylith::feassemble::QuadratureData3DQuadratic::_quadPts[] = {
 -1.20833333e-01, -1.58194444e+00, -6.40277778e-01,
  1.54583333e+00, -1.60416667e+00, -3.06944444e-01,
  9.01388889e-01,  4.40277778e-01,  2.63888889e-02,
  3.45833333e-01,  1.06944444e-01,  1.33750000e+00,
};

const double pylith::feassemble::QuadratureData3DQuadratic::_basis[] = {
  3.75000000e-01, -6.94444444e-02, -6.94444444e-02,
 -6.94444444e-02,  2.50000000e-01,  2.50000000e-01,
  2.50000000e-01,  2.77777778e-02,  2.77777778e-02,
  2.77777778e-02, -6.94444444e-02,  3.75000000e-01,
 -6.94444444e-02, -6.94444444e-02,  2.50000000e-01,
  2.77777778e-02,  2.77777778e-02,  2.50000000e-01,
  2.77777778e-02,  2.50000000e-01, -6.94444444e-02,
 -6.94444444e-02,  3.75000000e-01, -6.94444444e-02,
  2.77777778e-02,  2.50000000e-01,  2.77777778e-02,
  2.50000000e-01,  2.50000000e-01,  2.77777778e-02,
 -6.94444444e-02, -6.94444444e-02, -6.94444444e-02,
  3.75000000e-01,  2.77777778e-02,  2.77777778e-02,
  2.50000000e-01,  2.77777778e-02,  2.50000000e-01,
  2.50000000e-01,};

const double pylith::feassemble::QuadratureData3DQuadratic::_basisDerivRef[] = {
 -2.00000000e+00, -2.00000000e+00, -2.00000000e+00,
 -6.66666667e-01,  0.00000000e+00,  0.00000000e+00,
  0.00000000e+00, -6.66666667e-01,  0.00000000e+00,
  0.00000000e+00,  0.00000000e+00, -6.66666667e-01,
  2.66666667e+00, -3.33333333e-01, -3.33333333e-01,
 -3.33333333e-01,  2.66666667e+00, -3.33333333e-01,
 -3.33333333e-01, -3.33333333e-01,  2.66666667e+00,
  3.33333333e-01,  3.33333333e-01,  0.00000000e+00,
  0.00000000e+00,  3.33333333e-01,  3.33333333e-01,
  3.33333333e-01,  0.00000000e+00,  3.33333333e-01,
  6.66666667e-01,  6.66666667e-01,  6.66666667e-01,
  2.00000000e+00,  0.00000000e+00,  0.00000000e+00,
  0.00000000e+00, -6.66666667e-01,  0.00000000e+00,
  0.00000000e+00,  0.00000000e+00, -6.66666667e-01,
 -2.66666667e+00, -3.00000000e+00, -3.00000000e+00,
 -3.33333333e-01,  1.11022302e-16, -3.33333333e-01,
 -3.33333333e-01, -3.33333333e-01,  1.11022302e-16,
  3.33333333e-01,  3.00000000e+00,  0.00000000e+00,
  0.00000000e+00,  3.33333333e-01,  3.33333333e-01,
  3.33333333e-01,  0.00000000e+00,  3.00000000e+00,
  6.66666667e-01,  6.66666667e-01,  6.66666667e-01,
 -6.66666667e-01,  0.00000000e+00,  0.00000000e+00,
  0.00000000e+00,  2.00000000e+00,  0.00000000e+00,
  0.00000000e+00,  0.00000000e+00, -6.66666667e-01,
  1.11022302e-16, -3.33333333e-01, -3.33333333e-01,
 -3.00000000e+00, -2.66666667e+00, -3.00000000e+00,
 -3.33333333e-01, -3.33333333e-01, -1.11022302e-16,
  3.00000000e+00,  3.33333333e-01,  0.00000000e+00,
  0.00000000e+00,  3.33333333e-01,  3.00000000e+00,
  3.33333333e-01,  0.00000000e+00,  3.33333333e-01,
  6.66666667e-01,  6.66666667e-01,  6.66666667e-01,
 -6.66666667e-01,  0.00000000e+00,  0.00000000e+00,
  0.00000000e+00, -6.66666667e-01,  0.00000000e+00,
  0.00000000e+00,  0.00000000e+00,  2.00000000e+00,
 -1.11022302e-16, -3.33333333e-01, -3.33333333e-01,
 -3.33333333e-01, -1.11022302e-16, -3.33333333e-01,
 -3.00000000e+00, -3.00000000e+00, -2.66666667e+00,
  3.33333333e-01,  3.33333333e-01,  0.00000000e+00,
  0.00000000e+00,  3.00000000e+00,  3.33333333e-01,
  3.00000000e+00,  0.00000000e+00,  3.33333333e-01,
};

const double pylith::feassemble::QuadratureData3DQuadratic::_basisDeriv[] = {
 -7.83094857e-01, -7.65459276e-02, -4.62652592e-01,
 -2.47606897e-01,  1.64265226e-01, -8.55930225e-02,
 -6.64148489e-02, -2.55653392e-01,  2.19506704e-01,
  5.29901274e-02,  6.58728570e-02, -2.88131212e-01,
  9.83715229e-01, -7.51951171e-01,  3.08059836e-01,
  1.68351011e-01,  1.13768261e+00, -1.06488893e+00,
 -3.68971383e-01, -3.09185511e-01,  1.21948169e+00,
  1.57010873e-01,  4.56940831e-02, -6.69568408e-02,
  6.71236075e-03,  9.48902675e-02,  3.43122540e-02,
  9.73083850e-02, -1.15069041e-01,  1.86862117e-01,
  2.20279652e-01,  4.92234076e-02,  1.18597035e-01,
  7.44087308e-01, -5.14786633e-01,  2.53716269e-01,
 -4.39774867e-02, -3.21422968e-01,  3.01272749e-01,
  7.17269376e-02,  1.00604016e-01, -3.35297694e-01,
 -8.67243881e-01, -3.07303106e-01, -4.91400612e-01,
 -8.81510825e-02,  1.36099780e-01, -2.09934892e-01,
 -1.46003295e-01, -7.49137120e-02,  1.08350329e-01,
  3.21913241e-01,  1.36060559e+00, -1.31344132e+00,
 -1.38747254e-02,  1.10409476e-01,  1.70124725e-02,
 -1.98756668e-01, -5.38515846e-01,  1.55112567e+00,
  2.52578517e-01,  5.82464152e-02,  1.36375951e-01,
 -2.40484161e-01,  1.39907502e-01, -8.77082648e-02,
  3.26402461e-01,  7.87777928e-01, -8.46556495e-01,
  9.67064652e-02,  6.44387252e-02, -3.30853184e-01,
 -6.04717766e-03, -9.90769588e-02, -2.43338429e-02,
 -1.08220291e+00, -1.30812547e-01, -7.54784527e-01,
 -1.74642491e-01, -6.13425702e-02,  9.72386168e-02,
  1.13657914e+00, -4.98287439e-01,  2.53594442e-01,
 -3.80778683e-01, -1.58677942e-01,  1.34774658e+00,
  7.18888480e-02, -1.02173114e-01,  2.09280725e-01,
  2.39188235e-01,  5.77458352e-02,  1.05625026e-01,
 -2.44104247e-01,  1.35017241e-01, -5.27952031e-02,
 -3.35465913e-02, -2.33891405e-01,  2.19662665e-01,
 -1.15387811e-01, -1.23384986e-01,  8.17477463e-01,
  2.45800618e-03, -9.63815380e-02, -2.64149114e-02,
 -1.02820822e-01,  8.80727847e-02, -1.62643845e-01,
 -1.09557836e+00, -2.80420423e-01, -3.39066373e-01,
  1.38825419e-01,  4.94370820e-02, -8.34337308e-02,
  1.31728359e-01,  1.03194716e+00, -8.52235747e-01,
  1.07923781e+00, -6.28141747e-01,  3.73824658e-01,
};

const double pylith::feassemble::QuadratureData3DQuadratic::_jacobian[] = {
  2.36666667e+00,  1.66666667e+00,  5.66666667e-01,
 -3.00000000e-01,  3.03333333e+00,  2.40000000e+00,
  3.66666667e-01,  1.00000000e+00,  2.96666667e+00,
  2.63333333e+00,  1.66666667e+00,  8.33333333e-01,
  2.33333333e-01,  3.03333333e+00,  2.66666667e+00,
  6.33333333e-01,  1.26666667e+00,  2.96666667e+00,
  2.36666667e+00,  1.40000000e+00,  5.66666667e-01,
 -3.00000000e-01,  3.03333333e+00,  2.66666667e+00,
  6.33333333e-01,  1.00000000e-00,  2.70000000e+00,
  2.63333333e+00,  1.66666667e+00,  8.33333333e-01,
 -3.33333333e-02,  3.30000000e+00,  2.66666667e+00,
  3.66666667e-01,  7.33333333e-01,  2.96666667e+00,
};

const double pylith::feassemble::QuadratureData3DQuadratic::_jacobianDet[] = {
  1.77671111e+01,  1.51087407e+01,  1.53117037e+01,  2.13964444e+01,
};

const double pylith::feassemble::QuadratureData3DQuadratic::_jacobianInv[] = {
  3.71410346e-01, -2.46397839e-01,  1.28389534e-01,
  9.96222734e-02,  3.83480088e-01, -3.29260056e-01,
 -7.94851911e-02, -9.88092856e-02,  4.32196818e-01,
  3.72043654e-01, -2.57393317e-01,  1.26858135e-01,
  6.59662300e-02,  4.82134452e-01, -4.51909123e-01,
 -1.07590406e-01, -1.50906024e-01,  5.02946541e-01,
  3.60726242e-01, -2.09861254e-01,  1.31562397e-01,
  1.63201231e-01,  3.93888964e-01, -4.23278248e-01,
 -1.45059698e-01, -9.66580877e-02,  4.96279776e-01,
  3.66156371e-01, -2.02525861e-01,  7.91928046e-02,
  5.03198870e-02,  3.50837107e-01, -3.29493997e-01,
 -5.76939055e-02, -6.16924930e-02,  4.08738731e-01,
};

pylith::feassemble::QuadratureData3DQuadratic::QuadratureData3DQuadratic(void)
{ // constructor
  numVertices = _numVertices;
  spaceDim = _spaceDim;
  numCells = _numCells;
  cellDim = _cellDim;
  numBasis = _numBasis;
  numQuadPts = _numQuadPts;
  vertices = const_cast<double*>(_vertices);
  cells = const_cast<int*>(_cells);
  verticesRef = const_cast<double*>(_verticesRef);
  quadPtsRef = const_cast<double*>(_quadPtsRef);
  quadWts = const_cast<double*>(_quadWts);
  quadPts = const_cast<double*>(_quadPts);
  basis = const_cast<double*>(_basis);
  basisDerivRef = const_cast<double*>(_basisDerivRef);
  basisDeriv = const_cast<double*>(_basisDeriv);
  jacobian = const_cast<double*>(_jacobian);
  jacobianDet = const_cast<double*>(_jacobianDet);
  jacobianInv = const_cast<double*>(_jacobianInv);
} // constructor

pylith::feassemble::QuadratureData3DQuadratic::~QuadratureData3DQuadratic(void)
{}


// End of file
