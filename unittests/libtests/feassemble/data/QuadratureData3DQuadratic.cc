// -*- C++ -*-
//
// ======================================================================
//
//                           Brad T. Aagaard
//                        U.S. Geological Survey
//
// {LicenseText}
//
// ======================================================================
//

// DO NOT EDIT THIS FILE
// This file was generated from python application quadrature3dquadratic.

#include "QuadratureData3DQuadratic.hh"

const int pylith::feassemble::QuadratureData3DQuadratic::_numVertices = 10;

const int pylith::feassemble::QuadratureData3DQuadratic::_spaceDim = 3;

const int pylith::feassemble::QuadratureData3DQuadratic::_numCells = 1;

const int pylith::feassemble::QuadratureData3DQuadratic::_cellDim = 3;

const int pylith::feassemble::QuadratureData3DQuadratic::_numBasis = 10;

const int pylith::feassemble::QuadratureData3DQuadratic::_numQuadPts = 4;

const double pylith::feassemble::QuadratureData3DQuadratic::_vertices[] = {
 -5.00000000e-01, -2.00000000e+00, -1.00000000e+00,
  2.00000000e+00, -2.00000000e+00, -5.00000000e-01,
  1.00000000e+00,  1.00000000e+00,  0.00000000e+00,
  2.00000000e-01,  5.00000000e-01,  2.00000000e+00,
  7.00000000e-01, -2.10000000e+00, -8.00000000e-01,
  3.00000000e-01, -5.00000000e-01, -5.00000000e-01,
 -2.00000000e-01, -8.00000000e-01,  5.00000000e-01,
  1.50000000e+00, -6.00000000e-01, -2.00000000e-01,
  6.00000000e-01,  8.00000000e-01,  9.00000000e-01,
  1.10000000e+00, -8.00000000e-01,  7.00000000e-01,
};

const int pylith::feassemble::QuadratureData3DQuadratic::_cells[] = {
       0,       1,       2,       3,       4,       5,       6,       7,       8,       9,
};

const double pylith::feassemble::QuadratureData3DQuadratic::_quadPtsRef[] = {
  8.33333333e-02,  8.33333333e-02,  8.33333333e-02,
  7.50000000e-01,  8.33333333e-02,  8.33333333e-02,
  8.33333333e-02,  7.50000000e-01,  8.33333333e-02,
  8.33333333e-02,  8.33333333e-02,  7.50000000e-01,
};

const double pylith::feassemble::QuadratureData3DQuadratic::_quadWts[] = {
  1.25000000e-01,  1.25000000e-01,  1.25000000e-01,  1.25000000e-01,
};

const double pylith::feassemble::QuadratureData3DQuadratic::_basis[] = {
  3.75000000e-01, -6.94444444e-02, -6.94444444e-02,
 -6.94444444e-02,  2.50000000e-01,  2.50000000e-01,
  2.50000000e-01,  2.77777778e-02,  2.77777778e-02,
  2.77777778e-02, -6.94444444e-02,  3.75000000e-01,
 -6.94444444e-02, -6.94444444e-02,  2.50000000e-01,
  2.77777778e-02,  2.77777778e-02,  2.50000000e-01,
  2.77777778e-02,  2.50000000e-01, -6.94444444e-02,
 -6.94444444e-02,  3.75000000e-01, -6.94444444e-02,
  2.77777778e-02,  2.50000000e-01,  2.77777778e-02,
  2.50000000e-01,  2.50000000e-01,  2.77777778e-02,
 -6.94444444e-02, -6.94444444e-02, -6.94444444e-02,
  3.75000000e-01,  2.77777778e-02,  2.77777778e-02,
  2.50000000e-01,  2.77777778e-02,  2.50000000e-01,
  2.50000000e-01,};

const double pylith::feassemble::QuadratureData3DQuadratic::_basisDeriv[] = {
 -2.00000000e+00, -2.00000000e+00, -2.00000000e+00,
 -6.66666667e-01,  0.00000000e+00,  0.00000000e+00,
  0.00000000e+00, -6.66666667e-01,  0.00000000e+00,
  0.00000000e+00,  0.00000000e+00, -6.66666667e-01,
  2.66666667e+00, -3.33333333e-01, -3.33333333e-01,
 -3.33333333e-01,  2.66666667e+00, -3.33333333e-01,
 -3.33333333e-01, -3.33333333e-01,  2.66666667e+00,
  3.33333333e-01,  3.33333333e-01,  0.00000000e+00,
  0.00000000e+00,  3.33333333e-01,  3.33333333e-01,
  3.33333333e-01,  0.00000000e+00,  3.33333333e-01,
  6.66666667e-01,  6.66666667e-01,  6.66666667e-01,
  2.00000000e+00,  0.00000000e+00,  0.00000000e+00,
  0.00000000e+00, -6.66666667e-01,  0.00000000e+00,
  0.00000000e+00,  0.00000000e+00, -6.66666667e-01,
 -2.66666667e+00, -3.00000000e+00, -3.00000000e+00,
 -3.33333333e-01,  1.11022302e-16, -3.33333333e-01,
 -3.33333333e-01, -3.33333333e-01,  1.11022302e-16,
  3.33333333e-01,  3.00000000e+00,  0.00000000e+00,
  0.00000000e+00,  3.33333333e-01,  3.33333333e-01,
  3.33333333e-01,  0.00000000e+00,  3.00000000e+00,
  6.66666667e-01,  6.66666667e-01,  6.66666667e-01,
 -6.66666667e-01,  0.00000000e+00,  0.00000000e+00,
  0.00000000e+00,  2.00000000e+00,  0.00000000e+00,
  0.00000000e+00,  0.00000000e+00, -6.66666667e-01,
  1.11022302e-16, -3.33333333e-01, -3.33333333e-01,
 -3.00000000e+00, -2.66666667e+00, -3.00000000e+00,
 -3.33333333e-01, -3.33333333e-01, -1.11022302e-16,
  3.00000000e+00,  3.33333333e-01,  0.00000000e+00,
  0.00000000e+00,  3.33333333e-01,  3.00000000e+00,
  3.33333333e-01,  0.00000000e+00,  3.33333333e-01,
  6.66666667e-01,  6.66666667e-01,  6.66666667e-01,
 -6.66666667e-01,  0.00000000e+00,  0.00000000e+00,
  0.00000000e+00, -6.66666667e-01,  0.00000000e+00,
  0.00000000e+00,  0.00000000e+00,  2.00000000e+00,
 -1.11022302e-16, -3.33333333e-01, -3.33333333e-01,
 -3.33333333e-01, -1.11022302e-16, -3.33333333e-01,
 -3.00000000e+00, -3.00000000e+00, -2.66666667e+00,
  3.33333333e-01,  3.33333333e-01,  0.00000000e+00,
  0.00000000e+00,  3.00000000e+00,  3.33333333e-01,
  3.00000000e+00,  0.00000000e+00,  3.33333333e-01,
};

const double pylith::feassemble::QuadratureData3DQuadratic::_quadPts[] = {
 -1.20833333e-01, -1.58194444e+00, -6.40277778e-01,
  1.54583333e+00, -1.60416667e+00, -3.06944444e-01,
  9.01388889e-01,  4.40277778e-01,  2.63888889e-02,
  3.45833333e-01,  1.06944444e-01,  1.33750000e+00,
};

const double pylith::feassemble::QuadratureData3DQuadratic::_jacobian[] = {
  2.36666667e+00, -3.00000000e-01,  3.66666667e-01,
  1.66666667e+00,  3.03333333e+00,  1.00000000e+00,
  5.66666667e-01,  2.40000000e+00,  2.96666667e+00,
  2.63333333e+00,  2.33333333e-01,  6.33333333e-01,
  1.66666667e+00,  3.03333333e+00,  1.26666667e+00,
  8.33333333e-01,  2.66666667e+00,  2.96666667e+00,
  2.36666667e+00, -3.00000000e-01,  6.33333333e-01,
  1.40000000e+00,  3.03333333e+00,  1.00000000e-00,
  5.66666667e-01,  2.66666667e+00,  2.70000000e+00,
  2.63333333e+00, -3.33333333e-02,  3.66666667e-01,
  1.66666667e+00,  3.30000000e+00,  7.33333333e-01,
  8.33333333e-01,  2.66666667e+00,  2.96666667e+00,
};

const double pylith::feassemble::QuadratureData3DQuadratic::_jacobianDet[] = {
  1.77671111e+01,  1.51087407e+01,  1.53117037e+01,  2.13964444e+01,
};

const double pylith::feassemble::QuadratureData3DQuadratic::_jacobianInv[] = {
  3.71410346e-01,  9.96222734e-02, -7.94851911e-02,
 -2.46397839e-01,  3.83480088e-01, -9.88092856e-02,
  1.28389534e-01, -3.29260056e-01,  4.32196818e-01,
  3.72043654e-01,  6.59662300e-02, -1.07590406e-01,
 -2.57393317e-01,  4.82134452e-01, -1.50906024e-01,
  1.26858135e-01, -4.51909123e-01,  5.02946541e-01,
  3.60726242e-01,  1.63201231e-01, -1.45059698e-01,
 -2.09861254e-01,  3.93888964e-01, -9.66580877e-02,
  1.31562397e-01, -4.23278248e-01,  4.96279776e-01,
  3.66156371e-01,  5.03198870e-02, -5.76939055e-02,
 -2.02525861e-01,  3.50837107e-01, -6.16924930e-02,
  7.91928046e-02, -3.29493997e-01,  4.08738731e-01,
};

pylith::feassemble::QuadratureData3DQuadratic::QuadratureData3DQuadratic(void)
{ // constructor
  numVertices = _numVertices;
  spaceDim = _spaceDim;
  numCells = _numCells;
  cellDim = _cellDim;
  numBasis = _numBasis;
  numQuadPts = _numQuadPts;
  vertices = const_cast<double*>(_vertices);
  cells = const_cast<int*>(_cells);
  quadPtsRef = const_cast<double*>(_quadPtsRef);
  quadWts = const_cast<double*>(_quadWts);
  basis = const_cast<double*>(_basis);
  basisDeriv = const_cast<double*>(_basisDeriv);
  quadPts = const_cast<double*>(_quadPts);
  jacobian = const_cast<double*>(_jacobian);
  jacobianDet = const_cast<double*>(_jacobianDet);
  jacobianInv = const_cast<double*>(_jacobianInv);
} // constructor

pylith::feassemble::QuadratureData3DQuadratic::~QuadratureData3DQuadratic(void)
{}


// End of file
