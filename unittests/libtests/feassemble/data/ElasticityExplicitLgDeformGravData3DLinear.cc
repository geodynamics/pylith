// -*- C++ -*-
//
// ======================================================================
//
//                           Brad T. Aagaard
//                        U.S. Geological Survey
//
// {LicenseText}
//
// ======================================================================
//

// DO NOT EDIT THIS FILE
// This file was generated from python application integratorelasticitylgdeform.

#include "ElasticityExplicitLgDeformGravData3DLinear.hh"

const int pylith::feassemble::ElasticityExplicitLgDeformGravData3DLinear::_spaceDim = 3;

const int pylith::feassemble::ElasticityExplicitLgDeformGravData3DLinear::_cellDim = 3;

const int pylith::feassemble::ElasticityExplicitLgDeformGravData3DLinear::_numVertices = 4;

const int pylith::feassemble::ElasticityExplicitLgDeformGravData3DLinear::_numCells = 1;

const int pylith::feassemble::ElasticityExplicitLgDeformGravData3DLinear::_numBasis = 4;

const int pylith::feassemble::ElasticityExplicitLgDeformGravData3DLinear::_numQuadPts = 1;

const char* pylith::feassemble::ElasticityExplicitLgDeformGravData3DLinear::_matType = "ElasticIsotropic3D";

const char* pylith::feassemble::ElasticityExplicitLgDeformGravData3DLinear::_matDBFilename = "data/elasticisotropic3d.spatialdb";

const int pylith::feassemble::ElasticityExplicitLgDeformGravData3DLinear::_matId = 0;

const char* pylith::feassemble::ElasticityExplicitLgDeformGravData3DLinear::_matLabel = "elastic isotropic 3-D";

const double pylith::feassemble::ElasticityExplicitLgDeformGravData3DLinear::_dt =   1.00000000e-02;

const double pylith::feassemble::ElasticityExplicitLgDeformGravData3DLinear::_gravityVec[] = {
  0.00000000e+00,  0.00000000e+00, -1.00000000e+08,
};

const double pylith::feassemble::ElasticityExplicitLgDeformGravData3DLinear::_vertices[] = {
 -5.00000000e-01, -1.00000000e+00, -5.00000000e-01,
  2.00000000e+00, -5.00000000e-01, -4.00000000e-01,
  1.00000000e+00, -1.00000000e-01, -3.00000000e-01,
 -2.00000000e-01,  5.00000000e-01,  2.00000000e+00,
};

const int pylith::feassemble::ElasticityExplicitLgDeformGravData3DLinear::_cells[] = {
0,1,2,3,
};

const double pylith::feassemble::ElasticityExplicitLgDeformGravData3DLinear::_verticesRef[] = {
 -1.00000000e+00, -1.00000000e+00, -1.00000000e+00,
  1.00000000e+00, -1.00000000e+00, -1.00000000e+00,
 -1.00000000e+00,  1.00000000e+00, -1.00000000e+00,
 -1.00000000e+00, -1.00000000e+00,  1.00000000e+00,
};

const double pylith::feassemble::ElasticityExplicitLgDeformGravData3DLinear::_quadPts[] = {
 -5.00000000e-01, -5.00000000e-01, -5.00000000e-01,
};

const double pylith::feassemble::ElasticityExplicitLgDeformGravData3DLinear::_quadWts[] = {
  1.33333333e+00,
};

const double pylith::feassemble::ElasticityExplicitLgDeformGravData3DLinear::_basis[] = {
  2.50000000e-01,  2.50000000e-01,  2.50000000e-01,
  2.50000000e-01,};

const double pylith::feassemble::ElasticityExplicitLgDeformGravData3DLinear::_basisDerivRef[] = {
 -5.00000000e-01, -5.00000000e-01, -5.00000000e-01,
  5.00000000e-01,  0.00000000e+00,  0.00000000e+00,
  0.00000000e+00,  5.00000000e-01,  0.00000000e+00,
  0.00000000e+00,  0.00000000e+00,  5.00000000e-01,
};

const double pylith::feassemble::ElasticityExplicitLgDeformGravData3DLinear::_fieldTIncr[] = {
  3.00000000e-01,  2.00000000e-01, -5.00000000e-01,
 -3.00000000e-01, -4.00000000e-01, -6.00000000e-01,
  2.00000000e-01,  6.00000000e-01,  3.00000000e-01,
 -6.00000000e-01, -1.00000000e-01, -3.00000000e-01,
};

const double pylith::feassemble::ElasticityExplicitLgDeformGravData3DLinear::_fieldT[] = {
  8.00000000e-01,  1.00000000e-01, -6.00000000e-01,
 -1.00000000e-01, -2.00000000e-01, -5.00000000e-01,
  1.00000000e-01,  7.00000000e-01,  2.00000000e-01,
 -5.00000000e-01, -0.00000000e+00, -2.00000000e-01,
};

const double pylith::feassemble::ElasticityExplicitLgDeformGravData3DLinear::_fieldTmdt[] = {
  1.00000000e-01,  1.00000000e-01, -3.00000000e-01,
 -2.00000000e-01, -1.00000000e-01, -5.00000000e-01,
  2.00000000e-01,  4.00000000e-01,  1.00000000e-01,
 -4.00000000e-01, -1.00000000e-01, -1.00000000e-01,
};

const double pylith::feassemble::ElasticityExplicitLgDeformGravData3DLinear::_valsResidual[] = {
 -1.33662714e+10,  3.00655673e+11,  1.14595308e+11,
 -5.48903846e+10,  6.55599973e+11,  2.70835040e+11,
  6.45906661e+10, -1.06342926e+12, -5.20052795e+11,
  3.66800744e+09,  1.07174625e+11,  1.21438352e+08,
};

const double pylith::feassemble::ElasticityExplicitLgDeformGravData3DLinear::_valsJacobian[] = {
  8.40625000e+05,  0.00000000e+00,  0.00000000e+00,
  8.40625000e+05,  0.00000000e+00,  0.00000000e+00,
  8.40625000e+05,  0.00000000e+00,  0.00000000e+00,
  8.40625000e+05,  0.00000000e+00,  0.00000000e+00,
  0.00000000e+00,  8.40625000e+05,  0.00000000e+00,
  0.00000000e+00,  8.40625000e+05,  0.00000000e+00,
  0.00000000e+00,  8.40625000e+05,  0.00000000e+00,
  0.00000000e+00,  8.40625000e+05,  0.00000000e+00,
  0.00000000e+00,  0.00000000e+00,  8.40625000e+05,
  0.00000000e+00,  0.00000000e+00,  8.40625000e+05,
  0.00000000e+00,  0.00000000e+00,  8.40625000e+05,
  0.00000000e+00,  0.00000000e+00,  8.40625000e+05,
  8.40625000e+05,  0.00000000e+00,  0.00000000e+00,
  8.40625000e+05,  0.00000000e+00,  0.00000000e+00,
  8.40625000e+05,  0.00000000e+00,  0.00000000e+00,
  8.40625000e+05,  0.00000000e+00,  0.00000000e+00,
  0.00000000e+00,  8.40625000e+05,  0.00000000e+00,
  0.00000000e+00,  8.40625000e+05,  0.00000000e+00,
  0.00000000e+00,  8.40625000e+05,  0.00000000e+00,
  0.00000000e+00,  8.40625000e+05,  0.00000000e+00,
  0.00000000e+00,  0.00000000e+00,  8.40625000e+05,
  0.00000000e+00,  0.00000000e+00,  8.40625000e+05,
  0.00000000e+00,  0.00000000e+00,  8.40625000e+05,
  0.00000000e+00,  0.00000000e+00,  8.40625000e+05,
  8.40625000e+05,  0.00000000e+00,  0.00000000e+00,
  8.40625000e+05,  0.00000000e+00,  0.00000000e+00,
  8.40625000e+05,  0.00000000e+00,  0.00000000e+00,
  8.40625000e+05,  0.00000000e+00,  0.00000000e+00,
  0.00000000e+00,  8.40625000e+05,  0.00000000e+00,
  0.00000000e+00,  8.40625000e+05,  0.00000000e+00,
  0.00000000e+00,  8.40625000e+05,  0.00000000e+00,
  0.00000000e+00,  8.40625000e+05,  0.00000000e+00,
  0.00000000e+00,  0.00000000e+00,  8.40625000e+05,
  0.00000000e+00,  0.00000000e+00,  8.40625000e+05,
  0.00000000e+00,  0.00000000e+00,  8.40625000e+05,
  0.00000000e+00,  0.00000000e+00,  8.40625000e+05,
  8.40625000e+05,  0.00000000e+00,  0.00000000e+00,
  8.40625000e+05,  0.00000000e+00,  0.00000000e+00,
  8.40625000e+05,  0.00000000e+00,  0.00000000e+00,
  8.40625000e+05,  0.00000000e+00,  0.00000000e+00,
  0.00000000e+00,  8.40625000e+05,  0.00000000e+00,
  0.00000000e+00,  8.40625000e+05,  0.00000000e+00,
  0.00000000e+00,  8.40625000e+05,  0.00000000e+00,
  0.00000000e+00,  8.40625000e+05,  0.00000000e+00,
  0.00000000e+00,  0.00000000e+00,  8.40625000e+05,
  0.00000000e+00,  0.00000000e+00,  8.40625000e+05,
  0.00000000e+00,  0.00000000e+00,  8.40625000e+05,
  0.00000000e+00,  0.00000000e+00,  8.40625000e+05,
};

pylith::feassemble::ElasticityExplicitLgDeformGravData3DLinear::ElasticityExplicitLgDeformGravData3DLinear(void)
{ // constructor
  spaceDim = _spaceDim;
  cellDim = _cellDim;
  numVertices = _numVertices;
  numCells = _numCells;
  numBasis = _numBasis;
  numQuadPts = _numQuadPts;
  matType = const_cast<char*>(_matType);
  matDBFilename = const_cast<char*>(_matDBFilename);
  matId = _matId;
  matLabel = const_cast<char*>(_matLabel);
  dt = _dt;
  gravityVec = const_cast<double*>(_gravityVec);
  vertices = const_cast<double*>(_vertices);
  cells = const_cast<int*>(_cells);
  verticesRef = const_cast<double*>(_verticesRef);
  quadPts = const_cast<double*>(_quadPts);
  quadWts = const_cast<double*>(_quadWts);
  basis = const_cast<double*>(_basis);
  basisDerivRef = const_cast<double*>(_basisDerivRef);
  fieldTIncr = const_cast<double*>(_fieldTIncr);
  fieldT = const_cast<double*>(_fieldT);
  fieldTmdt = const_cast<double*>(_fieldTmdt);
  valsResidual = const_cast<double*>(_valsResidual);
  valsJacobian = const_cast<double*>(_valsJacobian);
} // constructor

pylith::feassemble::ElasticityExplicitLgDeformGravData3DLinear::~ElasticityExplicitLgDeformGravData3DLinear(void)
{}


// End of file
