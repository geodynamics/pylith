// -*- C++ -*-
//
// ======================================================================
//
//                           Brad T. Aagaard
//                        U.S. Geological Survey
//
// {LicenseText}
//
// ======================================================================
//

// DO NOT EDIT THIS FILE
// This file was generated from python application quadrature1din3dquadratic.

#include "QuadratureData1Din3DQuadratic.hh"

const int pylith::feassemble::QuadratureData1Din3DQuadratic::_numVertices = 3;

const int pylith::feassemble::QuadratureData1Din3DQuadratic::_spaceDim = 3;

const int pylith::feassemble::QuadratureData1Din3DQuadratic::_numCells = 1;

const int pylith::feassemble::QuadratureData1Din3DQuadratic::_cellDim = 1;

const int pylith::feassemble::QuadratureData1Din3DQuadratic::_numBasis = 3;

const int pylith::feassemble::QuadratureData1Din3DQuadratic::_numQuadPts = 2;

const double pylith::feassemble::QuadratureData1Din3DQuadratic::_vertices[] = {
  1.00000000e+00, -1.50000000e+00, -2.00000000e+00,
  3.00000000e-01,  3.00000000e-01,  8.00000000e-01,
 -5.00000000e-01,  2.00000000e+00,  3.00000000e+00,
};

const int pylith::feassemble::QuadratureData1Din3DQuadratic::_cells[] = {
       0,       1,       2,
};

const double pylith::feassemble::QuadratureData1Din3DQuadratic::_quadPtsRef[] = {
 -5.77350269e-01,
  5.77350269e-01,
};

const double pylith::feassemble::QuadratureData1Din3DQuadratic::_quadWts[] = {
  1.00000000e+00,  1.00000000e+00,
};

const double pylith::feassemble::QuadratureData1Din3DQuadratic::_quadPts[] = {
  7.16346035e-01, -7.27029638e-01, -7.43375673e-01,
 -1.49679369e-01,  1.29369630e+00,  2.14337567e+00,
};

const double pylith::feassemble::QuadratureData1Din3DQuadratic::_basisVert[] = {
  1.00000000e+00,
  0.00000000e+00,
 -0.00000000e+00,
 -0.00000000e+00,
  1.00000000e+00,
  0.00000000e+00,
 -0.00000000e+00,
  0.00000000e+00,
  1.00000000e+00,
};

const double pylith::feassemble::QuadratureData1Din3DQuadratic::_basisDerivVert[] = {
 -1.50000000e+00,
  2.00000000e+00,
 -5.00000000e-01,
 -5.00000000e-01,
 -0.00000000e+00,
  5.00000000e-01,
  5.00000000e-01,
 -2.00000000e+00,
  1.50000000e+00,
};

const double pylith::feassemble::QuadratureData1Din3DQuadratic::_jacobianVert[] = {
 -6.50000000e-01,  1.85000000e+00,  3.10000000e+00,
 -7.50000000e-01,  1.75000000e+00,  2.50000000e+00,
 -8.50000000e-01,  1.65000000e+00,  1.90000000e+00,
};

const double pylith::feassemble::QuadratureData1Din3DQuadratic::_jacobianDetVert[] = {
  3.66810578e+00,  3.14245127e+00,  2.65612500e+00,
};

const double pylith::feassemble::QuadratureData1Din3DQuadratic::_basisQuad[] = {
  4.55341801e-01,
  6.66666667e-01,
 -1.22008468e-01,
 -1.22008468e-01,
  6.66666667e-01,
  4.55341801e-01,
};

const double pylith::feassemble::QuadratureData1Din3DQuadratic::_basisDerivQuad[] = {
 -1.07735027e+00,
  1.15470054e+00,
 -7.73502692e-02,
  7.73502692e-02,
 -1.15470054e+00,
  1.07735027e+00,
};

const double pylith::feassemble::QuadratureData1Din3DQuadratic::_jacobianQuad[] = {
 -6.92264973e-01,  1.80773503e+00,  2.84641016e+00,
 -8.07735027e-01,  1.69226497e+00,  2.15358984e+00,
};

const double pylith::feassemble::QuadratureData1Din3DQuadratic::_jacobianDetQuad[] = {
  3.44226488e+00,  2.85554650e+00,
};

const double pylith::feassemble::QuadratureData1Din3DQuadratic::_jacobianInvQuad[] = {
 -1.44453358e+00,
  5.53178417e-01,
  3.51319713e-01,
 -1.23802976e+00,
  5.90924008e-01,
  4.64340973e-01,
};

pylith::feassemble::QuadratureData1Din3DQuadratic::QuadratureData1Din3DQuadratic(void)
{ // constructor
  numVertices = _numVertices;
  spaceDim = _spaceDim;
  numCells = _numCells;
  cellDim = _cellDim;
  numBasis = _numBasis;
  numQuadPts = _numQuadPts;
  vertices = const_cast<double*>(_vertices);
  cells = const_cast<int*>(_cells);
  quadPtsRef = const_cast<double*>(_quadPtsRef);
  quadWts = const_cast<double*>(_quadWts);
  quadPts = const_cast<double*>(_quadPts);
  basisVert = const_cast<double*>(_basisVert);
  basisDerivVert = const_cast<double*>(_basisDerivVert);
  jacobianVert = const_cast<double*>(_jacobianVert);
  jacobianDetVert = const_cast<double*>(_jacobianDetVert);
  basisQuad = const_cast<double*>(_basisQuad);
  basisDerivQuad = const_cast<double*>(_basisDerivQuad);
  jacobianQuad = const_cast<double*>(_jacobianQuad);
  jacobianDetQuad = const_cast<double*>(_jacobianDetQuad);
  jacobianInvQuad = const_cast<double*>(_jacobianInvQuad);
} // constructor

pylith::feassemble::QuadratureData1Din3DQuadratic::~QuadratureData1Din3DQuadratic(void)
{}


// End of file
