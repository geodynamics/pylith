// -*- C++ -*-
//
// ======================================================================
//
//                           Brad T. Aagaard
//                        U.S. Geological Survey
//
// {LicenseText}
//
// ======================================================================
//

// DO NOT EDIT THIS FILE
// This file was generated from python application elasticitylgdeformexplicitapp.

#include "ElasticityExplicitLgDeformData2DLinear.hh"

const int pylith::feassemble::ElasticityExplicitLgDeformData2DLinear::_spaceDim = 2;

const int pylith::feassemble::ElasticityExplicitLgDeformData2DLinear::_cellDim = 2;

const int pylith::feassemble::ElasticityExplicitLgDeformData2DLinear::_numVertices = 3;

const int pylith::feassemble::ElasticityExplicitLgDeformData2DLinear::_numCells = 1;

const int pylith::feassemble::ElasticityExplicitLgDeformData2DLinear::_numBasis = 3;

const int pylith::feassemble::ElasticityExplicitLgDeformData2DLinear::_numQuadPts = 1;

const char* pylith::feassemble::ElasticityExplicitLgDeformData2DLinear::_matType = "ElasticPlaneStrain";

const char* pylith::feassemble::ElasticityExplicitLgDeformData2DLinear::_matDBFilename = "data/elasticplanestrain.spatialdb";

const int pylith::feassemble::ElasticityExplicitLgDeformData2DLinear::_matId = 0;

const char* pylith::feassemble::ElasticityExplicitLgDeformData2DLinear::_matLabel = "elastic strain 2-D";

const double pylith::feassemble::ElasticityExplicitLgDeformData2DLinear::_dt =   1.00000000e-02;

const double pylith::feassemble::ElasticityExplicitLgDeformData2DLinear::_gravityVec[] = {
  0.00000000e+00, -1.00000000e+08,
};

const double pylith::feassemble::ElasticityExplicitLgDeformData2DLinear::_vertices[] = {
  2.00000000e-01, -4.00000000e-01,
  3.00000000e-01,  5.00000000e-01,
 -1.00000000e+00, -2.00000000e-01,
};

const int pylith::feassemble::ElasticityExplicitLgDeformData2DLinear::_cells[] = {
0,1,2,
};

const double pylith::feassemble::ElasticityExplicitLgDeformData2DLinear::_verticesRef[] = {
 -1.00000000e+00, -1.00000000e+00,
  1.00000000e+00, -1.00000000e+00,
 -1.00000000e+00,  1.00000000e+00,
};

const double pylith::feassemble::ElasticityExplicitLgDeformData2DLinear::_quadPts[] = {
 -3.33333333e-01, -3.33333333e-01,
};

const double pylith::feassemble::ElasticityExplicitLgDeformData2DLinear::_quadWts[] = {
  2.00000000e+00,
};

const double pylith::feassemble::ElasticityExplicitLgDeformData2DLinear::_basis[] = {
  3.33333333e-01,  3.33333333e-01,
  3.33333333e-01,};

const double pylith::feassemble::ElasticityExplicitLgDeformData2DLinear::_basisDerivRef[] = {
 -5.00000000e-01, -5.00000000e-01,
  5.00000000e-01,  0.00000000e+00,
  0.00000000e+00,  5.00000000e-01,
};

const double pylith::feassemble::ElasticityExplicitLgDeformData2DLinear::_fieldTIncr[] = {
  1.30000000e+00, -9.00000000e-01,
  1.40000000e+00,  1.50000000e+00,
  5.00000000e-01, -9.00000000e-01,
};

const double pylith::feassemble::ElasticityExplicitLgDeformData2DLinear::_fieldT[] = {
  1.60000000e+00, -8.00000000e-01,
  9.00000000e-01,  7.00000000e-01,
 -2.00000000e-01, -1.10000000e+00,
};

const double pylith::feassemble::ElasticityExplicitLgDeformData2DLinear::_fieldTmdt[] = {
  8.00000000e-01,  1.00000000e-01,
  5.00000000e-01,  3.00000000e-01,
 -1.00000000e-01, -6.00000000e-01,
};

const double pylith::feassemble::ElasticityExplicitLgDeformData2DLinear::_valsResidual[] = {
 -5.23632630e+11,  5.83305846e+11,
  1.65372743e+11, -5.78685990e+11,
  3.58250262e+11, -4.62306437e+09,
};

const double pylith::feassemble::ElasticityExplicitLgDeformData2DLinear::_valsJacobian[] = {
  1.52777778e+06,  0.00000000e+00,
  1.52777778e+06,  0.00000000e+00,
  1.52777778e+06,  0.00000000e+00,
  0.00000000e+00,  1.52777778e+06,
  0.00000000e+00,  1.52777778e+06,
  0.00000000e+00,  1.52777778e+06,
  1.52777778e+06,  0.00000000e+00,
  1.52777778e+06,  0.00000000e+00,
  1.52777778e+06,  0.00000000e+00,
  0.00000000e+00,  1.52777778e+06,
  0.00000000e+00,  1.52777778e+06,
  0.00000000e+00,  1.52777778e+06,
  1.52777778e+06,  0.00000000e+00,
  1.52777778e+06,  0.00000000e+00,
  1.52777778e+06,  0.00000000e+00,
  0.00000000e+00,  1.52777778e+06,
  0.00000000e+00,  1.52777778e+06,
  0.00000000e+00,  1.52777778e+06,
};

const double pylith::feassemble::ElasticityExplicitLgDeformData2DLinear::_valsResidualLumped[] = {
 -5.23631714e+11,  5.83306915e+11,
  1.65371368e+11, -5.78689962e+11,
  3.58250720e+11, -4.62016160e+09,
};

const double pylith::feassemble::ElasticityExplicitLgDeformData2DLinear::_valsJacobianLumped[] = {
  4.58333333e+06,  4.58333333e+06,
  4.58333333e+06,  4.58333333e+06,
  4.58333333e+06,  4.58333333e+06,
};

pylith::feassemble::ElasticityExplicitLgDeformData2DLinear::ElasticityExplicitLgDeformData2DLinear(void)
{ // constructor
  spaceDim = _spaceDim;
  cellDim = _cellDim;
  numVertices = _numVertices;
  numCells = _numCells;
  numBasis = _numBasis;
  numQuadPts = _numQuadPts;
  matType = const_cast<char*>(_matType);
  matDBFilename = const_cast<char*>(_matDBFilename);
  matId = _matId;
  matLabel = const_cast<char*>(_matLabel);
  dt = _dt;
  gravityVec = const_cast<double*>(_gravityVec);
  vertices = const_cast<double*>(_vertices);
  cells = const_cast<int*>(_cells);
  verticesRef = const_cast<double*>(_verticesRef);
  quadPts = const_cast<double*>(_quadPts);
  quadWts = const_cast<double*>(_quadWts);
  basis = const_cast<double*>(_basis);
  basisDerivRef = const_cast<double*>(_basisDerivRef);
  fieldTIncr = const_cast<double*>(_fieldTIncr);
  fieldT = const_cast<double*>(_fieldT);
  fieldTmdt = const_cast<double*>(_fieldTmdt);
  valsResidual = const_cast<double*>(_valsResidual);
  valsJacobian = const_cast<double*>(_valsJacobian);
  valsResidualLumped = const_cast<double*>(_valsResidualLumped);
  valsJacobianLumped = const_cast<double*>(_valsJacobianLumped);
} // constructor

pylith::feassemble::ElasticityExplicitLgDeformData2DLinear::~ElasticityExplicitLgDeformData2DLinear(void)
{}


// End of file
