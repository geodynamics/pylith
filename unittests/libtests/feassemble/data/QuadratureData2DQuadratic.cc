// -*- C++ -*-
//
// ======================================================================
//
//                           Brad T. Aagaard
//                        U.S. Geological Survey
//
// {LicenseText}
//
// ======================================================================
//

// DO NOT EDIT THIS FILE
// This file was generated from python application quadrature2dquadratic.

#include "QuadratureData2DQuadratic.hh"

const int pylith::feassemble::QuadratureData2DQuadratic::_numVertices = 6;

const int pylith::feassemble::QuadratureData2DQuadratic::_spaceDim = 2;

const int pylith::feassemble::QuadratureData2DQuadratic::_numCells = 1;

const int pylith::feassemble::QuadratureData2DQuadratic::_cellDim = 2;

const int pylith::feassemble::QuadratureData2DQuadratic::_numBasis = 6;

const int pylith::feassemble::QuadratureData2DQuadratic::_numQuadPts = 3;

const double pylith::feassemble::QuadratureData2DQuadratic::_vertices[] = {
 -1.00000000e+00, -1.00000000e+00,
  1.00000000e+00,  2.00000000e-01,
 -1.50000000e+00,  5.00000000e-01,
  0.00000000e+00, -6.00000000e-01,
  2.50000000e-01,  3.50000000e-01,
 -1.25000000e+00, -2.50000000e-01,
};

const int pylith::feassemble::QuadratureData2DQuadratic::_cells[] = {
       0,       1,       2,       3,       4,       5,
};

const double pylith::feassemble::QuadratureData2DQuadratic::_quadPtsRef[] = {
  6.66666667e-01,  1.66666667e-01,
  1.66666667e-01,  6.66666667e-01,
  1.66666667e-01,  1.66666667e-01,
};

const double pylith::feassemble::QuadratureData2DQuadratic::_quadWts[] = {
  1.66666667e-01,  1.66666667e-01,  1.66666667e-01,
};

const double pylith::feassemble::QuadratureData2DQuadratic::_quadPts[] = {
  4.72222222e-01, -3.88888889e-02,
 -7.77777778e-01,  1.77777778e-01,
 -6.94444444e-01, -6.38888889e-01,
};

const double pylith::feassemble::QuadratureData2DQuadratic::_basis[] = {
 -1.11111111e-01,  2.22222222e-01,
 -1.11111111e-01,  4.44444444e-01,
  4.44444444e-01,  1.11111111e-01,
 -1.11111111e-01, -1.11111111e-01,
  2.22222222e-01,  1.11111111e-01,
  4.44444444e-01,  4.44444444e-01,
  2.22222222e-01, -1.11111111e-01,
 -1.11111111e-01,  4.44444444e-01,
  1.11111111e-01,  4.44444444e-01,
};

const double pylith::feassemble::QuadratureData2DQuadratic::_basisDeriv[] = {
  3.33333333e-01,  3.33333333e-01,
  1.66666667e+00,  0.00000000e+00,
  0.00000000e+00, -3.33333333e-01,
 -2.00000000e+00, -2.66666667e+00,
  6.66666667e-01,  2.66666667e+00,
 -6.66666667e-01,  0.00000000e+00,
  3.33333333e-01,  3.33333333e-01,
 -3.33333333e-01,  0.00000000e+00,
  0.00000000e+00,  1.66666667e+00,
  0.00000000e+00, -6.66666667e-01,
  2.66666667e+00,  6.66666667e-01,
 -2.66666667e+00, -2.00000000e+00,
 -1.66666667e+00, -1.66666667e+00,
 -3.33333333e-01,  0.00000000e+00,
  0.00000000e+00, -3.33333333e-01,
  2.00000000e+00, -6.66666667e-01,
  6.66666667e-01,  6.66666667e-01,
 -6.66666667e-01,  2.00000000e+00,
};

const double pylith::feassemble::QuadratureData2DQuadratic::_jacobian[] = {
  2.33333333e+00,  8.33333333e-01,
  1.60000000e+00,  2.03333333e+00,
  3.33333333e+00, -1.66666667e-01,
  1.20000000e+00,  1.63333333e+00,
  2.33333333e+00, -1.66666667e-01,
  8.00000000e-01,  1.63333333e+00,
};

const double pylith::feassemble::QuadratureData2DQuadratic::_jacobianDet[] = {
  3.41111111e+00,  5.64444444e+00,  3.94444444e+00,
};

const double pylith::feassemble::QuadratureData2DQuadratic::_jacobianInv[] = {
  5.96091205e-01, -2.44299674e-01,
 -4.69055375e-01,  6.84039088e-01,
  2.89370079e-01,  2.95275591e-02,
 -2.12598425e-01,  5.90551181e-01,
  4.14084507e-01,  4.22535211e-02,
 -2.02816901e-01,  5.91549296e-01,
};

pylith::feassemble::QuadratureData2DQuadratic::QuadratureData2DQuadratic(void)
{ // constructor
  numVertices = _numVertices;
  spaceDim = _spaceDim;
  numCells = _numCells;
  cellDim = _cellDim;
  numBasis = _numBasis;
  numQuadPts = _numQuadPts;
  vertices = const_cast<double*>(_vertices);
  cells = const_cast<int*>(_cells);
  quadPtsRef = const_cast<double*>(_quadPtsRef);
  quadWts = const_cast<double*>(_quadWts);
  quadPts = const_cast<double*>(_quadPts);
  basis = const_cast<double*>(_basis);
  basisDeriv = const_cast<double*>(_basisDeriv);
  jacobian = const_cast<double*>(_jacobian);
  jacobianDet = const_cast<double*>(_jacobianDet);
  jacobianInv = const_cast<double*>(_jacobianInv);
} // constructor

pylith::feassemble::QuadratureData2DQuadratic::~QuadratureData2DQuadratic(void)
{}


// End of file
