// -*- C++ -*-
//
// ======================================================================
//
//                           Brad T. Aagaard
//                        U.S. Geological Survey
//
// {LicenseText}
//
// ======================================================================
//

// DO NOT EDIT THIS FILE
// This file was generated from python application integratorinertia2din3done.

#include "IntegratorDataInertia2Din3DOne.hh"

const int pylith::feassemble::IntegratorDataInertia2Din3DOne::_numVertices = 3;

const int pylith::feassemble::IntegratorDataInertia2Din3DOne::_spaceDim = 3;

const int pylith::feassemble::IntegratorDataInertia2Din3DOne::_numCells = 1;

const int pylith::feassemble::IntegratorDataInertia2Din3DOne::_cellDim = 2;

const int pylith::feassemble::IntegratorDataInertia2Din3DOne::_numCorners = 3;

const int pylith::feassemble::IntegratorDataInertia2Din3DOne::_numQuadPts = 1;

const int pylith::feassemble::IntegratorDataInertia2Din3DOne::_fiberDim = 3;

const double pylith::feassemble::IntegratorDataInertia2Din3DOne::_vertices[] = {
  5.00000000e-01, -2.00000000e+00, -5.00000000e-01,
  3.00000000e+00,  5.00000000e-01,  0.00000000e+00,
 -1.00000000e+00,  2.00000000e+00,  4.00000000e+00,
};

const int pylith::feassemble::IntegratorDataInertia2Din3DOne::_cells[] = {
       0,       1,       2,
};

const double pylith::feassemble::IntegratorDataInertia2Din3DOne::_quadPts[] = {
  3.33333333e-01,  3.33333333e-01,
};

const double pylith::feassemble::IntegratorDataInertia2Din3DOne::_quadWts[] = {
  5.00000000e-01,
};

const double pylith::feassemble::IntegratorDataInertia2Din3DOne::_basis[] = {
  3.33333333e-01,  3.33333333e-01,
  3.33333333e-01,};

const double pylith::feassemble::IntegratorDataInertia2Din3DOne::_basisDeriv[] = {
 -1.00000000e+00, -1.00000000e+00,
  1.00000000e+00,  0.00000000e+00,
  0.00000000e+00,  1.00000000e+00,
};

const double pylith::feassemble::IntegratorDataInertia2Din3DOne::_fieldIn[] = {
  1.20000000e+00,  1.00000000e-01, -3.00000000e-01,
  5.00000000e-01, -3.00000000e-01,  1.20000000e+00,
  1.10000000e+00,  5.00000000e-01,  8.00000000e-01,
};

const double pylith::feassemble::IntegratorDataInertia2Din3DOne::_valsAction[] = {
  3.18271761e+00,  3.41005458e-01,  1.93236426e+00,
  3.18271761e+00,  3.41005458e-01,  1.93236426e+00,
  3.18271761e+00,  3.41005458e-01,  1.93236426e+00,
};

const double pylith::feassemble::IntegratorDataInertia2Din3DOne::_valsMatrix[] = {
  1.13668486e+00,  0.00000000e+00,  0.00000000e+00,
  1.13668486e+00,  0.00000000e+00,  0.00000000e+00,
  1.13668486e+00,  0.00000000e+00,  0.00000000e+00,
  0.00000000e+00,  1.13668486e+00,  0.00000000e+00,
  0.00000000e+00,  1.13668486e+00,  0.00000000e+00,
  0.00000000e+00,  1.13668486e+00,  0.00000000e+00,
  0.00000000e+00,  0.00000000e+00,  1.13668486e+00,
  0.00000000e+00,  0.00000000e+00,  1.13668486e+00,
  0.00000000e+00,  0.00000000e+00,  1.13668486e+00,
  1.13668486e+00,  0.00000000e+00,  0.00000000e+00,
  1.13668486e+00,  0.00000000e+00,  0.00000000e+00,
  1.13668486e+00,  0.00000000e+00,  0.00000000e+00,
  0.00000000e+00,  1.13668486e+00,  0.00000000e+00,
  0.00000000e+00,  1.13668486e+00,  0.00000000e+00,
  0.00000000e+00,  1.13668486e+00,  0.00000000e+00,
  0.00000000e+00,  0.00000000e+00,  1.13668486e+00,
  0.00000000e+00,  0.00000000e+00,  1.13668486e+00,
  0.00000000e+00,  0.00000000e+00,  1.13668486e+00,
  1.13668486e+00,  0.00000000e+00,  0.00000000e+00,
  1.13668486e+00,  0.00000000e+00,  0.00000000e+00,
  1.13668486e+00,  0.00000000e+00,  0.00000000e+00,
  0.00000000e+00,  1.13668486e+00,  0.00000000e+00,
  0.00000000e+00,  1.13668486e+00,  0.00000000e+00,
  0.00000000e+00,  1.13668486e+00,  0.00000000e+00,
  0.00000000e+00,  0.00000000e+00,  1.13668486e+00,
  0.00000000e+00,  0.00000000e+00,  1.13668486e+00,
  0.00000000e+00,  0.00000000e+00,  1.13668486e+00,
};

const double pylith::feassemble::IntegratorDataInertia2Din3DOne::_valsLumped[] = {
  3.41005458e+00,  3.41005458e+00,  3.41005458e+00,
  3.41005458e+00,  3.41005458e+00,  3.41005458e+00,
  3.41005458e+00,  3.41005458e+00,  3.41005458e+00,
};

pylith::feassemble::IntegratorDataInertia2Din3DOne::IntegratorDataInertia2Din3DOne(void)
{ // constructor
  numVertices = _numVertices;
  spaceDim = _spaceDim;
  numCells = _numCells;
  cellDim = _cellDim;
  numCorners = _numCorners;
  numQuadPts = _numQuadPts;
  fiberDim = _fiberDim;
  vertices = const_cast<double*>(_vertices);
  cells = const_cast<int*>(_cells);
  quadPts = const_cast<double*>(_quadPts);
  quadWts = const_cast<double*>(_quadWts);
  basis = const_cast<double*>(_basis);
  basisDeriv = const_cast<double*>(_basisDeriv);
  fieldIn = const_cast<double*>(_fieldIn);
  valsAction = const_cast<double*>(_valsAction);
  valsMatrix = const_cast<double*>(_valsMatrix);
  valsLumped = const_cast<double*>(_valsLumped);
} // constructor

pylith::feassemble::IntegratorDataInertia2Din3DOne::~IntegratorDataInertia2Din3DOne(void)
{}


// End of file
