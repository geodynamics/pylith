We are pleased to announce release of PyLith version 1.3.0.

Please submit bug reports via the World Wide Web at:
    http://geodynamics.org/roundup    

Please send all questions by electronic mail to:
    cig-short@geodynamics.org

PyLith is free software.  See the file COPYING for copying conditions.

This release allows the solution of both quasi-static and dynamic
problems in one, two, or three dimensions. The code runs in either
serial or parallel mode, and the design allows for relatively easy
scripting using the Python programming language. Material properties
and parameters for boundary and fault conditions are specified using a
spatial database, which permits easy prescription of complex spatial
variations of properties and parameters. Simulation parameters are
generally specified through the use of simple ASCII files or the
command line.

You can download the source code and binaries from

    http://geodynamics.org/cig/software/packages/short/pylith

Installation instructions are in the bundled README and INSTALL  
files, as well as in the User Manual on the web page.

PyLith is under active development and we expect a number of additions
and improvements in the near future. Likely enhancements will include
additional constitutive models for both volume elements and cohesive
(fault) elements, automatic generation of higher-order elements from
linear elements, and the generation of Green's functions to be used in
inversions.  Many of these features should be available in late 2008.


======================================================================
MIGRATING FROM VERSION 1.2 TO 1.3
======================================================================

The implementation of different options for controlling the time step
requires adjusting input parameters from those used with PyLith
1.2. The time stepping is not specified under the time-stepping
formulation rather than the problem (i.e., one level deeper).

======================================================================
MIGRATING FROM VERSION 1.1 TO 1.2
======================================================================

There are two new features in PyLith version 1.2 that require users to
adjust input parameters from those used with PyLith 1.1. A dynamic
array of kinematic rupture replaces a single kinematic rupture on a
fault. Additionally, the default slip time function is now a
step-function. This eliminates the need to specify a peak slip rate
for quasi-static simulations. When using PyLith version 1.2 with a
problem previously setup for PyLith 1.1, look for warnings about
unknown components and settings in the screen output at the beginning
of a run.

======================================================================
MIGRATING FROM VERSION 1.0 TO 1.1
======================================================================

There are two new features in PyLith version 1.1 that require users to
adjust input parameters from those used with PyLith 1.0. The
elimination of containers in favor of the dynamic arrays of components
present in the latest version of Pyre requires switching from setting
the container to specifying the array of components on the command
line or .cfg file. Additionally, the new implementation of output
requires a completely new set of parameters. When using PyLith version
1.1 with a problem previously setup for PyLith 1.0, look for warnings
about unknown components and settings in the output at the beginning
of a run.

======================================================================
TIPS
======================================================================

  * For most crustal deformation problems, we recommend using the
    Additive Schwartz preconditioner via the following PETSc
    settings:

      - Command line arguments

        --petsc.pc_type=asm
        --petsc.ksp_max_it=100
        --petsc.ksp_gmres_restart=50
        --petsc.ksp_rtol=1.0e-08

      - pylithapp.cfg (or your other favorite .cfg file)

        [pylithapp.petsc]
        pc_type = asm
        ksp_max_it = 200
        ksp_gmres_restart = 50
        ksp_rtol = 1.0e-08

  * If the solve takes more than a few hundred iterations for a
    large problem (use the --petsc.ksp_monitor=1 and
    --petsc.ksp_view=1 to see diagnostic information for the
    solver), this is an indication that something is wrong. Either
    the preconditioner is inappropriate for the type of problem you
    are solving or there is an error in the problem setup.


----------------------------------------------------------------------
Version 1.3
----------------------------------------------------------------------

  * New time stepping options

    In addition to a uniform, user-specified time step, which is the
    default, there are two new time-stepping options. The user may
    supply a file with nonuniform time steps or, for quasi-static
    simulations, the user can request the code to compute the time
    step automatically. For the current bulk constitutive models, the
    automatically determined time step is independent of the
    deformation rate, so it is uniform.

  * Initial stresses

    Users may optionally supply an initial stress state for each
    material via a spatial database. The initial stress state can
    balance the gravitational body forces so that the model is in
    equilibrium without any deformation. This implementation of an
    initial stress state is a prelude to specifying an initial state
    for each material, which will be available in a future release.

  * Bug fixes

    - Fixed labeling of physical properties in output for the Maxwell
      viscoelastic and generalized Maxwell viscoelastic materials (mu
      and lambda were switched).

----------------------------------------------------------------------
Version 1.2
----------------------------------------------------------------------

  * New Sieve implementation

    The previous implementation of Sieve provided a very generalized
    implementation of data structures and operations for
    finite-element meshes. Switching to a more rigid implementation in
    the new implementation strealined the data structures, resulting
    in a significant reduction in the memory use for storing the
    mesh. This leads to an overall reduction in memory use of 25-30%
    in many cases.

  * Multiple kinematic ruptures

    A single kinematic rupture on a fault has been replaced by a
    dynamic array of kinematic ruptures. This allows creation of an
    arbitrary number of kinematic ruptures on each fault surface. By
    using spatial databases to control the spatial and temporal extent
    of slip in each rupture independently, slip from different
    earthquake ruptures can overlap in space and/or
    time. Additionally, the rupture time at each location is specified
    with respect to the origin time of the corresponding earthquake
    rupture.

  * New slip time functions

    - Step slip time function (now the default)

      This slip time function simplifies specifying instantaneous slip
      in a quasi-static simulation compared with using the Brune slip
      time function.

    - Constant slip rate slip time function

      This slip time function permits prescribing a constant slip rate
      on the fault surface.

  * Gravitational body forces

    Gravitational body forces are implemented (they are turned off by
    default). The direction and acceleration of gravity may be specified.

  * Fixed Makefile.am files to not delete source files during "make
    clean" when building in the source tree.

----------------------------------------------------------------------
Version 1.1.2
----------------------------------------------------------------------

  * Fixed bug in output of solution over sub-domain boundary surfaces
    in parallel.

  * Fixed Makefile.am files to include documentation files in source
    distribution.

----------------------------------------------------------------------
Version 1.1.1
----------------------------------------------------------------------

  * Fixed Makefile.am files to include files missing from the source
    distribution.

----------------------------------------------------------------------
Version 1.1.0
----------------------------------------------------------------------

  * New boundary conditions

    - Neumann (traction) boundary conditions

    - Absorbing boundary conditions via simple, tuned dampers

    - Dirichlet boundary conditions with displacement and/or velocity values

  * New bulk constitutive models

    - Generalized Maxwell viscoelastic model 

  * New output implementation

    The output to VTK files has been completely rewritten. This new
    implementation includes output of physical properties and state
    variables associated with the bulk constitutive models, as well as
    output of fault information (earthquake rupture parameters and
    slip and traction time histories). Additionally, the VTK file with
    the solution no longer includes fault related values- it contains
    just the displacement field over the domain as one would expect. A
    user can now also request output of the solution over an arbitrary
    number of sub-domains of the domain boundary, e.g., the ground
    surface. For each of these different kinds of output, the
    frequency of output and the values included can be customized by
    the user. The names of the VTK files and the variable names have
    also been adjusted to permit animation of solutions within most
    VTK visualization tools.

  * New spatial database implementations

    Spatialdata includes two new spatial database implementations. The
    SCECCVMHDB provides a seamless interface to the SCEC CVM-H seismic
    velocity model for elastic material properties. The UniformDB
    permits creating a spatial database for uniform values using only
    .cfg files or the command line; this eliminates the need to create
    a SimpleDB database file with one location.

  * Dynamic arrays of components in Pyre

    Pyre now contains dynamic arrays of components, eliminating the
    need for containers for materials, boundary conditions, and
    faults.

  * Better consistency checking of input parameters

    - Uniqueness of material identifiers for materials and faults is
      enforced.

    - The material identifier of each cell in the mesh is checked to
      make sure it matches a material model.

    - Each boundary, interface condition, and output group is checked
      to make sure it exists in the mesh.

  * Bug fixes

    - Fixed bug causing segmentation fault with multiple,
      non-overlapping Dirichlet boundary conditions applied to vertices.

    - Fixed numerous bugs related to explicit time integration for
      dynamic problems.

    - Eliminated several small memory errors.

    - Fixed several bugs associated with writing VTK files in parallel.

  * Known issues

      - PyLith still uses much more memory that PyLith 0.8 due to the
        current general Sieve implementation. A much more efficient,
        albeit less general Sieve implementation is under
        development. Additionally, distribution of the mesh will also be
        improved in a future release.

      - The preconditioner for explicit time stepping provides
        relatively poor overall performance compared to a direct solve
        with traditional mass lumping. An appropriate preconditioner and
        traditional mass lumping will be supported in a future release.


----------------------------------------------------------------------
Version 1.0.2
----------------------------------------------------------------------

  * Performance optimizations have significantly reduced runtime and
    memory use relative to version 1.0.1. The default quadrature order
    for tetrahedral cells is now 1, which is appropriate for the
    default basis functions.

  * Added checks to verify the compatibility of quadrature scheme for solid
    and cohesive cells.

  * Bug fixes

      - In some cases, cohesive cells were not inserted into the
        finite-element mesh properly. The cells mixed together vertices
        from the different sides of the fault. A more efficient
        procedure for creating cohesive cells fixed this problem.

      - Cell adjacency graph was created incorrectly which resulted in
        a poor quality of partitioning among processors.

      - VTK output for meshes with N faults included cohesive cells
        for N-1 faults. Since VTK output does not understand cohesive
        cells, we now remove all cohesive cells from the VTK output.

      - Using the SimpleDB in Spatialdata from Python limited
        interpolation to the "linear" scheme instead of allowing use of
        the "nearest" scheme. Setting the SimpleDB property to "nearest"
        and "linear" now works as expected.

      - The reader for Spatialdata coordinate systems information did not
        correctly putback characters in the input stream, resulting in
        reading errors. The putback routines were fixed.

      - Fault "up" and "normal" directions remained as string arrays
        when passed to the module, instead of being converted to float
        arrays.


----------------------------------------------------------------------
Version 1.0.1
----------------------------------------------------------------------

  * Bug fixes

      - Cohesive cells lacked consistent orientation (inconsistent
        normals) in cases where cells were not ordered one side of the
        fault and then the other.

      - Final slip of zero resulted in fault slip and slip increments
        of Nan.

      - Parallel importing of meshes from LaGrit and CUBIT lacked
        guards against all processors reading the files.

----------------------------------------------------------------------
Version 1.0.0
----------------------------------------------------------------------

  * Code now includes both dynamic and quasi-static solutions.

  * Completely rewritten in Python and C++, with bindings provided by
    Pyrex/Pyrexembed.

  * Easier specification of simulations:

      - Parameters are all set using .cfg files (or .pml/command-line).

      - Mesh may be directly imported from CUBIT, LaGriT, or using
        PyLith mesh ASCII format.

      - Material properties, fault dislocations, and BC are all given
        using spatial databases, which are independent of mesh
        discretization.

  * Faults are now implemented using cohesive elements:

      - Easy specification of kinematic fault slip using a spatial
        database.

      - Cohesive elements generate offsets in the mesh corresponding
        to fault slip, which increase the accuracy of displacement
        fields near faults and facilitate visualization of fault slip.

      - Usage of cohesive elements will facilitate the upcoming
        addition of fault constitutive relations, where fault slip
        occurs in response to prescribed physics.

  * Improved implicit time-stepping eliminates need to perform more
    than one iteration for linear rheologies.

  * Code is now completely modular and object-oriented, which allows
    much easier addition of new features.  Modules may be added
    without having to recompile the code.

  * Features present in 0.8 that are not present in 1.0 that will be
    added in the near future.

      - Traction boundary conditions

      - Generalized Maxwell and Power-law Maxwell viscoelastic models


======================================================================
KNOWN ISSUES
======================================================================

1. "merlin.DistributionNotFound: Cheetah" error

  This error occurs when trying to use the 32-bit linux binary on
  64-bit linux systems. One of the Python packages PyLith uses doesn't
  know how to determine the system architecture at runtime. The
  workaround is:

  (1) Go to the lib/python2.5/site-packages directory.
  (2) Unzip merlin-1.3-py2.5.egg (if it is a file and not a directory).
  (3) Go to the merlin directory.
  (4) Edit __init__.py. Replace line 308
        plat = get_platform()
      with
        plat = "linux-i686"
  (5) If merlin-1.3-py2.5.egg is a file, rezip merlin. Go to the
      site-packages directory and enter
      "zip -r merlin-1.3-py2.5.egg merlin".
