# -*- Python -*-

# To run this problem, type
# "pylith planestrain_onecell_2d.cfg cycle_cont2d.cfg".
# The settings in pylithapp.cfg will be read by default. See the README for
# how to run other problems in this directory.
#
#
#  -> ----------------------- <-
#     |                     |
#  -> |                     | <-
#     |                     |
#  -> |                     | <-
#     |                     |
#  -> ----------------------- <-
#     ^          ^          ^
#
# Axial contraction is applied by pushing on the left and right boundaries
# in the horizontal direction.
# All displacements in the vertical direction are fixed so there are no
# unconstrained dof.

[pylithapp]

# ----------------------------------------------------------------------
# problem
# ----------------------------------------------------------------------
# Specify the problem settings.
[pylithapp.timedependent]
# Set bc to an array with 2 boundary conditions: 'x_neg', 'x_pos'
bc = [x_neg,x_pos]

# ----------------------------------------------------------------------
# boundary conditions
# ----------------------------------------------------------------------

# BC for the left (-x) side of the domain.
[pylithapp.timedependent.bc.x_neg]

# Fix the 0 (x) degree of freedom.
bc_dof = [0,1]

# The group of vertices in the mesh file associated with this boundary
# condition have the name 'x_neg'.
label = x_neg

db_change = spatialdata.spatialdb.UniformDB
db_change.label = Amplitude of Dirichlet BC on -x
db_change.values = [displacement-x,displacement-y,change-start-time]
db_change.data = [0.1*mm,0.00*cm,0.0*year]

th_change = spatialdata.spatialdb.TimeHistory
th_change.label = Time history for Dirichlet BC on -x
th_change.filename = loadcycle.timedb

# Boundary conditions to be applied to the positive x-side of the mesh.
[pylithapp.timedependent.bc.x_pos]

# Fix the 0 (x) degree of freedom.
bc_dof = [0,1]

# The group of vertices in the mesh file associated with this boundary
# condition have the name 'x_pos'.
label = x_pos

db_change = spatialdata.spatialdb.UniformDB
db_change.label = Amplitude of Dirichlet BC on +x
db_change.values = [displacement-x,displacement-y,change-start-time]
db_change.data = [-0.1*mm,0.00*cm,0.0*year]

th_change = spatialdata.spatialdb.TimeHistory
th_change.label = Time history for Dirichlet BC on +x
th_change.filename = loadcycle.timedb

# ----------------------------------------------------------------------
# output
# ----------------------------------------------------------------------
# Give basename for VTK output of solution over domain.
[pylithapp.problem.formulation.output.output.writer]
filename = output/cycle_cont2d.vtk
time_format = %04.0f
time_constant = 1.0*year

# Give basename for VTK output of state variables.
[pylithapp.timedependent.materials.material.output]
cell_filter = pylith.meshio.CellFilterAvgMesh
writer.filename = output/cycle_cont2d-statevars.vtk
writer.time_format = %04.0f
writer.time_constant = 1.0*year
