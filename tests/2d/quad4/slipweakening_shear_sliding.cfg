# -*- Python -*-
[slipweakening_shear_sliding]

[slipweakening_shear_sliding.launcher] # WARNING: THIS IS NOT PORTABLE
command = mpirun -np ${nodes}

# ----------------------------------------------------------------------
# journal
# ----------------------------------------------------------------------
# The settings below turn on journal info for the specified components.
# If you want less output to stdout, you can turn these off.
[slipweakening_shear_sliding.journal.info]
#timedependent = 1
#implicit = 1
#petsc = 1
#solvernonlinear = 1
#meshioascii = 1
#homogeneous = 1
#elasticityimplicit = 1
#fiatlagrange = 1
#quadrature1d = 1
#faultcohesivedyn = 1

# ----------------------------------------------------------------------
# mesh_generator
# ----------------------------------------------------------------------
# The settings below control the mesh generation (importing mesh info).
# Turn on debugging output for mesh generation.
[slipweakening_shear_sliding.mesh_generator]
#debug = 1
reader = pylith.meshio.MeshIOCubit

# This component specification means we are using PyLith ASCII format,
# and we then specify the filename and number of space dimensions for
# the mesh.
[slipweakening_shear_sliding.mesh_generator.reader]
filename = mesh.exo
coordsys.space_dim = 2

# ----------------------------------------------------------------------
# problem
# ----------------------------------------------------------------------
# Specify the problem settings.
# This is a time-dependent problem, so we select this as our problem type.
# We select a total time of 0 sec, and a time step size of 1 sec, so we
# are performing a single time step.
# The spatial dimension for this problem is 2.
# For an implicit formulation (using implicit.cfg), we will perform 1
# implicit time step from t = -1.0 to t = 0.0 (elastic solution step).
[slipweakening_shear_sliding.timedependent]
dimension = 2
normalizer.length_scale = 1.0*m
formulation = pylith.problems.Implicit
formulation.solver = pylith.problems.SolverNonlinear

# Set bc to an array with 2 boundary conditions: 'x_neg', 'x_pos'
bc = [x_neg,x_pos,y_pos_fault,y_neg_fault]
bc.x_pos = pylith.bc.DirichletBoundary
bc.y_pos_fault = pylith.bc.Neumann
bc.y_neg_fault = pylith.bc.Neumann

# Set interfaces to an array with 1 fault: 'fault'.
interfaces = [fault]


[slipweakening_shear_sliding.timedependent.formulation.time_step]
total_time = 0.0*s
dt = 1.0*s


# ----------------------------------------------------------------------
# materials
# ----------------------------------------------------------------------
# Specify the material information for the problem.
# The material type is isotropic elastic formulated for plane strain.
[slipweakening_shear_sliding.timedependent.materials]
material = pylith.materials.ElasticPlaneStrain

[slipweakening_shear_sliding.timedependent.materials.material]

# We give a label of 'elastic material' to this material.
label = elastic material

# The cells associated with this material are given a material ID of 0
# in the mesh file.
id = 1

# The properties for this material are given in the spatial database file
# 'matelastic2D.spatialdb'.
db_properties.iohandler.filename = matprops.spatialdb

# Set cell type to quadrilateral (2-d Lagrange).
quadrature.cell = pylith.feassemble.FIATLagrange
quadrature.cell.dimension = 2

# ----------------------------------------------------------------------
# boundary conditions
# ----------------------------------------------------------------------
# Provide information on the boundary conditions.

# Boundary conditions to be applied to the negative x-side of the mesh.
[slipweakening_shear_sliding.timedependent.bc.x_neg]

# We are fixing the 0 (x) and 1 (y) degrees of freedom.
bc_dof = [0,1]

# The nodes associated with this boundary condition have the name
# 'x_neg' in the mesh file.
label = 21

# Boundary conditions to be applied to the positive x-side of the mesh.
[slipweakening_shear_sliding.timedependent.bc.x_pos]

# We are fixing the 0 (x) and prescribing 1 (y) degree of freedom.
bc_dof = [0,1]

# The nodes associated with this boundary condition have the name
# 'x_pos' in the mesh file.
label = 20

db_initial = spatialdata.spatialdb.UniformDB
db_initial.label = Dirichlet BC +x edge
db_initial.values = [displacement-x,displacement-y]
db_initial.data = [0.0*m,1.0*m]



# Boundary conditions to be applied to the positive y-side of the mesh.
[slipweakening_shear_sliding.timedependent.bc.y_pos_fault]

# The nodes associated with this boundary condition have the name
# 'y_pos_fault' in the mesh file.
label = 22

db_initial = spatialdata.spatialdb.UniformDB
db_initial.label = Neumann BC +y edge
db_initial.values = [traction-shear,traction-normal]
db_initial.data = [-0.6*MPa, 0.0*MPa]

# Set cell type to quadrilateral (1-d Lagrange).
quadrature.cell = pylith.feassemble.FIATLagrange
quadrature.cell.dimension = 1

# Boundary conditions to be applied to the negative y-side of the mesh.
[slipweakening_shear_sliding.timedependent.bc.y_neg_fault]

# The nodes associated with this boundary condition have the name
# 'y_neg_fault' in the mesh file.
label = 23

db_initial = spatialdata.spatialdb.UniformDB
db_initial.label = Neumann BC -y edge
db_initial.values = [traction-shear,traction-normal]
db_initial.data = [-0.6*MPa, 0.0*MPa]

# Set cell type to quadrilateral (1-d Lagrange).
quadrature.cell = pylith.feassemble.FIATLagrange
quadrature.cell.dimension = 1

# ----------------------------------------------------------------------
# faults
# ----------------------------------------------------------------------
# Provide information on the fault (interface).
[slipweakening_shear_sliding.timedependent.interfaces]

fault = pylith.faults.FaultCohesiveDyn

# Define fault properties.
[slipweakening_shear_sliding.timedependent.interfaces.fault]

# The nodes associated with this fault have the name 'fault' in the mesh file.
label = 10

# NOTE: It is possible to assign an ID number to a fault (e.g.,
# 'id = 10').  Care must be taken when doing this, however, because the
# assigned ID will become the material ID for the cohesive element.
# This ID must not conflict with any of the material ID numbers for
# volume elements.  The default ID for a fault is 100.  If you have a
# fault in your mesh you must:
# 1.  If you create your own fault ID, make sure it does not conflict
#     with any of you material ID's.
# 2.  If you use the default fault ID, make sure that none of your
#     material ID's are equal to 100.

# The quadrature for a 2D fault is 1D with a linear shape.
quadrature.cell = pylith.feassemble.FIATLagrange
quadrature.cell.dimension = 1

db_initial_tractions = spatialdata.spatialdb.UniformDB
db_initial_tractions.label = "Initial fault tractions"
db_initial_tractions.values = [traction-shear,traction-normal]
db_initial_tractions.data = [0.0*Pa, -1.0*MPa]

friction = pylith.friction.SlipWeakening

friction.db_properties = spatialdata.spatialdb.UniformDB
friction.db_properties.label = Slip weakening
friction.db_properties.values = [static-coefficient,dynamic-coefficient,slip-weakening-parameter,cohesion]
friction.db_properties.data = [0.6,0.59,0.2*m,0.0*Pa]

# ----------------------------------------------------------------------
# PETSc
# ----------------------------------------------------------------------
[slipweakening_shear_sliding.petsc]
pc_type = asm

# Change the preconditioner settings.
sub_pc_factor_shift_type = nonzero

ksp_rtol = 1.0e-8
ksp_max_it = 100
ksp_gmres_restart = 50
snes_max_it = 200

#ksp_monitor = true
#ksp_view = true
#ksp_converged_reason = true

#snes_monitor = true
#snes_view = true
#snes_converged_reason = true

#log_summary = true
#start_in_debugger = true

# ----------------------------------------------------------------------
# output
# ----------------------------------------------------------------------
# Give basename for VTK domain output of solution over domain.
[slipweakening_shear_sliding.problem.formulation.output.output.writer]
filename = slipweakening_shear_sliding.vtk

# Give basename for VTK fault output.
[slipweakening_shear_sliding.timedependent.interfaces.fault.output]
writer.filename = slipweakening_shear_sliding-fault.vtk
vertex_info_fields = [strike_dir,normal_dir,initial_traction,static_coefficient,dynamic_coefficient,slip_weakening_parameter,cohesion]
vertex_data_fields = [slip,traction,cumulative_slip,previous_slip]

# Give basename for VTK output of state variables.
[slipweakening_shear_sliding.timedependent.materials.material.output]
cell_filter = pylith.meshio.CellFilterAvgMesh
writer.filename = slipweakening_shear_sliding-elastic.vtk
