import numpy
j = numpy.zeros( (4,4), dtype=numpy.float64)

j[0,0] = +2.41071e+10  +2.41071e+10
j[0,1] =               +6.42857e+09
j[0,2] = -1.84821e+10  -1.84821e+10
j[0,3] =               -1.20536e+10

j[1,0] =               +6.42857e+09
j[1,1] =               +2.41071e+10  +2.41071e+10
j[1,2] =               -1.20536e+10
j[1,3] =               -1.84821e+10  -1.84821e+10

j[2,0] = -1.84821e+10  -1.84821e+10
j[2,1] =               -1.20536e+10
j[2,2] = +2.41071e+10  +2.41071e+10
j[2,3] =               +6.42857e+09

j[3,0] =               -1.20536e+10
j[3,1] =               -1.84821e+10  -1.84821e+10
j[3,2] =               +6.42857e+09
j[3,3] =               +2.41071e+10  +2.41071e+10

print "jacobian:\n",j


r = numpy.zeros( (4,1), dtype=numpy.float64)

r[0,0] = -3*6.42857e+9 - 3*-1.20536e+10
r[1,0] = +3*6.42857e+9 + 3*-1.20536e+10
r[2,0] = -3*6.42857e+9 - 3*-1.20536e+10
r[3,0] = +3*6.42857e+9 + 3*-1.20536e+10
print "residual:\n",r

#r[0,0] =  1.6875e+10
#r[1,0] =  1.6875e+10
#r[2,0] = -1.6875e+10
#r[3,0] = -1.6875e+10


u = numpy.dot(numpy.linalg.inv(j), r)
print "dispIncr:\n",u
