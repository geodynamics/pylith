[pylithapp.metadata]
keywords = [full-scale test, corner cases, one cell, 3D]
features = [
    Static problem,
    pylith.meshio.MeshIOAscii,
    pylith.problems.TimeDependent,
    pylith.meshio.DataWriterHDF5,
    spatialdata.spatialdb.UniformDB
    ]

[pylithapp.launcher] # WARNING: THIS IS NOT PORTABLE
command = mpiexec -np ${nodes}

# ----------------------------------------------------------------------
# journal
# ----------------------------------------------------------------------
[pylithapp.journal.info]
#timedependent = 1
#solution = 1
#petsc = 1
#meshio = 1
#isotropiclinearelasticity = 1
#dirichlettimedependent = 1

[pylithapp.journal.debug]
#timedependent = 1
#solution = 1
#isotropiclinearelasticity = 1
#dirichlettimedependent = 1
#constraintspatialdb = 1
#outputphysics = 1
#outputsolndomain = 1

# ----------------------------------------------------------------------
# mesh_generator
# ----------------------------------------------------------------------
[pylithapp.mesh_generator]
reader = pylith.meshio.MeshIOAscii

[pylithapp.mesh_generator.reader]
# filename = mesh_CELL.exo
coordsys.space_dim = 3

# ----------------------------------------------------------------------
# problem
# ----------------------------------------------------------------------
[pylithapp.problem]
defaults.quadrature_order = 1
solver = nonlinear

[pylithapp.problem.solution.subfields.displacement]
basis_order = 1

[pylithapp.problem]
solution_observers = [domain]

# ----------------------------------------------------------------------
# materials
# ----------------------------------------------------------------------
[pylithapp.problem]
materials = [elastic]

[pylithapp.problem.materials.elastic]
description = Elastic material
label_value = 1

auxiliary_subfields.density.basis_order = 0
bulk_rheology.auxiliary_subfields.bulk_modulus.basis_order = 0
bulk_rheology.auxiliary_subfields.shear_modulus.basis_order = 0

db_auxiliary_field = spatialdata.spatialdb.UniformDB
db_auxiliary_field.description = Elastic properties for +x side of the fault
db_auxiliary_field.values = [density, vs, vp]
db_auxiliary_field.data = [2500*kg/m**3, 3.0*km/s, 5.2915026*km/s]


# ----------------------------------------------------------------------
# PETSc
# ----------------------------------------------------------------------
[pylithapp.problem.petsc_defaults]
solver = True
testing = True
monitors = False


# End of file
