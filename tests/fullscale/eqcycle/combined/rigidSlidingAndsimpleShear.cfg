[pylithapp.metadata]
# See twoblocks_soln.py for the analytical solution.
#
description = Prescribed fault slip with Dirichlet boundary conditions with rigid block motion.
authors = [Brad Aagaard]
keywords = [fault, prescribed slip, rigid block motion]
version = 1.0.0
pylith_version = [>=3.0, <4.0]

features = [
    Static simulation,
    Field split preconditioner,
    pylith.faults.FaultCohesiveKin,
    pylith.faults.KinSrcStep,
    pylith.materials.Elasticity,
    pylith.materials.IsotropicLinearElasticity,
    pylith.bc.DirichletTimeDependent,
    spatialdata.spatialdb.UniformDB
    ]

# ----------------------------------------------------------------------
# solution
# ----------------------------------------------------------------------
[pylithapp.problems.timedependent.solution.subfields.displacement]
basis_order = 1

[pylithapp.problems.rigidSliding]
solution_observers = [domain, bc_ypos]
solution_observers.bc_ypos = pylith.meshio.OutputSolnBoundary

[pylithapp.problems.rigidSliding.solution_observers.bc_ypos]
label = edge_ypos

# ----------------------------------------------------------------------
# fault
# ----------------------------------------------------------------------
[pylithapp.problems.timedependent]
interfaces = [fault]

[pylithapp.problems.timedependent.interfaces.fault]
id = 10
label = fault_x

observers.observer.data_fields = [slip]

[pylithapp.problems.timedependent.interfaces.fault.eq_ruptures]
# Switch to constant slip rate time function.
rupture = pylith.faults.KinSrcConstRate

[pylithapp.problems.rigidSliding.interfaces.fault.eq_ruptures.rupture]
# We specify slip as a function of depth, so we use a SimpleDB with
# linear interpolation.
db_auxiliary_field = spatialdata.spatialdb.UniformDB
db_auxiliary_field.label = Fault rupture auxiliary field spatial database
db_auxiliary_field.values = [initiation_time, slip_rate_left_lateral, slip_rate_opening]
db_auxiliary_field.data = [0.0*year, -2.0*m/year, 0.0*m/year]

[pylithapp.problems.simpleShear.interfaces.fault.eq_ruptures.rupture]
# We specify slip as a function of depth, so we use a SimpleDB with
# linear interpolation.
db_auxiliary_field = spatialdata.spatialdb.UniformDB
db_auxiliary_field.label = Fault rupture auxiliary field spatial database
db_auxiliary_field.values = [initiation_time, slip_rate_left_lateral, slip_rate_opening]
db_auxiliary_field.data = [0.0*year, 0.0*m/year, 0.0*m/year]

# ----------------------------------------------------------------------
# boundary conditions
# ----------------------------------------------------------------------
[pylithapp.problems.rigidSliding]
bc = [bc_xneg, bc_xpos]
bc.bc_xneg = pylith.bc.DirichletTimeDependent
bc.bc_xpos = pylith.bc.DirichletTimeDependent

[pylithapp.problems.simpleShear]
bc = [bc_xneg, bc_xpos, bc_ypos, bc_yneg]
bc.bc_xneg = pylith.bc.DirichletTimeDependent
bc.bc_xpos = pylith.bc.DirichletTimeDependent
bc.bc_yneg = pylith.bc.NeumannTimeDependent
bc.bc_ypos = pylith.bc.NeumannTimeDependent

[pylithapp.problems.timedependent.bc.bc_xpos]
constrained_dof = [0, 1]
label = edge_xpos
use_initial = True
use_rate = True
db_auxiliary_field = spatialdata.spatialdb.UniformDB
db_auxiliary_field.label = Dirichlet BC +x edge
db_auxiliary_field.values = [initial_amplitude_x, initial_amplitude_y, rate_start_time, rate_amplitude_x, rate_amplitude_y]
db_auxiliary_field.data = [0.0*m, 0.0*m, 0.0*year, 0.0*m/year, -1.0*m/year]

[pylithapp.problems.timedependent.bc.bc_xneg]
constrained_dof = [0, 1]
label = edge_xneg
use_initial = True
use_rate = True
db_auxiliary_field = spatialdata.spatialdb.UniformDB
db_auxiliary_field.label = Dirichlet BC +x edge
db_auxiliary_field.values = [initial_amplitude_x, initial_amplitude_y, rate_start_time, rate_amplitude_x, rate_amplitude_y]
db_auxiliary_field.data = [0.0*m, 0.0*m, 0.0*year, 0.0*m/year, +1.0*m/year]

[pylithapp.problems.simpleShear.bc.bc_ypos]
label = edge_ypos
use_initial = True
use_rate = True
db_auxiliary_field = spatialdata.spatialdb.UniformDB
db_auxiliary_field.label = Neumann BC +y edge
db_auxiliary_field.values = [initial_amplitude_tangential, initial_amplitude_normal, rate_start_time, rate_amplitude_tangential, rate_amplitude_normal]
db_auxiliary_field.data = [0.0*MPa, 0.0*MPa, 0.0*year, 5.625*MPa/year, 0.0*MPa/year]

[pylithapp.problems.simpleShear.bc.bc_yneg]
label = edge_yneg
use_initial = True
use_rate = True
db_auxiliary_field = spatialdata.spatialdb.UniformDB
db_auxiliary_field.label = Neumann BC -y edge
db_auxiliary_field.values = [initial_amplitude_tangential, initial_amplitude_normal, rate_start_time, rate_amplitude_tangential, rate_amplitude_normal]
db_auxiliary_field.data = [0.0*MPa, 0.0*MPa, 0.0*year, 5.625*MPa/year, 0.0*MPa/year]

# End of file
