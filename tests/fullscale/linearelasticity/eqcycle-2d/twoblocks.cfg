[pylithapp.metadata]
# See twoblocks_soln.py for the analytical solution.
#
description = Prescribed fault slip with Dirichlet boundary conditions with rigid block motion.
authors = [Brad Aagaard]
keywords = [fault, prescribed slip, rigid block motion]
version = 1.0.0
pylith_version = [>=3.0, <4.0]

features = [
    Static simulation,
    Field split preconditioner,
    pylith.faults.FaultCohesiveKin,
    pylith.faults.KinSrcStep,
    pylith.materials.Elasticity,
    pylith.materials.IsotropicLinearElasticity,
    pylith.bc.DirichletTimeDependent,
    spatialdata.spatialdb.UniformDB
    ]

# ----------------------------------------------------------------------
# solution
# ----------------------------------------------------------------------
[pylithapp.problem.solution.subfields.displacement]
basis_order = 1

# ----------------------------------------------------------------------
# fault
# ----------------------------------------------------------------------
[pylithapp.problem]
interfaces = [fault]

[pylithapp.problem.interfaces.fault]
id = 10
label = fault_x

observers.observer.data_fields = [slip]

[pylithapp.problem.interfaces.fault.eq_ruptures.rupture]
db_auxiliary_field = spatialdata.spatialdb.UniformDB
db_auxiliary_field.label = Fault rupture auxiliary field spatial database
db_auxiliary_field.values = [initiation_time, final_slip_left_lateral, final_slip_opening]
db_auxiliary_field.data = [0.0*s, -2.0*m, 0.0*m]


# ----------------------------------------------------------------------
# boundary conditions
# ----------------------------------------------------------------------
[pylithapp.problem]
bc = [bc_xneg, bc_xpos]
bc.bc_xneg = pylith.bc.DirichletTimeDependent
bc.bc_xpos = pylith.bc.DirichletTimeDependent

[pylithapp.problem.bc.bc_xpos]
constrained_dof = [0, 1]
label = edge_xpos
db_auxiliary_field = spatialdata.spatialdb.UniformDB
db_auxiliary_field.label = Dirichlet BC +x edge
db_auxiliary_field.values = [initial_amplitude_x, initial_amplitude_y]
db_auxiliary_field.data = [0.0*m, -1.0*m]

[pylithapp.problem.bc.bc_xneg]
constrained_dof = [0, 1]
label = edge_xneg
db_auxiliary_field = spatialdata.spatialdb.UniformDB
db_auxiliary_field.label = Dirichlet BC +x edge
db_auxiliary_field.values = [initial_amplitude_x, initial_amplitude_y]
db_auxiliary_field.data = [0.0*m, +1.0*m]


# End of file
