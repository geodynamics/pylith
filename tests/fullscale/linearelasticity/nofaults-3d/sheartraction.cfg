[pylithapp.metadata]
# See sheartraction_soln.py for the analytical solution.
#
description = Simple shear using Dirichlet and Neumann boundary conditions.
authors = [Brad Aagaard]
keywords = [simple shear]
version = 1.0.0
pylith_version = [>=3.0, <4.0]

features = [
    Static simulation,
    ILU preconditioner,
    pylith.materials.Elasticity,
    pylith.materials.IsotropicLinearElasticity,
    pylith.bc.DirichletTimeDependent,
    pylith.bc.NeumannTimeDependent,
    spatialdata.spatialdb.UniformDB,
    spatialdata.spatialdb.SimpleDB
    ]

# ----------------------------------------------------------------------
# solution
# ----------------------------------------------------------------------
[pylithapp.problems.problem.solution.subfields.displacement]
basis_order = 1

# ----------------------------------------------------------------------
# materials
# ----------------------------------------------------------------------
[pylithapp.problems.problem.materials.upper_crust]
db_auxiliary_field = spatialdata.spatialdb.UniformDB
db_auxiliary_field.description = Elastic properties for upper crust
db_auxiliary_field.values = [density, vs, vp]
db_auxiliary_field.data = [2500*kg/m**3, 3.0*km/s, 5.2915026*km/s]

[pylithapp.problems.problem.materials.lower_crust]
db_auxiliary_field = spatialdata.spatialdb.UniformDB
db_auxiliary_field.description = Elastic properties lower crust
db_auxiliary_field.values = [density, vs, vp]
db_auxiliary_field.data = [2500*kg/m**3, 3.0*km/s, 5.2915026*km/s]

# ----------------------------------------------------------------------
# boundary conditions
# ----------------------------------------------------------------------
[pylithapp.problems.problem]
bc = [bc_xneg, bc_xpos, bc_yneg, bc_ypos, bc_zneg]
bc.bc_xneg = pylith.bc.DirichletTimeDependent
bc.bc_yneg = pylith.bc.DirichletTimeDependent
bc.bc_xpos = pylith.bc.NeumannTimeDependent
bc.bc_ypos = pylith.bc.NeumannTimeDependent
bc.bc_zneg = pylith.bc.DirichletTimeDependent

[pylithapp.problems.problem.bc.bc_xneg]
constrained_dof = [0,1]
label = boundary_xneg
db_auxiliary_field = spatialdata.spatialdb.SimpleGridDB
db_auxiliary_field.description = Dirichlet BC -x boundary
db_auxiliary_field.filename = sheartraction_disp.spatialdb
db_auxiliary_field.query_type = linear


[pylithapp.problems.problem.bc.bc_yneg]
constrained_dof = [0,1]
label = boundary_yneg
db_auxiliary_field = spatialdata.spatialdb.SimpleGridDB
db_auxiliary_field.description = Dirichlet BC -y boundary
db_auxiliary_field.filename = sheartraction_disp.spatialdb
db_auxiliary_field.query_type = linear


[pylithapp.problems.problem.bc.bc_xpos]
label = boundary_xpos
db_auxiliary_field = spatialdata.spatialdb.UniformDB
db_auxiliary_field.description = Neumann BC +x boundary
db_auxiliary_field.values = [initial_amplitude_tangential_1, initial_amplitude_tangential_2, initial_amplitude_normal]
db_auxiliary_field.data = [5.0*MPa, 0.0*MPa, 0.0*MPa]


[pylithapp.problems.problem.bc.bc_ypos]
label = boundary_ypos
db_auxiliary_field = spatialdata.spatialdb.UniformDB
db_auxiliary_field.description = Neumann BC +y boundary
db_auxiliary_field.values = [initial_amplitude_tangential_1, initial_amplitude_tangential_2, initial_amplitude_normal]
db_auxiliary_field.data = [-5.0*MPa, 0.0*MPa, 0.0*MPa]


[pylithapp.problems.problem.bc.bc_zneg]
constrained_dof = [2]
label = boundary_zneg
db_auxiliary_field = spatialdata.spatialdb.SimpleGridDB
db_auxiliary_field.description = Dirichlet BC -z boundary
db_auxiliary_field.filename = sheartraction_disp.spatialdb
db_auxiliary_field.query_type = linear


# End of file
