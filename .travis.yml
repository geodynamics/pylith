# Travis-CI configuration

dist: bionic

services:
    - docker

language: cpp

# :TODO: @brad Add osx build (need homebrew packages)..
jobs:
  include:
    - name: debian-stable-gcc8
      os: linux
      env: BASE_IMAGE=geodynamics/pylith-testenv-debian-stable-gcc8:py2 TEST_COVERAGE=yes PYTHON_COVERAGE=python2-coverage
    - name: debian-testing-gcc9
      os: linux
      env: BASE_IMAGE=geodynamics/pylith-testenv-debian-testing-gcc9:py2 TEST_COVERAGE=yes PYTHON_COVERAGE=python2-coverage
    - name: ubuntu-18.04
      os: linux
      env: BASE_IMAGE=geodynamics/pylith-testenv-ubuntu-18.04:py2 TEST_COVERAGE=yes PYTHON_COVERAGE=python2-coverage
    - name: ubuntu-20.04
      os: linux
      env: BASE_IMAGE=geodynamics/pylith-testenv-ubuntu-20.04:py2 TEST_COVERAGE=yes PYTHON_COVERAGE=python2-coverage
    - name: fedora-32
      os: linux
      env: BASE_IMAGE=geodynamics/pylith-testenv-fedora-32:py2
    - name: fedora-33
      os: linux
      env: BASE_IMAGE=geodynamics/pylith-testenv-fedora-33:py2
    - name: centos-7
      os: linux
      env: BASE_IMAGE=geodynamics/pylith-testenv-centos-7:py2
    - name: centos-8
      os: linux
      env: BASE_IMAGE=geodynamics/pylith-testenv-centos-8:py2


addons:
  apt:
    packages:
      - docker-ce


# Limit number of commits in cloning (but keep enough so that 'git describe' works)
git:
  depth: 100


install:
  - docker build -t pylith-testenv --build-arg BASE_IMAGE=$BASE_IMAGE --build-arg TEST_COVERAGE=$TEST_COVERAGE --build-arg PYTHON_COVERAGE=$PYTHON_COVERAGE --target src -f docker/pylith-testenv .


script: 
  - ci_env=`bash <(curl -s https://codecov.io/env)`
  - docker run $ci_env pylith-testenv ../../src/pylith/ci-config/run_test_coverage.sh
