# -*- Python -*-
[pylithapp]

# This is not a self-contained simulation configuration file. This
# file only specifies parameters specific to tutorial step01.
# The general parameters are specificed in the pylithapp.cfg
# file which PyLith reads by default.
#
# To run the simulation:
# pylith step01.cfg
#
# Output will be directed to directory step01.

# ----------------------------------------------------------------------
# problem
# ----------------------------------------------------------------------
[pylithapp.timedependent]
# Set bc to an array of 3 boundary conditions: 'x_pos','x_neg', and 'z_neg'.
bc = [x_pos,x_neg,z_neg]

[pylithapp.timedependent.implicit]
# Set the output to an array of 2 output managers.
# We will output the solution over the domain and the ground surface.
output = [domain,subdomain]

# Set subdomain component to OutputSolnSubset (subset of domain).
output.subdomain = pylith.meshio.OutputSolnSubset

# ----------------------------------------------------------------------
# materials
# ----------------------------------------------------------------------

# We specifically define the database info for the inelastic material
# for each model, since the type of spatialdb can be different.

[pylithapp.timedependent.materials.inelastic]
db_properties.iohandler.filename = spatialdb/mat_maxwell.spatialdb

# ----------------------------------------------------------------------
# boundary conditions
# ----------------------------------------------------------------------
# For x_pos and x_neg, we change the database from ZeroDispDB (which
# specifies a zero value everywhere) to SimpleDB (which uses a data file
# to specify a spatial variation).
# For z_neg, we keep the default ZeroDispDB, since we just want zero
# z-displacements on that boundary.

# Set the parameters for Dirichlet boundary conditions applied on the
# +x and -x faces of the box.

# We fix the x and y degrees of freedom on the +x and -x faces, and
# fix the z degree of freedom on the bottom face.

# The label corresponds to the nodeset ID in CUBIT.

[pylithapp.timedependent.bc.x_pos]
bc_dof = [0, 1]
label = 11
db_initial = spatialdata.spatialdb.SimpleDB
db_initial.label = Dirichlet BC on +x
db_initial.iohandler.filename = spatialdb/fixeddisp_axial_shear.spatialdb

[pylithapp.timedependent.bc.x_neg]
bc_dof = [0, 1]
label = 12
db_initial = spatialdata.spatialdb.SimpleDB
db_initial.label = Dirichlet BC on -x
db_initial.iohandler.filename = spatialdb/fixeddisp_axial_shear.spatialdb

[pylithapp.timedependent.bc.z_neg]
bc_dof = [2]
label = 15
db_initial.label = Dirichlet BC on -z

# ----------------------------------------------------------------------
# output
# ----------------------------------------------------------------------
# Give basename for VTK domain output of solution over domain.
[pylithapp.problem.formulation.output.domain.writer]
filename = step01/step01.vtk

# Give basename for VTK domain output of solution over ground surface.
[pylithapp.problem.formulation.output.subdomain]
label = 17 ; nodeset for subdomain
writer.filename = step01/step01-groundsurf.vtk

# Give basename for VTK output of elastic state variables.
[pylithapp.timedependent.materials.elastic.output]
cell_filter = pylith.meshio.CellFilterAvgMesh
writer.filename = step01/step01-elastic.vtk

# Give basename for VTK output of inelastic state variables.
[pylithapp.timedependent.materials.inelastic.output]
# Default (elastic) info and data fields do not include viscoelastic
# information, so we include it here.
cell_info_fields = [density,mu,lambda,maxwell_time]
cell_data_fields = [total_strain,stress,viscous_strain]
cell_filter = pylith.meshio.CellFilterAvgMesh
writer.filename = step01/step01-inelastic.vtk
