[pylithapp]

# ----------------------------------------------------------------------
# PROBLEM DESCRIPTION
# ----------------------------------------------------------------------

#
# This is a time-dependent problem with velocity boundary conditions.
# Velocities in the + and - y-directions are applied on the + and -
# x-faces, and the x-displacements are held fixed on those boundaries.
# The z-displacements are held fixed on the -z face.
# Two materials are used:
# 1. Elastic upper crust.
# 2. Viscoelastic (Maxwell) lower crust.

# ----------------------------------------------------------------------
# RUNNING THE SIMULATON
# ----------------------------------------------------------------------

# This is not a self-contained simulation configuration file. This
# file only specifies parameters specific to tutorial step04.
# The general parameters are specificed in the pylithapp.cfg
# file which PyLith reads by default.
#
# To run the simulation:
# pylith step04.cfg
#
# Output will be directed to the directory output.

# ----------------------------------------------------------------------
# problem
# ----------------------------------------------------------------------
[pylithapp.timedependent]
# Set bc to an array of 3 boundary conditions: 'x_pos','x_neg', and 'z_neg'.
bc = [x_pos,x_neg,z_neg]

[pylithapp.timedependent.implicit]
# Set the output to an array of 2 output managers.
# We will output the solution over the domain and the ground surface.
output = [domain,subdomain]

# Set subdomain component to OutputSolnSubset (boundary of the domain).
output.subdomain = pylith.meshio.OutputSolnSubset

# Change the total simulation time to 200 years, and use a constant time
# step size of 20 years.
[pylithapp.timedependent.implicit.time_step]
total_time = 200.0*year
dt = 20.0*year

# ----------------------------------------------------------------------
# materials
# ----------------------------------------------------------------------
# Change material type of lower crust to Maxwell viscoelastic.
[pylithapp.timedependent]
materials.lower_crust = pylith.materials.MaxwellIsotropic3D

# Provide a spatial database from which to obtain property values.
# Since there are additional properties and state variables for the Maxwell
# model, we explicitly request that they be output. Properties are named in
# cell_info_fields and state variables are named in cell_data_fields.
[pylithapp.timedependent.materials.lower_crust]
db_properties.iohandler.filename = spatialdb/mat_maxwell.spatialdb
output.cell_info_fields = [density,mu,lambda,maxwell_time]
output.cell_data_fields = [total_strain,stress,viscous_strain]

# ----------------------------------------------------------------------
# boundary conditions
# ----------------------------------------------------------------------
# Set the parameters for Dirichlet boundary conditions applied on the
# +x, -x, and -z faces of the box.
#
# We fix the x degree of freedom on the +x and -x faces, and
# fix the z degree of freedom on the bottom (-z) face. Constant velocities
# in the +y and -y directions are applied on +x and -x.
#
# For x_pos and x_neg, we retain the default ZeroDispDB for displacements
# (db_initial), since we do not want initial displacements. We change the
# default database for velocities (db_rate) to UniformDB, which allows
# nonzero velocities. Using UniformDB, we also specify the velocity values
# in this .cfg file, rather than using a spatialdb file.
#
# For z_neg, we keep the default ZeroDispDB, since we just want zero
# z-displacements on that boundary.
#

# The label corresponds to the name of the nodeset in CUBIT.

# +x face
[pylithapp.timedependent.bc.x_pos]
bc_dof = [0, 1]
label = face_xpos
db_initial.label = Dirichlet BC on +x
db_rate = spatialdata.spatialdb.UniformDB
db_rate.label = Dirichlet rate BC on +x
db_rate.values = [displacement-rate-x,displacement-rate-y,rate-start-time]
db_rate.data = [0.0*cm/year,1.0*cm/year,0.0*year]

# -x face
[pylithapp.timedependent.bc.x_neg]
bc_dof = [0, 1]
label = face_xneg
db_initial.label = Dirichlet BC on -x
db_rate = spatialdata.spatialdb.UniformDB
db_rate.label = Dirichlet rate BC on +x
db_rate.values = [displacement-rate-x,displacement-rate-y,rate-start-time]
db_rate.data = [0.0*cm/year,-1.0*cm/year,0.0*year]

# -z face
[pylithapp.timedependent.bc.z_neg]
bc_dof = [2]
label = face_zneg
db_initial.label = Dirichlet BC on -z

# ----------------------------------------------------------------------
# output
# ----------------------------------------------------------------------
# Give basename for VTK domain output of solution over domain.
[pylithapp.problem.formulation.output.domain]
# We specify that output occurs in terms of a given time frequency, and
# ask for output every 40 years. The time stamps of the output files are
# in years (rather than the default of seconds), and we give a format for
# the time stamp.
output_freq = time_step
time_step = 40.0*year
writer.filename = output/step04.vtk
writer.time_format = %04.0f
writer.time_constant = 1.0*year

# Give basename for VTK domain output of solution over ground surface.
[pylithapp.problem.formulation.output.subdomain]
# Name of nodeset for ground surface.
label = face_zpos
# We keep the default output frequency behavior (skip every n steps), and
# ask to skip 0 steps between output, so that we get output every time step.
skip = 0
writer.filename = output/step04-groundsurf.vtk
writer.time_format = %04.0f
writer.time_constant = 1.0*year

# Give basename for VTK output of upper_crust state variables.
[pylithapp.timedependent.materials.upper_crust.output]
# Average values over quadrature points.
cell_filter = pylith.meshio.CellFilterAvgMesh
output_freq = time_step
time_step = 40.0*year
writer.filename = output/step04-upper_crust.vtk
writer.time_format = %04.0f
writer.time_constant = 1.0*year

# Give basename for VTK output of lower_crust state variables.
[pylithapp.timedependent.materials.lower_crust.output]
# Average values over quadrature points.
cell_filter = pylith.meshio.CellFilterAvgMesh
output_freq = time_step
time_step = 40.0*year
writer.filename = output/step04-lower_crust.vtk
writer.time_format = %04.0f
writer.time_constant = 1.0*year
