[pylithapp]

# ----------------------------------------------------------------------
# PROBLEM DESCRIPTION
# ----------------------------------------------------------------------

#
# This is a purely elastic static problem using Dirichlet (displacement)
# boundary conditions and slip on a vertical fault. It is used for
# Green's function generation.

# ----------------------------------------------------------------------
# RUNNING THE SIMULATON
# ----------------------------------------------------------------------

# This is not a self-contained simulation configuration file. This
# file only specifies parameters specific to tutorial step21.
# It must also be run as a Green's function problem (it will read the
# settings in pylithapp.cfg and greensfns.cfg by default.
#
# To run the simulation:
# pylith step21.cfg --problem=pylith.problems.GreensFns
#
# Output will be directed to directory output.

# ----------------------------------------------------------------------
# mesh_generator
# ----------------------------------------------------------------------
[pylithapp.mesh_generator]
distributor.write_partition = True
distributor.data_writer = pylith.meshio.DataWriterHDF5

# ----------------------------------------------------------------------
# problem
# ----------------------------------------------------------------------
[pylithapp.problem.formulation.time_step]
# Define the total time for the simulation and the default time step size.
total_time = 0.0*s ; total time of simulation
# Define an appropriat time step for simulations. Important for
# nondimensionalization of velocities and slip rates.
dt = 1.0*year

[pylithapp.problem]
# Set bc to an array of 3 boundary conditions: 'x_pos','x_neg', and 'z_neg'.
bc = [x_pos,x_neg,z_neg]

# Set interfaces to an array of 1 fault: 'fault'.
interfaces = [fault]

[pylithapp.problem.formulation]
# Set the output to an array of 2 output managers.
# We will output the solution over the domain and at specified points.
output = [domain,points]

# Set points component to OutputSolnPoints (set of points).
output.points = pylith.meshio.OutputSolnPoints

# ----------------------------------------------------------------------
# boundary conditions
# ----------------------------------------------------------------------
# Set the parameters for Dirichlet boundary conditions applied on the
# -x, +x, and -z faces of the box.
#
# We fix the x and y degrees of freedom on the -x and +x faces, and
# fix the z degree of freedom on the bottom (-z) face.
#
# For all boundaries, we retain the default ZeroDispDB, which specifies
# a zero value.
#

# The label corresponds to the name of the nodeset in CUBIT.

# +x face
[pylithapp.problem.bc.x_pos]
bc_dof = [0, 1]
label = face_xpos
db_initial.label = Dirichlet BC on +x

# -x face
[pylithapp.problem.bc.x_neg]
bc_dof = [0, 1]
label = face_xneg
db_initial.label = Dirichlet BC on -x

# -z face
[pylithapp.problem.bc.z_neg]
bc_dof = [2]
label = face_zneg_nofault
db_initial.label = Dirichlet BC on -z

# ----------------------------------------------------------------------
# faults
# ----------------------------------------------------------------------
# Set label for the fault.
# The label corresponds to the name of the nodeset in CUBIT.
[pylithapp.problem.interfaces.fault]
id = 10
label = fault

# We must define the quadrature information for fault cells.
# The fault cells are 2D (surface).
quadrature.cell = pylith.feassemble.FIATLagrange
quadrature.cell.dimension = 2

# ----------------------------------------------------------------------
# output
# ----------------------------------------------------------------------
# Define output manager for domain output.
[pylithapp.problem.formulation.output.domain]
writer = pylith.meshio.DataWriterHDF5

# Define output manager for points output.
[pylithapp.problem.formulation.output.points]
writer = pylith.meshio.DataWriterHDF5

# Point coordinates will be read from greensfns_points.txt.
reader.filename = greensfns_points.txt

# Spatial dimension is 3 and we will output coordinates in m.
coordsys.space_dim = 3
coordsys.units = m

# Define output manager for fault output.
[pylithapp.problem.interfaces.fault.output]
writer = pylith.meshio.DataWriterHDF5

# We will not be writing any cell_info or cell_data fields for material
# output.
[pylithapp.problem.materials.upper_crust.output]
cell_info_fields = []
cell_data_fields = []
writer = pylith.meshio.DataWriterHDF5

[pylithapp.problem.materials.lower_crust.output]
cell_info_fields = []
cell_data_fields = []
writer = pylith.meshio.DataWriterHDF5

# Mesh partition information.
[pylithapp.mesh_generator.distributor.data_writer]
filename = output/step21-partition.h5
