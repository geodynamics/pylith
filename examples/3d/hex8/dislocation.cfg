# -*- Python -*-
[pylithapp]

# This is not a self-contained simulation configuration file. This
# file only specifies parameters specific to the boundary and
# interface conditions. The general parameters are specificed in the
# pylithapp.cfg file which PyLith reads by default.
#
# To run the simulation:
# pylith dislocation.cfg

# ----------------------------------------------------------------------
# problem
# ----------------------------------------------------------------------
[pylithapp.timedependent]
# Set bc to an array of 3 boundary conditions: 'x_pos','x_neg', and 'z_neg'.
bc = [x_pos,x_neg,z_neg]

# Set interfaces to an array of 1 fault: 'fault'.
interfaces = [fault]

[pylithapp.timedependent.implicit]
# Set the output to an array of 2 output managers.
# We will output the solution over the domain and the ground surface.
output = [domain,subdomain]

# Set subdomain component to OutputSolnSubset (subset of domain).
output.subdomain = pylith.meshio.OutputSolnSubset

# ----------------------------------------------------------------------
# boundary conditions
# ----------------------------------------------------------------------

# We use the default spatial database for the Dirichlet BC which sets
# the displacements to zero for all time.
#
# Set the parameters for the desired boundary conditions.
#
# Note: A more natural set of boundary conditions involves pinning the
# z-DOF on the bottom (-z) face. Howver, the current release of PyLith
# does not permit overlapping fault interfaces and Dirichlet boundary
# conditions with the block Jacobi preconditioner.

# The label corresponds to the nodeset ID in CUBIT.

[pylithapp.timedependent.bc.x_pos]
fixed_dof = [0, 1]
label = 11
db.label = Dirichlet BC on +x

[pylithapp.timedependent.bc.x_neg]
fixed_dof = [0, 1]
label = 12
db.label = Dirichlet BC on -x

[pylithapp.timedependent.bc.z_neg]
fixed_dof = [2]
label = 16
db.label = Dirichlet BC on -z

# ----------------------------------------------------------------------
# faults
# ----------------------------------------------------------------------
[pylithapp.timedependent.interfaces]
# Set the type of fault interface condition.
fault = pylith.faults.FaultCohesiveKin

# Set the parameters for the fault interface condition.

[pylithapp.timedependent.interfaces.fault]
label = 10
quadrature = pylith.feassemble.quadrature.Quadrature2Din3D
quadrature.cell = pylith.feassemble.FIATLagrange
quadrature.cell.dimension = 2
mat_db.iohandler.filename = mat_elastic.spatialdb

[pylithapp.timedependent.interfaces.fault.eq_srcs.rupture.slip_function]
slip.iohandler.filename = finalslip.spatialdb
slip_time.iohandler.filename = sliptime.spatialdb


# ----------------------------------------------------------------------
# output
# ----------------------------------------------------------------------
# Give basename for VTK domain output of solution over domain.
[pylithapp.problem.formulation.output.domain.writer]
filename = dislocation.vtk

# Give basename for VTK domain output of solution over ground surface.
[pylithapp.problem.formulation.output.subdomain]
label = 17 ; nodeset for subdomain
writer.filename = dislocation-groundsurf.vtk

# Give basename for vtk fault output.
[pylithapp.timedependent.interfaces.fault.output.writer]
filename = dislocation-fault.vtk

# Give basename for VTK output of state variables.
[pylithapp.timedependent.materials.elastic_upper.output]
cell_filter = pylith.meshio.CellFilterAvg
writer.filename = dislocation-statevars-upper.vtk

[pylithapp.timedependent.materials.elastic_lower.output]
cell_filter = pylith.meshio.CellFilterAvg
writer.filename = dislocation-statevars-lower.vtk

