[pylithapp]

# This is not a self-contained simulation configuration file. This
# file only specifies parameters specific to the boundary
# conditions. The general parameters are specificed in the pylithapp.cfg
# file which is read by default.
#
# To run the simulation:
# pylith step02.cfg

# ----------------------------------------------------------------------
# problem
# ----------------------------------------------------------------------
[pylithapp.timedependent]
# Set the BC to an array with 3 boundary conditions.
bc = x_pos,x_neg,z_neg

[pylithapp.timedependent.implicit]
# Set the output to an array of 2 output managers.
# We will output the solution over the domain and the ground surface.
output = [domain,subdomain]

# Set subdomain component to OutputSolnSubset (subset of domain).
output.subdomain = pylith.meshio.OutputSolnSubset

# ----------------------------------------------------------------------
# mesh_generator
# ----------------------------------------------------------------------
[pylithapp.mesh_generator]
# Refine mesh by a factor of 2
refiner = pylith.topology.RefineUniform

# ----------------------------------------------------------------------
# boundary conditions
# ----------------------------------------------------------------------
# We change spatial database for initial value from ZeroDispDB (which has
# a uniform spatial distribution) to SimpleDB (which uses a data file
# to specify a spatial variation).

# Set the parameters for Dirichlet boundary conditions applied on the
# +x and -x faces of the box. Note that we only use a subset of the
# boundary conditions provided in the 6 BC container.

# We fix the x and y degrees of freedom on the +x and -x faces, and
# fix the z degree of freedom on the bottom face.

# The label corresponds to the name of the pset in LaGriT.

[pylithapp.timedependent.bc.x_pos]
bc_dof = [0, 1]
label = boundary_xp
db_initial = spatialdata.spatialdb.SimpleDB
db_initial.label = Dirichlet BC on +x
db_initial.iohandler.filename = spatialdb/fixeddisp_shear.spatialdb

[pylithapp.timedependent.bc.x_neg]
bc_dof = [0, 1]
label = boundary_xm
db_initial = spatialdata.spatialdb.SimpleDB
db_initial.label = Dirichlet BC on -x
db_initial.iohandler.filename = spatialdb/fixeddisp_shear.spatialdb

[pylithapp.timedependent.bc.z_neg]
bc_dof = [2]
label = boundary_zm
db_initial = spatialdata.spatialdb.SimpleDB
db_initial.label = Dirichlet BC on -z
db_initial.iohandler.filename = spatialdb/fixeddisp_shear.spatialdb

# ----------------------------------------------------------------------
# output
# ----------------------------------------------------------------------
# Give basename for VTK domain output of solution over domain.
[pylithapp.problem.formulation.output.domain.writer]
filename = output/step02.vtk

# Give basename for VTK domain output of solution over ground surface.
[pylithapp.problem.formulation.output.subdomain]
label = boundary_zp
writer.filename = output/step02-groundsurf.vtk

# Give basename for VTK output of state variables.
[pylithapp.timedependent.materials.elastic.output]
cell_filter = pylith.meshio.CellFilterAvg
writer.filename = output/step02-elastic.vtk

[pylithapp.timedependent.materials.viscoelastic.output]
cell_filter = pylith.meshio.CellFilterAvg
writer.filename = output/step02-viscoelastic.vtk

# ----------------------------------------------------------------------
# PETSc
# ----------------------------------------------------------------------
[pylithapp.petsc]

# We use an algebraic multigrid preconditioner from Trilinos/ML. This
# method requires the 'aij' matrix type.
[pylithapp.timedependent.formulation]
matrix_type = aij

[pylithapp.petsc]
pc_type = ml
