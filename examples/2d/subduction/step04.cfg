[pylithapp]

# ----------------------------------------------------------------------
# PROBLEM DESCRIPTION
# ----------------------------------------------------------------------
#
# This simulation computes afterslip following the coseismic rupture
# (imposed in step01) with slip occurring where the fault tractions
# increase. We assume initial tractions on the fault surface that are
# 2.0 MPa below the friction threshold before adding in changes in
# fault tractions from coseismic slip.
#
# ----------------------------------------------------------------------
# RUNNING THE SIMULATON
# ----------------------------------------------------------------------
#
# This is not a self-contained simulation configuration file. This
# file specifies only the boundary conditions and earthquake
# parameters for the simulation. The general quasi-static and mesh
# parameters are specificed in the pylithapp.cfg file which PyLith
# reads by default.
#
# To run the simulation:
# pylith step04.cfg
#
# Output will be directed to directory output.

# ----------------------------------------------------------------------
# problem
# ----------------------------------------------------------------------
[pylithapp.timedependent.formulation.time_step]
total_time = 0.0*year

[pylithapp.timedependent]
# For this problem that uses friction we must switch to a nonlinear solver.
implicit.solver = pylith.problems.SolverNonlinear

# ----------------------------------------------------------------------
# boundary conditions
# ----------------------------------------------------------------------
[pylithapp.timedependent]
# Set bc to an array of 4 boundary conditions:
#   'boundary_east_crust'
#   'boundary_east_mantle'
#   'boundary_west'
#   'boundary_bottom_mantle'
bc = [boundary_east_crust,boundary_east_mantle,boundary_west,boundary_bottom_mantle]

# For all boundaries, we fix the displacement normal to the boundary
# (roller boundary condition) by retaining the default ZeroDispDB,
# which specifies a zero value.
#
# The label corresponds to the name of the nodeset in CUBIT.

# East boundary (crust)
[pylithapp.timedependent.bc.boundary_east_crust]
bc_dof = [0]
label = bndry_east_crust
db_initial.label = Dirichlet BC on east boundary (crust)

# East boundary (mantle)
[pylithapp.timedependent.bc.boundary_east_mantle]
bc_dof = [0]
label = bndry_east_mantle
db_initial.label = Dirichlet BC on east boundary (mantle)

# West boundary
[pylithapp.timedependent.bc.boundary_west]
bc_dof = [0]
label = bndry_west
db_initial.label = Dirichlet BC on west boundary

# Bottom boundary (mantle)
[pylithapp.timedependent.bc.boundary_bottom_mantle]
bc_dof = [1]
label = bndry_bot_mantle
db_initial.label = Dirichlet BC on bottom boundary (mantle)


# ----------------------------------------------------------------------
# faults
# ----------------------------------------------------------------------
[pylithapp.timedependent]
interfaces = [fault]

# Set the type of fault interface condition.
[pylithapp.timedependent.interfaces]
fault = pylith.faults.FaultCohesiveDyn

# Set the parameters for the fault interface condition.
[pylithapp.timedependent.interfaces.fault]
# The label corresponds to the name of the nodeset in CUBIT.
label = fault_slabtop

# We must define the quadrature information for fault cells.
# The fault cells are 1D (line).
quadrature.cell = pylith.feassemble.FIATSimplex
quadrature.cell.dimension = 1

# Specify zero tolerance for detecting slip. Must be larger than the
# KSP absolute tolerance.
zero_tolerance = 1.0e-9

# Friction model
friction = pylith.friction.StaticFriction
friction.label = Static friction

friction.db_properties = spatialdata.spatialdb.UniformDB
friction.db_properties.label = Static friction
friction.db_properties.values = [friction-coefficient, cohesion]
friction.db_properties.data = [0.6, 2.0*MPa]

# Initial tractions
traction_perturbation = pylith.faults.TractPerturbation

[pylithapp.timedependent.interfaces.fault.traction_perturbation]
db_initial = spatialdata.spatialdb.SimpleDB
db_initial.label = Initial fault tractions
db_initial.iohandler.filename = afterslip_tractions.spatialdb
db_initial.query_type = nearest

# ----------------------------------------------------------------------
# output
# ----------------------------------------------------------------------
# Domain
[pylithapp.problem.formulation.output.domain]
writer.filename = output/step04.h5

# Ground surface
[pylithapp.problem.formulation.output.subdomain]
writer.filename = output/step04-groundsurf.h5

# Fault
[pylithapp.problem.interfaces.fault.output]
writer = pylith.meshio.DataWriterHDF5SubSubMesh
writer.filename = output/step04-fault.h5

# Materials
[pylithapp.timedependent.materials.continent_crust.output]
writer.filename = output/step04-concrust.h5

[pylithapp.timedependent.materials.continent_mantle.output]
writer.filename = output/step04-conmantle.h5

[pylithapp.timedependent.materials.ocean_crust.output]
writer.filename = output/step04-oceancrust.h5

[pylithapp.timedependent.materials.ocean_mantle.output]
writer.filename = output/step04-oceanmantle.h5


# ----------------------------------------------------------------------
# PETSc
# ----------------------------------------------------------------------
# NOTE: There are additional settings specific to fault friction.
[pylithapp.petsc]

# Friction sensitivity solve used to compute the increment in slip
# associated with changes in the Lagrange multiplier imposed by the
# fault constitutive model.
friction_pc_type = asm
friction_sub_pc_factor_shift_type = nonzero
friction_ksp_max_it = 25
friction_ksp_gmres_restart = 30
# Uncomment to view details of friction sensitivity solve.
#friction_ksp_monitor = true
#friction_ksp_view = true
#friction_ksp_converged_reason = true

# Convergence parameters.  Tighten tolerances to be less than zero
# tolerance for slip. Increase number of iterations.
ksp_rtol = 1.0e-12
ksp_atol = 1.0e-13
ksp_max_it = 800

# End of file
