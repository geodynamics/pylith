[pylithapp]

# ----------------------------------------------------------------------
# PROBLEM DESCRIPTION
# ----------------------------------------------------------------------
#
# This simulation involves coseismic slip between the continental
# crust and top of the subducting oceanic crust. The slip also
# extends down into the top of the mantle below the continental
# crust.
#
# ----------------------------------------------------------------------
# RUNNING THE SIMULATON
# ----------------------------------------------------------------------
#
# This is not a self-contained simulation configuration file. This
# file specifies only the boundary conditions and earthquake
# parameters for the simulation. The general quasi-static and mesh
# parameters are specificed in the pylithapp.cfg file which PyLith
# reads by default.
#
# To run the simulation:
# pylith step01.cfg
#
# Output will be directed to directory output.

# ----------------------------------------------------------------------
# problem
# ----------------------------------------------------------------------
[pylithapp.timedependent.formulation.time_step]
total_time = 0.0*year
dt = 5.0*year

# ----------------------------------------------------------------------
# boundary conditions
# ----------------------------------------------------------------------
[pylithapp.timedependent]
# Set bc to an array of 5 boundary conditions:
#   'boundary_east_crust'
#   'boundary_east_mantle'
#   'boundary_west'
#   'boundary_bottom_slab'
#   'boundary_bottom_mantle'
bc = [boundary_east_crust,boundary_east_mantle,boundary_west,boundary_bottom_slab,boundary_bottom_mantle]

# For all boundaries, we fix the displacement normal to the boundary
# (roller boundary condition) by retaining the default ZeroDispDB,
# which specifies a zero value.
#
# The label corresponds to the name of the nodeset in CUBIT.

# East boundaries
[pylithapp.timedependent.bc.boundary_east_crust]
bc_dof = [0]
label = bndry_east_crust
db_initial.label = Dirichlet BC on east boundary (crust)

[pylithapp.timedependent.bc.boundary_east_mantle]
bc_dof = [0]
label = bndry_east_mantle
db_initial.label = Dirichlet BC on east boundary (mantle)

# West boundary
[pylithapp.timedependent.bc.boundary_west]
bc_dof = [0]
label = bndry_west
db_initial.label = Dirichlet BC on west boundary

# Bottom boundaries
[pylithapp.timedependent.bc.boundary_bottom_slab]
bc_dof = [1]
label = bndry_bot_slab
db_initial.label = Dirichlet BC on bottom boundary (slab)

[pylithapp.timedependent.bc.boundary_bottom_mantle]
bc_dof = [1]
label = bndry_bot_mantle
db_initial.label = Dirichlet BC on bottom boundary (mantle)

# ----------------------------------------------------------------------
# faults
# ----------------------------------------------------------------------
[pylithapp.timedependent]
interfaces = [fault]

# Set the type of fault interface condition.
[pylithapp.timedependent.interfaces]
fault = pylith.faults.FaultCohesiveKin

# Set the parameters for the fault interface condition.
[pylithapp.timedependent.interfaces.fault]
# The label corresponds to the name of the nodeset in CUBIT.
label = fault_coseismic

# We must define the quadrature information for fault cells.
# The fault cells are 1D (line).
quadrature.cell = pylith.feassemble.FIATSimplex
quadrature.cell.dimension = 1

# The slip time and final slip are defined in spatial databases.
[pylithapp.timedependent.interfaces.fault.eq_srcs.rupture.slip_function]
slip.iohandler.filename = fault_slip_coseismic.spatialdb
slip.query_type = linear
slip.label = Final slip

# Slip time is uniform, so use UniformDB for convenience
slip_time = spatialdata.spatialdb.UniformDB
slip_time.label = Slip time
slip_time.values = [slip-time]
slip_time.data = [0.0*year]

# ----------------------------------------------------------------------
# output
# ----------------------------------------------------------------------
# Domain
[pylithapp.problem.formulation.output.domain]
writer.filename = output/step01.h5

# Ground surface
[pylithapp.problem.formulation.output.subdomain]
writer.filename = output/step01-groundsurf.h5

# Fault
[pylithapp.problem.interfaces.fault.output]
writer = pylith.meshio.DataWriterHDF5SubSubMesh
writer.filename = output/step01-fault.h5

# Materials
[pylithapp.timedependent.materials.continent_crust.output]
writer.filename = output/step01-concrust.h5

[pylithapp.timedependent.materials.continent_mantle.output]
writer.filename = output/step01-conmantle.h5

[pylithapp.timedependent.materials.ocean_crust.output]
writer.filename = output/step01-oceancrust.h5

[pylithapp.timedependent.materials.ocean_mantle.output]
writer.filename = output/step01-oceanmantle.h5


# End of file
