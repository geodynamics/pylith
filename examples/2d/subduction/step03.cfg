[pylithapp]

# ----------------------------------------------------------------------
# PROBLEM DESCRIPTION
# ----------------------------------------------------------------------
#
# This simulation combines the interseismic deformation from Step 2
# with the coseismic slip from Step 1. The earthquake rupture occurs
# midway (150 years) through the 300 year simulation.
#
# ----------------------------------------------------------------------
# RUNNING THE SIMULATON
# ----------------------------------------------------------------------
#
# This is not a self-contained simulation configuration file. This
# file specifies only the boundary conditions and earthquake
# parameters for the simulation. The general quasi-static and mesh
# parameters are specificed in the pylithapp.cfg file which PyLith
# reads by default.
#
# To run the simulation:
# pylith step03.cfg
#
# Output will be directed to directory output.

# ----------------------------------------------------------------------
# problem
# ----------------------------------------------------------------------
[pylithapp.timedependent.formulation.time_step]
total_time = 300.0*year
dt = 5.0*year

# ----------------------------------------------------------------------
# boundary conditions
# ----------------------------------------------------------------------
[pylithapp.timedependent]
# Set bc to an array of 3 boundary conditions:
#   'boundary_east_mantle'
#   'boundary_west'
#   'boundary_bottom_mantle'
bc = [boundary_east_mantle,boundary_west,boundary_bottom_mantle]

# For all boundaries, we fix the displacement normal to the boundary
# (roller boundary condition) by retaining the default ZeroDispDB,
# which specifies a zero value.
#
# The label corresponds to the name of the nodeset in CUBIT.

# East boundary (mantle)
[pylithapp.timedependent.bc.boundary_east_mantle]
bc_dof = [0]
label = bndry_east_mantle
db_initial.label = Dirichlet BC on east boundary (mantle)

# West boundary
[pylithapp.timedependent.bc.boundary_west]
bc_dof = [0]
label = bndry_west
db_initial.label = Dirichlet BC on west boundary

# Bottom boundary (mantle)
[pylithapp.timedependent.bc.boundary_bottom_mantle]
bc_dof = [1]
label = bndry_bot_mantle
db_initial.label = Dirichlet BC on bottom boundary (mantle)

# ----------------------------------------------------------------------
# faults
# ----------------------------------------------------------------------
[pylithapp.timedependent]
interfaces = [fault_slabtop,fault_slabbot]

# Set the type of fault interface condition.
[pylithapp.timedependent.interfaces]
fault_slabtop = pylith.faults.FaultCohesiveKin
fault_slabbot = pylith.faults.FaultCohesiveKin

# Slab top --------------------
[pylithapp.timedependent.interfaces.fault_slabtop]
# The label corresponds to the name of the nodeset in CUBIT.
label = fault_slabtop
id = 100

# We must define the quadrature information for fault cells.
# The fault cells are 1D (line).
quadrature.cell = pylith.feassemble.FIATSimplex
quadrature.cell.dimension = 1

# Set earthquake sources to an array consisting of creep and 3 ruptures.
eq_srcs = [creep,rupture]
eq_srcs.creep.origin_time = 00.0*year
eq_srcs.rupture.origin_time = 150.0*year

# Coseismic rupture ---------
[pylithapp.timedependent.interfaces.fault_slabtop.eq_srcs.rupture.slip_function]
slip.iohandler.filename = fault_slip_coseismic.spatialdb
slip.query_type = linear
slip.label = Final slip

# Slip time (relative to origin time) is uniform, so use UniformDB for convenience
slip_time = spatialdata.spatialdb.UniformDB
slip_time.label = Slip time
slip_time.values = [slip-time]
slip_time.data = [0.0*year]

# Creep ---------
[pylithapp.timedependent.interfaces.fault_slabtop.eq_srcs.creep]
slip_function = pylith.faults.ConstRateSlipFn

# The slip time and final slip are defined in spatial databases.
[pylithapp.timedependent.interfaces.fault_slabtop.eq_srcs.creep.slip_function]
slip_rate.iohandler.filename = fault_creep_slabtop.spatialdb
slip_rate.query_type = linear
slip_rate.label = Final slip

# Slip time is uniform, so use UniformDB for convenience
slip_time = spatialdata.spatialdb.UniformDB
slip_time.label = Slip time
slip_time.values = [slip-time]
slip_time.data = [0.0*year]


# Slab bottom --------------------
[pylithapp.timedependent.interfaces.fault_slabbot]
# The label corresponds to the name of the nodeset in CUBIT.
label = fault_slabbot
id = 101

# We must define the quadrature information for fault cells.
# The fault cells are 1D (line).
quadrature.cell = pylith.feassemble.FIATSimplex
quadrature.cell.dimension = 1

# Switch to constant slip rate time function.
[pylithapp.timedependent.interfaces.fault_slabbot.eq_srcs.rupture]
slip_function = pylith.faults.ConstRateSlipFn

# The creep rate and slip time are uniform, so use UniformDB for simplicity.
[pylithapp.timedependent.interfaces.fault_slabbot.eq_srcs.rupture.slip_function]
slip_rate = spatialdata.spatialdb.UniformDB
slip_rate.label = Slip rate
slip_rate.values = [left-lateral-slip, fault-opening]
slip_rate.data = [8.0*cm/year, 0.0*cm/year]

# Slip time is uniform, so use UniformDB for convenience
slip_time = spatialdata.spatialdb.UniformDB
slip_time.label = Slip time
slip_time.values = [slip-time]
slip_time.data = [0.0*year]

# ----------------------------------------------------------------------
# output
# ----------------------------------------------------------------------
# Domain
[pylithapp.problem.formulation.output.domain]
writer.filename = output/step03.h5

# Ground surface
[pylithapp.problem.formulation.output.subdomain]
writer.filename = output/step03-groundsurf.h5

# Faults
[pylithapp.problem.interfaces.fault_slabtop.output]
writer = pylith.meshio.DataWriterHDF5
writer.filename = output/step03-fault-slabtop.h5

[pylithapp.problem.interfaces.fault_slabbot.output]
writer = pylith.meshio.DataWriterHDF5
writer.filename = output/step03-fault-slabbot.h5

# Materials
[pylithapp.timedependent.materials.continent_crust.output]
writer.filename = output/step03-concrust.h5

[pylithapp.timedependent.materials.continent_mantle.output]
writer.filename = output/step03-conmantle.h5

[pylithapp.timedependent.materials.ocean_crust.output]
writer.filename = output/step03-oceancrust.h5

[pylithapp.timedependent.materials.ocean_mantle.output]
writer.filename = output/step03-oceanmantle.h5


# End of file
