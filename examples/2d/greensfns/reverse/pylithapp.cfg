[pylithapp]

# This is not a self-contained simulation configuration file. This
# file only specifies the general parameters common to the simulations
# in this directory.

# ----------------------------------------------------------------------
# journal
# ----------------------------------------------------------------------
# Turn on some journals to show progress.
[pylithapp.journal.info]
timedependent = 1
greensfns = 1
implicit = 1
petsc = 1
solverlinear = 1
meshimporter = 1
meshiocubit = 1
elasticityimplicit = 1
faultcohesivekin = 1
faultcohesiveimpulses = 1

# ----------------------------------------------------------------------
# mesh_generator
# ----------------------------------------------------------------------
[pylithapp.mesh_generator]
# Change the default mesh reader to the CUBIT reader.
reader = pylith.meshio.MeshIOCubit
reader.filename = mesh_tri3.exo
# Reorder cells and vertices using Reverse Cuthill-McKee algorithm
reorder_mesh = True

[pylithapp.mesh_generator.reader]
coordsys.space_dim = 2

# ----------------------------------------------------------------------
# problem
# ----------------------------------------------------------------------
[pylithapp.problem]
dimension = 2

normalizer.length_scale = 1.0*km
# Use relaxation time of 1.0*s so timesteps in output are in seconds
normalizer.relaxation_time = 1.0*s

[pylithapp.problem.formulation.time_step]
# Define the total time for the simulation and the time step size.
total_time = 0.0*s
dt = 1.0*year

# ----------------------------------------------------------------------
# materials
# ----------------------------------------------------------------------
# Set array of materials to one material
[pylithapp.problem]
materials = [elastic]
materials.elastic = pylith.materials.ElasticPlaneStrain

[pylithapp.problem.materials.elastic]
label = Elastic material
# The id corresponds to the block id in CUBIT.
id = 1
db_properties.iohandler.filename = mat_elastic.spatialdb
db_properties.label = Elastic properties

# We must define the quadrature information for the material.
# The fault cells are 2D (triangles).
quadrature.cell = pylith.feassemble.FIATSimplex
quadrature.cell.dimension = 2

# ----------------------------------------------------------------------
# boundary conditions
# ----------------------------------------------------------------------
# Create array of BCs, one for each side of the domain
[pylithapp.problem]
bc = [x_neg,x_pos,y_neg]

# The label corresponds to the name of the nodeset in CUBIT.

[pylithapp.problem.bc.x_pos]
label = face_xpos
bc_dof = [0]
db_initial = pylith.bc.ZeroDispDB
db_initial.label = Dirichlet BC on +x

[pylithapp.problem.bc.x_neg]
label = face_xneg
bc_dof = [0]
db_initial = pylith.bc.ZeroDispDB
db_initial.label = Dirichlet BC on -x

[pylithapp.problem.bc.y_neg]
label = face_yneg
bc_dof = [1]
db_initial = pylith.bc.ZeroDispDB
db_initial.label = Dirichlet BC on -y

# ----------------------------------------------------------------------
# faults
# ----------------------------------------------------------------------
# Create array of faults with one fault.
[pylithapp.problem]
interfaces = [fault]

[pylithapp.problem.interfaces.fault]
id = 100
# The label corresponds to the name of the nodeset in CUBIT.
label = fault

# We must define the quadrature information for fault cells.
# The fault cells are 1D (line).
quadrature.cell = pylith.feassemble.FIATSimplex
quadrature.cell.dimension = 1

# ----------------------------------------------------------------------
# output
# ----------------------------------------------------------------------
[pylithapp.problem.formulation]
output = [domain,groundsurf,points]
output.points = pylith.meshio.OutputSolnPoints
output.groundsurf = pylith.meshio.OutputSolnSubset

[pylithapp.problem.formulation.output.domain]
writer = pylith.meshio.DataWriterHDF5Mesh

[pylithapp.problem.formulation.output.groundsurf]
label = face_ypos
writer = pylith.meshio.DataWriterHDF5SubMesh

[pylithapp.problem.formulation.output.points]
coordsys.space_dim = 2
coordsys.units = km
reader.filename = output_points.txt

writer = pylith.meshio.DataWriterHDF5Mesh

[pylithapp.problem.interfaces.fault.output]
writer = pylith.meshio.DataWriterHDF5SubSubMesh

[pylithapp.problem.materials.elastic.output]
cell_info_fields = []
cell_data_fields = []
writer = pylith.meshio.DataWriterHDF5Mesh

# ----------------------------------------------------------------------
# PETSc
# ----------------------------------------------------------------------
[pylithapp.petsc]

ksp_type = gmres
ksp_gmres_restart = 100
pc_type = asm
sub_pc_factor_shift_type = nonzero

ksp_rtol = 1.0e-8
ksp_atol = 1.0e-10
ksp_max_it = 500

ksp_monitor = true
ksp_view = true
ksp_converged_reason = true

log_summary = true

# End of file
