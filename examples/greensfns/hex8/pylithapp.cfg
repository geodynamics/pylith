[pylithapp]

# ----------------------------------------------------------------------
# journal
# ----------------------------------------------------------------------
# Turn on some journals to show progress.
[pylithapp.journal.info]
timedependent = 1
implicit = 1
petsc = 1
solverlinear = 1
meshiocubit = 1
implicitelasticity = 1
faultcohesivekin = 1
fiatlagrange = 1
#quadrature3d = 1

[pylithapp.journal.debug]
pylithapp = 1
problem = 1
implicit = 1

# ----------------------------------------------------------------------
# mesh_generator
# ----------------------------------------------------------------------
[pylithapp.mesh_generator]
#debug = 1   ; uncomment to get very verbose mesh information

# Change the default mesh importer to the CUBIT importer.
reader = pylith.meshio.MeshIOCubit

[pylithapp.mesh_generator.reader]
# Set filename of mesh to import.
filename = box_hex8_1000m.exo

# ----------------------------------------------------------------------
# problem
# ----------------------------------------------------------------------
[pylithapp.timedependent]
#normalizer = spatialdata.units.NondimElasticQuasistatic
# Set bc to an array of 3 boundary conditions: 'x_pos','x_neg', and 'z_neg'.
bc = [x_pos,x_neg,z_neg]

# Set interfaces to an array of 1 fault: 'fault'.
interfaces = [fault]

[pylithapp.timedependent.implicit]
# Set the output to an array of 2 output managers.
# We will output the solution over the domain and the ground surface.
output = [domain,subdomain]

# Set subdomain component to OutputSolnSubset (subset of domain).
output.subdomain = pylith.meshio.OutputSolnSubset

[pylithapp.timedependent.formulation.time_step]
# Define the total time for the simulation and the default time step size.
total_time = 0.0*s ; total time of simulation

# ----------------------------------------------------------------------
# boundary conditions
# ----------------------------------------------------------------------
# We use the default ZeroDispDB for all faces
[pylithapp.timedependent.bc.x_pos]
bc_dof = [0, 1]
label = face_xpos
db_initial.label = Dirichlet BC on +x

[pylithapp.timedependent.bc.x_neg]
bc_dof = [0, 1]
label = face_xneg
db_initial.label = Dirichlet BC on -x

[pylithapp.timedependent.bc.z_neg]
bc_dof = [2]
label = face_zneg
db_initial.label = Dirichlet BC on -z

# ----------------------------------------------------------------------
# materials
# ----------------------------------------------------------------------
[pylithapp.timedependent]

# Set materials to an array of 2 materials:
#   'elastic' and 'viscoelastic'
materials = [elastic_upper,elastic_lower]

[pylithapp.timedependent.materials.elastic_upper]
label = Upper elastic material
id = 1
db_properties.label = Properties for upper crust
db_properties.iohandler.filename = mat_elastic.spatialdb
quadrature.cell = pylith.feassemble.FIATLagrange
quadrature.cell.dimension = 3

[pylithapp.timedependent.materials.elastic_lower]
label = Lower elastic material
id = 2
db_properties.label = Properties for lower crust
db_properties.iohandler.filename = mat_elastic.spatialdb
quadrature.cell = pylith.feassemble.FIATLagrange
quadrature.cell.dimension = 3

# ----------------------------------------------------------------------
# faults
# ----------------------------------------------------------------------
[pylithapp.timedependent.interfaces]
fault = pylith.faults.FaultCohesiveKin

# Set the parameters for the fault interface conditions.
[pylithapp.timedependent.interfaces.fault]
label = fault
quadrature.cell = pylith.feassemble.FIATLagrange
quadrature.cell.dimension = 2

# ----------------------------------------------------------------------
# PETSc
# ----------------------------------------------------------------------
# Set the solver options.

[pylithapp.petsc]
# Preconditioner settings.
pc_type = asm
sub_pc_factor_shift_type = nonzero

# Convergence parameters.
ksp_rtol = 1.0e-8
ksp_atol = 1.0e-12
ksp_max_it = 100
ksp_gmres_restart = 50

# Linear solver monitoring options.
ksp_monitor = true
ksp_view = true
ksp_converged_reason = true

# PETSc log summary.
log_summary = true
# start_in_debugger = true
