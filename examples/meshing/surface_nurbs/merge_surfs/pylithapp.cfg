[pylithapp]
# This is not a self-contained simulation configuration file. This
# file only specifies the general parameters common to the simulations
# in this directory.

# dump_parameters.filename = output/SIMULATION-parameters.json
# problem.progress_monitor.filename = output/SIMULATION-progress.txt

# ----------------------------------------------------------------------
# journal
# ----------------------------------------------------------------------
[pylithapp.journal.info]
timedependent = 1
solution = 1
meshio = 1
isotropiclinearelasticity = 1
dirichlettimedependent = 1
faultcohesivekin = 1

[pylithapp]
# You can view this file using the pylith_parameters application or
# online at https://geodynamics.github.io/pylith_parameters/.
dump_parameters.filename = output/faultslip-parameters.json
problem.progress_monitor.filename = output/faultslip-progress.txt

# ----------------------------------------------------------------------
# mesh_generator
# ----------------------------------------------------------------------
[pylithapp.mesh_generator]
reader = pylith.meshio.MeshIOCubit
reader.filename = mesh.exo

# ----------------------------------------------------------------------
# solution
# ----------------------------------------------------------------------
[pylithapp.problem]
solver = nonlinear ; Use nonlinear solver to ensure residual and Jacobian are consistent.

solution = pylith.problems.SolnDispLagrange

[pylithapp.problem.solution.subfields]
displacement.basis_order = 1
displacement.quadrature_order = 1

lagrange_fault.basis_order = 1
lagrange_fault.quadrature_order = 1

[pylithapp.problem]
solution_observers = [domain]

[pylithapp.problem.solution_observers.domain]
data_fields = [displacement]
writer.filename = output/faultslip-domain.h5

# ----------------------------------------------------------------------
# materials
# ----------------------------------------------------------------------
# Create an array of three materials, matching the number of blocks we
# created in CUBIT/Trelis.
[pylithapp.problem]
materials = [elastic]

# We use the default material (elasticity) and rheology
# (isotropic, linearly elastic).
# We define properties and most basis and quadrature orders here, since they are the same for all
# examples.

[pylithapp.problem.materials.elastic]
label = Elastic material
id = 1
db_auxiliary_field = spatialdata.spatialdb.UniformDB
db_auxiliary_field.label = Elastic properties
db_auxiliary_field.values = [density, vs, vp]
db_auxiliary_field.data = [2500*kg/m**3, 3.0*km/s, 5.2915026*km/s]

observers.observer.writer.filename = output/faultslip-elastic.h5
observers.observer.data_fields = [cauchy_stress, cauchy_strain, displacement]

auxiliary_subfields.density.basis_order = 0
auxiliary_subfields.density.quadrature_order = 1

derived_subfields.cauchy_strain.basis_order = 1
derived_subfields.cauchy_strain.quadrature_order = 1

derived_subfields.cauchy_stress.basis_order = 1
derived_subfields.cauchy_stress.quadrature_order = 1

[pylithapp.problem.materials.elastic.bulk_rheology]
auxiliary_subfields.bulk_modulus.basis_order = 0
auxiliary_subfields.bulk_modulus.quadrature_order = 1

auxiliary_subfields.shear_modulus.basis_order = 0
auxiliary_subfields.shear_modulus.quadrature_order = 1

# ----------------------------------------------------------------------
# fault
# ----------------------------------------------------------------------
[pylithapp.problem]
interfaces = [fault]

[pylithapp.problem.interfaces.fault]
id = 10
label = fault
edge = fault_edge

observers.observer.writer.filename = output/faultslip-fault.h5
observers.observer.data_fields = [slip]

[pylithapp.problem.interfaces.fault.eq_ruptures.rupture]
db_auxiliary_field = spatialdata.spatialdb.UniformDB
db_auxiliary_field.label = Fault rupture auxiliary field spatial database
db_auxiliary_field.values = [initiation_time, final_slip_left_lateral, final_slip_reverse, final_slip_opening]
db_auxiliary_field.data = [0.0*s, -2.0*m, 0.0*m, 0.0*m]

# ----------------------------------------------------------------------
# boundary conditions
# ----------------------------------------------------------------------
[pylithapp.problem]
bc = [boundary]
bc.boundary = pylith.bc.DirichletTimeDependent

[pylithapp.problem.bc.boundary]
constrained_dof = [0, 1, 2]
label = domain_boundary
db_auxiliary_field = pylith.bc.ZeroDB
db_auxiliary_field.label = Dirichlet BC on lateral and bottom boundaries

observers.observer.writer.filename = output/faultslip-bc.h5
observers.observer.data_fields = [displacement]

auxiliary_subfields.initial_amplitude.basis_order = 0
auxiliary_subfields.initial_amplitude.quadrature_order = 1

# ----------------------------------------------------------------------
# PETSc
# ----------------------------------------------------------------------
[pylithapp.petsc]
ts_type = beuler

pc_type = fieldsplit
pc_use_amat = true
pc_fieldsplit_type = schur
pc_fieldsplit_schur_factorization_type = full
pc_fieldsplit_dm_splits = true
fieldsplit_displacement_ksp_type = preonly
fieldsplit_displacement_pc_type = lu
fieldsplit_lagrange_multiplier_fault_pc_type = jacobi
fieldsplit_lagrange_multiplier_fault_ksp_type = gmres
fieldsplit_lagrange_multiplier_fault_ksp_rtol = 1.0e-11
fieldsplit_lagrange_multiplier_fault_ksp_converged_reason = true

ksp_rtol = 1.0e-8
ksp_atol = 1.0e-12
ksp_max_it = 1000
ksp_gmres_restart = 50
# ksp_error_if_not_converged = true

snes_rtol = 1.0e-10
snes_atol = 1.0e-10
snes_max_it = 4
# snes_error_if_not_converged = true

# Monitors for debugging
ts_monitor = true
ksp_monitor = true
ksp_converged_reason = true
snes_monitor = true
snes_converged_reason = true
snes_linesearch_monitor = true
#snes_fd = true
#dm_plex_print_fem = 2
#dm_plex_print_l2 = 2

ts_error_if_step_fails = true

#ksp_view = true
#snes_view = true

# End of file
