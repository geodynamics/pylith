# This is not a self-contained simulation configuration file. This
# file only specifies the general parameters common to the simulations
# in this directory.

[pylithapp.metadata]
# We specify metadata common to all of the simulations in this directory. 
keywords = [example, 2D, box]
features = [
    Quadrilateral cells,
    pylith.meshio.MeshIOAscii,
    pylith.problems.TimeDependent,
    pylith.materials.Elasticity,
    pylith.materials.IsotropicLinearElasticity,
    spatialdata.spatialdb.UniformDB,
    pylith.meshio.DataWriterHDF5
    ]

# ----------------------------------------------------------------------
# journal
# ----------------------------------------------------------------------
# Turn on some journals to show progress during the simulation.
# This includes the bounding box of the domain (from the MeshIOAscii reader),
# the scales for nondimensionalization (from Problem), and default solver options
# (from PetscDefaults).
[pylithapp.journal.info]
pylithapp = 1
timedependent = 1
solution = 1
meshioascii = 1
petscoptions = 1

# ----------------------------------------------------------------------
# mesh_generator
# ----------------------------------------------------------------------
[pylithapp.mesh_generator]
# Set the reader to match the type of mesh file.
reader = pylith.meshio.MeshIOAscii

# Set the filename and the dimension of the Cartesian coordinate system.
reader.filename = quad.mesh
reader.coordsys.space_dim = 2

# ----------------------------------------------------------------------
# materials
# ----------------------------------------------------------------------
[pylithapp.problem]
# Create an array of one material
materials = [elastic]

# We use the default material (elasticity) and rheology
# (isotropic, linearly elastic).

[pylithapp.problem.materials.elastic]
# label_value must match the values in the mesh material-ids.
description = Elastic material
label_value = 0

# We will use uniform material properties, so we use the UniformDB
# spatial database.
db_auxiliary_field = spatialdata.spatialdb.UniformDB
db_auxiliary_field.description = Elastic properties
db_auxiliary_field.values = [density, vs, vp]
db_auxiliary_field.data = [2500*kg/m**3, 3.0*km/s, 5.2915026*km/s]

# Set the discretization of the material auxiliary fields (properties).
# We have uniform material properties, so we can use a basis order of 0.
auxiliary_subfields.density.basis_order = 0
bulk_rheology.auxiliary_subfields.bulk_modulus.basis_order = 0
bulk_rheology.auxiliary_subfields.shear_modulus.basis_order = 0


# End of file
