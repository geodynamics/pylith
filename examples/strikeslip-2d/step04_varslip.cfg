[pylithapp.metadata]
#  y
#  ^
#  |
#   --> x
#
#
#             -----------
#             |    |    |
# Ux, Uy= 0   |    |    | Ux, Uy= 0
#             |    |    |
#             |    |    |
#             -----------
#
# Dirichlet boundary conditions
#
# boundary_xneg: Ux = Uy = 0
# boundary_xpos: Ux = Uy = 0
#
# Fault has spatially variable slip from -20 km <= y <= +20 km. This simulation
# generates fake GPS observations used the slip inversion in Step 5.
base = [pylithapp.cfg]
description = Coseismic prescribed slip with zero displacement Dirichlet boundary conditions.
authors = [Brad Aagaard]
keywords = [prescribed slip]
arguments = [step04_varslip.cfg]
version = 1.0.0
pylith_version = [>=3.0, <4.0]

features = [
    Static simulation
    ]

# ----------------------------------------------------------------------
# Monitoring and parameter viewing.
# ----------------------------------------------------------------------
[pylithapp]
# You can view this file using the pylith_parameters application or
# online at https://geodynamics.github.io/pylith_parameters/.
dump_parameters.filename = output/step04_varslip-parameters.json
problem.progress_monitor.filename = output/step04_varslip-progress.txt

# Set the name of the problem that will be used to construct the
# output filenames. The default directory for output is 'output'.
problem.defaults.name = step04_varslip

# ----------------------------------------------------------------------
# problem
# ----------------------------------------------------------------------
[pylithapp.problem]
# Set the default quadrature order for all subfields.
#
# IMPORTANT: The quadrature order *must* the same for all solution and
# auxiliary subfields. PyLith will verify that this requirement is met.
# This requirement may be relaxed in the future.
defaults.quadrature_order = 2

[pylithapp.problem.solution.subfields]
displacement.basis_order = 2
lagrange_fault.basis_order = 2

[pylithapp.problem]
# We add output at our fake GPS stations that we will use a fake observations.
solution_observers = [domain, top_boundary, bot_boundary, gps_stations]
solution_observers.gps_stations = pylith.meshio.OutputSolnPoints

[pylithapp.problem.solution_observers.gps_stations]
# The label is combined with the simulation name to provide a default name for output files.
label = gps_stations
reader.filename = gps_stations.txt
reader.coordsys.space_dim = 2


# ----------------------------------------------------------------------
# materials
# ----------------------------------------------------------------------
[pylithapp.problem.materials.elastic_xneg]
# We discretize the displacement field with a basis order of 2
# so the stress and strain computed from the displacement field
# will have an accuracy of one order lower. Consequently, we use
# a basis order of 1.
derived_subfields.cauchy_strain.basis_order = 1
derived_subfields.cauchy_stress.basis_order = 1

[pylithapp.problem.materials.elastic_xpos]
derived_subfields.cauchy_strain.basis_order = 1
derived_subfields.cauchy_stress.basis_order = 1


# ----------------------------------------------------------------------
# fault
# ----------------------------------------------------------------------
# Specify slip on the fault using a `SimpleDB` spatial database.
[pylithapp.problem.interfaces.fault.eq_ruptures.rupture]
db_auxiliary_field = spatialdata.spatialdb.SimpleDB
db_auxiliary_field.description = Fault rupture auxiliary field spatial database
db_auxiliary_field.iohandler.filename = slip_variable.spatialdb
db_auxiliary_field.query_type = linear


# End of file
