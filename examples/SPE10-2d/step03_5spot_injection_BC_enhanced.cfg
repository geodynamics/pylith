[pylithapp.metadata]
base = [pylithapp.cfg, mat_poroelastic.cfg]
description = Steady state SPE10 test.
keywords = [SPE10]
arguments = [step03_5spot_injection_BC_enhanced.cfg]
version = 1.0.0

features = [
    Static simulation,
    Multigrid preconditioner
    ]

# ----------------------------------------------------------------------
# Output of parameters used and simulation progress.
# ----------------------------------------------------------------------
[pylithapp]
dump_parameters.filename = output/step03_5spot_injection_BC_enhanced-parameters.json
problem.progress_monitor.filename = output/step03_5spot_injection_BC_enhanced-progress.txt

# Set the name of the problem that will be used to construct the
# output filenames. The default directory for output is 'output'.
problem.defaults.name = step03_5spot_injection_BC_enhanced

# ----------------------------------------------------------------------
# mesh_generator
# ----------------------------------------------------------------------
[pylithapp.mesh_generator]
# Change the default mesh reader to the CUBIT reader.
reader = pylith.meshio.MeshIOCubit
reader.filename = mesh_enhanced_quad.exo
reader.coordsys.space_dim = 2

# ----------------------------------------------------------------------
# problem
# ----------------------------------------------------------------------
[pylithapp.problem]
# Define the total time for the simulation and initial time step size.
initial_dt = 10.0*day
start_time = 0.0*day
end_time = 10000.0*day

# Use nonlinear solver to ensure residual and Jacobian are consistent.
solver = nonlinear 

# IMPORTANT: The quadrature order *must* the same for all solution and
# auxiliary subfields. PyLith will verify that this requirement is met.
# This requirement may be relaxed in the future.
defaults.quadrature_order = 1

normalizer = spatialdata.units.NondimElasticQuasistatic
normalizer.length_scale = 1.0*m
normalizer.relaxation_time = 1000.0*s
normalizer.shear_modulus = 100000.0*m**-1*kg*s**-2

# Set the discretization of the solution subfields.

solution = pylith.problems.SolnDispPresTracStrain

[pylithapp.problem.solution.subfields]
displacement.basis_order = 2
pressure.basis_order = 1
trace_strain.basis_order = 1

# ----------------------------------------------------------------------
# boundary conditions
# ----------------------------------------------------------------------
[pylithapp.problem]
# Dirichlet Case
bc = [boundary_xneg,boundary_xpos,boundary_yneg,boundary_ypos]

bc.boundary_xneg = pylith.bc.DirichletTimeDependent
bc.boundary_xpos = pylith.bc.DirichletTimeDependent
bc.boundary_yneg = pylith.bc.DirichletTimeDependent
bc.boundary_ypos = pylith.bc.DirichletTimeDependent

# -x face
[pylithapp.problem.bc.boundary_xneg]
constrained_dof = [0]
label = boundary_xneg
field = displacement
db_auxiliary_field = pylith.bc.ZeroDB
db_auxiliary_field.label = Dirichlet BC on -x boundary

# +x face
[pylithapp.problem.bc.boundary_xpos]
constrained_dof = [0]
label = boundary_xpos
field = displacement
db_auxiliary_field = pylith.bc.ZeroDB
db_auxiliary_field.label = Dirichlet BC on +x boundary

# -y face
[pylithapp.problem.bc.boundary_yneg]
constrained_dof = [1]
label = boundary_yneg
field = displacement
db_auxiliary_field = pylith.bc.ZeroDB
db_auxiliary_field.label = Dirichlet BC on -y boundary

# +y face
[pylithapp.problem.bc.boundary_ypos]
constrained_dof = [1]
label = boundary_ypos
field = displacement
db_auxiliary_field = pylith.bc.ZeroDB
db_auxiliary_field.label = Dirichlet BC on +y boundary

# ----------------------------------------------------------------------
# sources
# ----------------------------------------------------------------------

[pylithapp.problem]
sources = [injector, producers]

sources.injector = pylith.sources.WellboreSource
sources.producers = pylith.sources.WellboreSource

[pylithapp.problem.sources.injector]
label = Poroelastic Injector
id = 2
reader.filename = injection_2d.txt
reader.coordsys = spatialdata.geocoords.CSCart
reader.coordsys.space_dim = 2

db_auxiliary_field = spatialdata.spatialdb.UniformDB
db_auxiliary_field.label = source properties
db_auxiliary_field.values = [fluid_density, fluid_viscosity, isotropic_permeability, wellbore_radius, wellbore_length, wellbore_pressure, wellbore_character, element_x, element_y]
db_auxiliary_field.data   = [1000*kg/m**3,         1.0*Pa*s,           1.5e-13*m**2,          0.05*m,          0.25*m,     68.947573*MPa,                  1,     0.5*m,     0.5*m]

[pylithapp.problem.sources.producers]
label = Poroelastic Producers
id = 2
reader.filename = extraction_2d.txt
reader.coordsys = spatialdata.geocoords.CSCart
reader.coordsys.space_dim = 2

db_auxiliary_field = spatialdata.spatialdb.UniformDB
db_auxiliary_field.label = source properties
db_auxiliary_field.values = [fluid_density, fluid_viscosity, isotropic_permeability, wellbore_radius, wellbore_length, wellbore_pressure, wellbore_character, element_x, element_y]
db_auxiliary_field.data   = [1000*kg/m**3,         1.0*Pa*s,           1.5e-13*m**2,          0.05*m,          0.25*m,     27.579029*MPa,                 -1,     0.5*m,     0.5*m]

# ----------------------------------------------------------------------
# initial conditions
# ----------------------------------------------------------------------
[pylithapp.problem]
ic = [domain]
ic.domain = pylith.problems.InitialConditionDomain

[pylithapp.problem.ic.domain]
db = spatialdata.spatialdb.UniformDB
db.label = Initial conditions over domain
db.values = [displacement_x, displacement_y,pressure]
db.data = [0.0*m, 0.0*m, 41.368544*MPa]

# End of file
