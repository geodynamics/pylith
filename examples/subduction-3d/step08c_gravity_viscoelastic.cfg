[pylithapp.metadata]
# This example demonstrates the difficulty in finding a steady-state
# solution for the stress state arising from gravitational body forces
# with lateral density variations and viscoelastic materials. Compared
# with Step 8b, this is a time-dependent simulation using viscoelastic
# materials.
#
# Materials
#   The 'wedge' and 'crust' blocks use the the linear, isotropic
#   elastic material model, whereas the 'slab' and 'mantle' use the
#   linear Maxwell viscoelastic material model (mat_viscoelastic.cfg).
#
# Boundary Conditions
#   Roller boundary conditions (pylithapp.cfg).
#
# BEFORE RUNNING THE SIMULATION, run Step 8b and then run the Python
# script that generates the spatial database with the initial stresses using the
# output from Step 8b if you have not already done so.
#
# ./utils/generate_initial_stress.py
base = [pylithapp.cfg, mat_viscoelastic.cfg]
description = Gravitational body forces with viscoelasticity, reference state, and small strain formulation.
keywords = [gravitational body forces, reference state, small strain formulation]
arguments = [step08c_gravity_viscoelastic.cfg, mat_viscoelastic.cfg]
version = 1.0.0
pylith_version = [>3.0]

features = [
    Quasi-static simulation,
    spatialdata.spatialdb.GravityField
    ]

# ----------------------------------------------------------------------
# Output of parameters used and simulation progress.
# ----------------------------------------------------------------------
[pylithapp]
dump_parameters.filename = output/step08c_gravity_viscoelastic-parameters.json
problem.progress_monitor.filename = output/step08c_gravity_viscoelastic-progress.txt

# ----------------------------------------------------------------------
# problem
# ----------------------------------------------------------------------
[pylithapp.timedependent]
# Set gravity field (default is None).
gravity_field = spatialdata.spatialdb.GravityField

[pylithapp.problem.formulation.time_step]
# Define the total time for the simulation and the time step size.
total_time = 100.0*year
dt = 10.0*year

# ----------------------------------------------------------------------
# materials
# ----------------------------------------------------------------------
# We specify initial stresses for each material via a SimpleDB.
# Since there is a point in the database corresponding to each cell
# center, we keep the default query_type of 'nearest'.
[pylithapp.problem.materials.slab]
db_initial_stress = spatialdata.spatialdb.SimpleDB
db_initial_stress.description = Initial stress in the slab
db_initial_stress.iohandler.filename = mat_initial_stress_grav-slab.spatialdb

[pylithapp.problem.materials.wedge]
db_initial_stress = spatialdata.spatialdb.SimpleDB
db_initial_stress.description = Initial stress in the wedge
db_initial_stress.iohandler.filename = mat_initial_stress_grav-wedge.spatialdb

[pylithapp.problem.materials.mantle]
db_initial_stress = spatialdata.spatialdb.SimpleDB
db_initial_stress.description = Initial stress in the mantle
db_initial_stress.iohandler.filename = mat_initial_stress_grav-mantle.spatialdb

[pylithapp.problem.materials.crust]
db_initial_stress = spatialdata.spatialdb.SimpleDB
db_initial_stress.description = Initial stress in the crust
db_initial_stress.iohandler.filename = mat_initial_stress_grav-crust.spatialdb


# End of file
