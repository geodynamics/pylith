[pylithapp.metadata]
# Materials
#   All four blocks use the linear, isotropic elastic material model
#   (mat_elastic.cfg).
#
# Boundary Conditions
#   Roller boundary conditions (pylithapp.cfg).
#
# Fault
#   Uniform oblique slip with a duration of one month on the slab
#   fault rupture patch.
#
# Output
#   We output the displacements for the slip impulses on the ground
#   surface ang at the fake cGPS locations defined by gps_stations.txt.
#
# BEFORE RUNNING THE SIMULATION, run the Python script that generates
# the spatial database with the final slip distribution and the
# temporal database with the slip time function.
#
#   ./utils/generate_slowslip.py
base = [pylithapp.cfg, mat_elastic.cfg]
description = Slow slip on a patch in the middle of the top of the slab.
keywords = [prescribed slip, slow slip, generate spatial database]
arguments = [step06_slowslip.cfg, mat_elastic.cfg]
version = 2.0.0
pylith_version = [>3.0]

features = [
    Quasi-static simulation,
    pylith.meshio.OutputSolnPoints,
    pylith.faults.KinSrcTimeHistory,
    spatialdata.geocoords.CSGeo,
    spatialdata.spatialdb.UniformDB,
    spatialdata.spatialdb.SimpleGridDB,
    spatialdata.spatialdb.SimpleGridAscii
    ]

# ----------------------------------------------------------------------
# Output of parameters used and simulation progress.
# ----------------------------------------------------------------------
[pylithapp]
dump_parameters.filename = output/step06_slowslip-parameters.json
problem.progress_monitor.filename = output/step06_slowslip-progress.txt

# Set the name of the problem that will be used to construct the
# output filenames. The default directory for output is 'output'.
problem.defaults.name = step06_slowslip

# ----------------------------------------------------------------------
# problem
# ----------------------------------------------------------------------
[pylithapp.problem]
# Define the total time for the simulation, the start time, and the
# initial time step size.
initial_dt = 2.0*day
start_time = -2.0*day
end_time = 30.0*year

# ----------------------------------------------------------------------
# solution
# ----------------------------------------------------------------------
[pylithapp.problem]
# Set the discretization for each of the solution subfields.
#
# For a quastistatic simulation with a fault, we have two solution fields:
# (1) displacement and (2) Lagrange multiplier. We use a predefined containter
# to create a solution field with these two subfields.
# solution = pylith.problems.SolnDispLagrange
solution = pylith.problems.SolnDispLagrange

[pylithapp.problem.solution.subfields]
displacement.basis_order = 1
lagrange_fault.basis_order = 1

[pylithapp.problem]
solution_observers = [domain, groundsurf, gps_stations]
solution_observers.groundsurf = pylith.meshio.OutputSolnBoundary
solution_observers.gps_stations = pylith.meshio.OutputSolnPoints

[pylithapp.problem.solution_observers.domain]
trigger.num_skip = 1

[pylithapp.problem.solution_observers.groundsurf]
label = boundary_zpos
trigger.num_skip = 1

[pylithapp.problem.solution_observers.gps_stations]
# The label is combined with the simulation name to provide a default name for output files.
label = gps_stations
reader.filename = gps_stations.txt

# Specify coordinate system used in GPS station file.
reader.coordsys = spatialdata.geocoords.CSGeo
reader.coordsys.space_dim = 3
coordsys.crs_string = EPSG:4326


# ----------------------------------------------------------------------
# faults
# ----------------------------------------------------------------------
[pylithapp.problem]
# We prescribe slip on the slab fault patch.
interfaces = [fault_slabtop]

[pylithapp.problem.interfaces.fault_slabtop]
label = fault_slabtop_patch
edge = fault_slabtop_patch_edge

observers.observer.data_fields = [slip]

# We use a time history slip function.
[pylithapp.problem.interfaces.fault_slabtop.eq_ruptures]
rupture = pylith.faults.KinSrcTimeHistory

[pylithapp.problem.interfaces.fault_slabtop.eq_ruptures.rupture]
db_auxiliary_field = spatialdata.spatialdb.SimpleGridDB
db_auxiliary_field.description = Rupture parameters for slow slip earthquake
db_auxiliary_field.filename = fault_slabtop_slowslip.spatialdb
db_auxiliary_field.query_type = linear

# We use a temporal database to provide the slip time history.
time_history.description = Time history of slip
time_history.filename = fault_slabtop_slowslip.timedb


# ----------------------------------------------------------------------
# petsc
# ----------------------------------------------------------------------
# Use PETSc parallel solver options for better performance
[pylithapp.problem.petsc_defaults]
parallel = True


# End of file
