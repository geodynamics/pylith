# -*- Python -*-

# The settings in this file (pylithapp.cfg) will be read automatically
# by pylith, as long as the file is placed in the run directory.

# The settings in this file will override any settings in:
# PREFIX/etc/pylithapp.cfg
# $HOME/.pyre/pylithapp/pylithapp.cfg

# The settings in this file will be overridden by any .cfg file given
# on the command line or by any command line settings.

[pylithapp]

# ----------------------------------------------------------------------
# journal
# ----------------------------------------------------------------------
# The settings below turn on journal info for the specified components.
# If you want less output to stdout, you can turn these off.
[pylithapp.journal.info]
timedependent = 1
implicit = 1
petsc = 1
solverlinear = 1
meshioascii = 1
elasticityimplicit = 1
elasticisotropic3d = 1
fiatsimplex = 1

# ----------------------------------------------------------------------
# mesh_generator
# ----------------------------------------------------------------------
# The settings below control the mesh generation (importing mesh info).
# Turn on debugging output for mesh generation.
[pylithapp.mesh_generator]
#debug = 1

# This component specification means we are using PyLith ASCII format,
# and we then specify the filename and number of space dimensions for
# the mesh.
[pylithapp.mesh_generator.reader]
coordsys = spatialdata.geocoords.CSGeoProj
filename = twotet4.mesh
coordsys.space_dim = 3

# Specify the information defining the geographic projected coordinate
# system for the mesh.
[pylithapp.mesh_generator.reader.coordsys]
datum_horiz = NAD27
datum_vert = mean sea level
ellipsoid = clrk66

[pylithapp.mesh_generator.reader.coordsys.projector]
projection = utm
proj_options = +zone=11

# ----------------------------------------------------------------------
# problem
# ----------------------------------------------------------------------
# For an implicit formulation (using implicit.cfg), we will perform 1
# implicit time step from t = -1.0 to t = 0.0 (elastic solution step).
[pylithapp.timedependent]
dimension = 3
normalizer.length_scale = 1.0*m

[pylithapp.timedependent.formulation.time_step]
total_time = 0.0*s
dt = 1.0*s

# ----------------------------------------------------------------------
# materials
# ----------------------------------------------------------------------
# Specify the material information for the problem.
# The material type is 3D isotropic elastic.
[pylithapp.timedependent.materials]
material = pylith.materials.ElasticIsotropic3D

[pylithapp.timedependent.materials.material]

# We give a label of 'Elastic material' to this material.
label = Elastic material

# The cells associated with this material are given a material ID of 1
# in the mesh file.
id = 1

# The properties for this material are obtained from the SCEC CVM-H.
db_properties = spatialdata.spatialdb.SCECCVMH
db_properties.data_dir = /home/brad/data/sceccvm-h/vx53/bin

# We are doing 3D quadrature for a tetrahedron.
quadrature.cell = pylith.feassemble.FIATSimplex
quadrature.cell.dimension = 3

# ----------------------------------------------------------------------
# PETSc
# ----------------------------------------------------------------------
[pylithapp.petsc]
pc_type = jacobi

ksp_rtol = 1.0e-10
ksp_monitor = true
ksp_view = true
log_summary = true
ksp_max_it = 2000
ksp_gmres_restart = 100
#start_in_debugger = true
#debugger_timeout = 100
