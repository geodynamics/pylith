# -*- Python -*-

# The settings in this file (pylithapp.cfg) will be read automatically
# by pylith, as long as the file is placed in the run directory.

# The settings in this file will override any settings in:
# PREFIX/etc/pylithapp.cfg
# $HOME/.pyre/pylithapp/pylithapp.cfg

# The settings in this file will be overridden by any .cfg file given
# on the command line or by any command line settings.

[pylithapp]

# ----------------------------------------------------------------------
# journal
# The settings below turn on journal info for the specified components.
# If you want less output to stdout, you can turn these off.
# ----------------------------------------------------------------------
[pylithapp.journal.info]
timedependent = 1
explicit = 1
implicit = 1
petsc = 1
solverlinear = 1
meshioascii = 1
homogeneous = 1
implicitelasticity = 1
quadrature3d = 1
fiatsimplex = 1

# ----------------------------------------------------------------------
# mesh_generator
# The settings below control the mesh generation (importing mesh info).
# ----------------------------------------------------------------------
# Turn on debugging output for mesh generation.
[pylithapp.mesh_generator]
debug = 1

# This component specification means we are using PyLith ASCII format,
# and we then specify the filename and number of space dimensions for
# the mesh.
[pylithapp.mesh_generator.importer]
filename = twohex8.mesh
coordsys.space_dim = 3

# ----------------------------------------------------------------------
# problem
# Specify the problem settings.
# This is a time-dependent problem, so we select this as our problem type.
# We select a total time of 1 year, and a time step size of 0.1 year, so we
# are performing 10 time steps plus the elastic solution.
# The spatial dimension for this problem is 3.
# ----------------------------------------------------------------------
[pylithapp.timedependent]
dimension = 3

[pylithapp.timedependent.formulation.time_step]
total_time = 1.0*year
dt = 0.1*year

# ----------------------------------------------------------------------
# materials
# Specify the material information for the problem.
# ----------------------------------------------------------------------
# Change the material type to linear Maxwell viscoelastic.
[pylithapp.timedependent.materials]
material = pylith.materials.MaxwellIsotropic3D

[pylithapp.timedependent.materials.material]

# We give a label of 'viscoelastic material' to this material.
label = viscoelastic material

# The cells associated with this material are given a material ID of 1
# in the mesh file.
id = 1

# We define uniform material properties for this problem rather than
# using a spatial database file.
db = spatialdata.spatialdb.UniformDB
db.values = [vp,vs,density,viscosity]
db.data = [5773.502691896258, 3333.333333333333, 2700.0, 1.0e18]

# If we instead wanted to used the 'matprops.spatialdb' file to define
# material properties we would comment out the three 'db' lines above
# and uncomment the line below:
# db.iohandler.filename = matprops.spatialdb

# We are doing 2D quadrature for a quad.
quadrature = pylith.feassemble.quadrature.Quadrature3D
quadrature.cell = pylith.feassemble.FIATLagrange
quadrature.cell.dimension = 3

# ----------------------------------------------------------------------
# PETSc
# We are using all of the default settings for PETSc except for specifying
# the Jacobi preconditioner.
# Additional PETSc command-line arguments may be found in the PETSc
# documentation.
# ----------------------------------------------------------------------
[pylithapp.petsc]
pc_type = jacobi
# start_in_debugger = true
# debugger_timeout = 100
