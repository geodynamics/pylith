# -*- Python -*-

# The settings in this file (dislocation.cfg) will be read if it is
# specified on the command line:
# 'pylith dislocation.cfg'

# If this file is given, the settings in this file will override all
# others except for parameters specified directly on the command line.

# These settings define an implicit problem using a fault with
# kinematically-specified slip.

[pylithapp]

# ----------------------------------------------------------------------
# journal
# Journal settings in addition to those given in 'pylithapp.cfg'
# ----------------------------------------------------------------------
[pylithapp.journal.info]
quadrature2d = 1
faultcohesivekin = 1

# ----------------------------------------------------------------------
# problem
# ----------------------------------------------------------------------
[pylithapp.timedependent]

# We want an implicit formulation.
formulation = pylith.problems.Implicit

# Set bc to an array of 2 boundary conditions: 'x_neg' and 'x_pos'.
bc = [x_neg,x_pos]

# Set interfaces to an array of 1 fault: 'fault'.
interfaces = [fault]

# ----------------------------------------------------------------------
# boundary conditions
# Provide information on the boundary conditions.
# ----------------------------------------------------------------------

# We use the default spatial database for the Dirichlet BC which sets
# the displacements to zero for all time.

# Boundary conditions to be applied to the negative x-side of the mesh.
[pylithapp.timedependent.bc.x_neg]

# We are fixing all 3 degrees of freedom.
fixed_dof = [0, 1, 2]

# The nodes associated with this boundary condition have the name
# 'x_neg' in the mesh file.
label = x_neg

# We are assigning the label 'Dirichlet BC -x face' to the database.
db.label = Dirichlet BC -x face


# Boundary conditions to be applied to the positive x-side of the mesh.
[pylithapp.timedependent.bc.x_pos]

# We are fixing all 3 degrees of freedom.
fixed_dof = [0, 1, 2]

# The nodes associated with this boundary condition have the name
# 'x_pos' in the mesh file.
label = x_pos

# We are assigning the label 'Dirichlet BC +x face' to the database.
db.label = Dirichlet BC +x face

# ----------------------------------------------------------------------
# faults
# Provide information on the fault (interface).
# ----------------------------------------------------------------------
[pylithapp.timedependent.interfaces]

# Define fault properties.
[pylithapp.timedependent.interfaces.fault]

# The nodes associated with this fault have the name 'fault' in the mesh file.
label = fault

# NOTE: It is possible to assign an ID number to a fault (e.g.,
# 'id = 10').  Care must be taken when doing this, however, because the
# assigned ID will become the material ID for the cohesive element.
# This ID must not conflict with any of the material ID numbers for
# volume elements.  The default ID for a fault is 100.  If you have a
# fault in your mesh you must:
# 1.  If you create your own fault ID, make sure it does not conflict
#     with any of you material ID's.
# 2.  If you use the default fault ID, make sure that none of your
#     material ID's are equal to 100.

# We need the material database for the fault to properly condition the
# system of equations.

mat_db.iohandler.filename = matprops.spatialdb

# The quadrature for a 3D fault is 2D.
quadrature = pylith.feassemble.quadrature.Quadrature2Din3D
quadrature.cell = pylith.feassemble.FIATLagrange
quadrature.cell.dimension = 2

# Give the spatial databases specifying the fault slip.
[pylithapp.timedependent.interfaces.fault.eq_srcs.rupture.slip_function]

# Database specifying fault slip (0.01 m of left-lateral slip).
slip.iohandler.filename = dislocation_slip.spatialdb

# Database specifying time at which fault slips (0.0 s).
slip_time.iohandler.filename = dislocation_sliptime.spatialdb

# ----------------------------------------------------------------------
# output
# Give basename for vtk output.
# ----------------------------------------------------------------------
[pylithapp.problem.formulation.output.output.writer]
filename = dislocation.vtk
time_format = %010.1f

# Give basename for vtk fault output.
[pylithapp.timedependent.interfaces.fault.output.writer]
filename = dislocation-fault.vtk
time_format = %010.1f

# Give basename for VTK output of state variables.
[pylithapp.timedependent.materials.material.output]
cell_data_fields = [total_strain,viscous_strain,stress]
cell_info_fields = [mu,lambda,density,maxwell_time]
cell_filter = pylith.meshio.CellFilterAvg
writer.filename = dislocation-statevars.vtk
writer.time_format = %010.1f
