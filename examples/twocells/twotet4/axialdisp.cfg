# -*- Python -*-

# The settings in this file (axialdisp.cfg) will be read if it is
# specified on the command line:
# 'pylith axialdisp.cfg'

# If this file is given, the settings in this file will override all
# others except for parameters specified directly on the command line.

# These setting define an implicit problem with Dirichlet (displacement)
# boundary conditions extending the mesh along the x-axis.

[pylithapp]

# ----------------------------------------------------------------------
# problem
# ----------------------------------------------------------------------
# Specify the problem settings.
# This is a time-dependent problem so we use that facility.
[pylithapp.timedependent]

# We want an implicit formulation.
formulation = pylith.problems.Implicit

# Set bc to an array of 1 boundary condition: 'bc'.
bc = [bc]

# ----------------------------------------------------------------------
# boundary conditions
# ----------------------------------------------------------------------
# Provide information on the boundary conditions.

# Boundary conditions to be applied to the negative x-side of the mesh.
[pylithapp.timedependent.bc.bc]

# We are fixing the 0 (x), 1 (y) and 2 (z) degrees of freedom.
bc_dof = [0, 1, 2]

# The nodes associated with this boundary condition have the name
# 'end points' in the mesh file.
label = end points

# Change spatial database for initial value from ZeroDispDB (which has
# a uniform spatial distribution) to SimpleDB (which uses a data file
# to specify a spatial variation).
db_initial = spatialdata.spatialdb.SimpleDB

# We are assigning the label 'Dirichlet BC' to the database.
db_initial.label = Dirichlet BC

# The name of the file containing the spatial database for the BC
# specification.
db_initial.iohandler.filename = axialdisp.spatialdb

# ----------------------------------------------------------------------
# output
# ----------------------------------------------------------------------
# Give basename for VTK output of solution over domain.
[pylithapp.problem.formulation.output.output.writer]
filename = axialdisp.vtk

# Give basename for VTK output of state variables.
[pylithapp.timedependent.materials.material.output]
cell_filter = pylith.meshio.CellFilterAvgMesh
writer.filename = axialdisp-statevars.vtk
