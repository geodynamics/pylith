# -*- Python -*-

# To run this problem, type "pylith axialdisp.cfg". The settings in
# pylithapp.cfg will be read by default. See the README for how to run
# other problems in this directory.
#
#
#  <- ----------------------- ->
#     |                     |
#  <- |                     | ->
#     |                     |
#  <- |                     | ->
#     |                     |
#  <- ----------------------- ->
#     ^          ^          ^
#
# Axial tension is applied by pulling on the left and right boundaries
# in the horizontal direction.
# Bottom boundary is pinned in the vertical direction.

[pylithapp]

# ----------------------------------------------------------------------
# problem
# ----------------------------------------------------------------------
# Specify the problem settings.
[pylithapp.timedependent]

# We want an implicit formulation.
formulation = pylith.problems.Implicit

# Select a boundary condition container with 4 BCs.
bc = pylith.bc.BCFourSides

# ----------------------------------------------------------------------
# boundary conditions
# ----------------------------------------------------------------------

# BC for the left (-x) side of the domain.
[pylithapp.timedependent.bc.x_neg]

# We are fixing the 0 (x) degree of freedom.
fixed_dof = [0]

# The group of vertices in the mesh file associated with this boundary
# condition have the name 'x_neg'.
label = x_neg

# Change the spatial database for the Dirichlet BC initial values from
# FixedDOFDB (which has a uniform spatial distribution) to SimpleDB
# (which uses a data file to specify a spatial variation).
db = spatialdata.spatialdb.SimpleDB

# We are assigning the label 'Dirichlet BC -x edge' to the database.
db.label = Dirichlet BC -x edge

# The name of the file containing the spatial database for the BC
# specification.
db.iohandler.filename = axialdisp.spatialdb
db.query_type = linear


# Boundary conditions to be applied to the positive x-side of the mesh.
[pylithapp.timedependent.bc.x_pos]

# We are fixing the 0 (x) degree of freedom.
fixed_dof = [0]

# The group of vertices in the mesh file associated with this boundary
# condition have the name 'x_pos'.
label = x_pos

# Change the spatial database for the Dirichlet BC initial values from
# FixedDOFDB (which has a uniform spatial distribution) to SimpleDB
# (which uses a data file to specify a spatial variation).
db = spatialdata.spatialdb.SimpleDB

# We are assigning the label 'Dirichlet BC +x edge' to the database.
db.label = Dirichlet BC +x edge

# The name of the file containing the spatial database for the BC
# specification.
db.iohandler.filename = axialdisp.spatialdb
db.query_type = linear


# Boundary conditions to be applied to the bottom boundary of the mesh.
[pylithapp.timedependent.bc.y_neg]

# We are fixing the 1 (y) degree of freedom.
fixed_dof = [1]

# The group of vertices in the mesh file associated with this boundary
# condition have the name 'y_neg'.
label = y_neg

# Change spatial database for initial value from FixedDOFDB (which has
# a uniform spatial distribution) to SimpleDB (which uses a data file
# to specify a spatial variation).
db = spatialdata.spatialdb.SimpleDB

# We are assigning the label 'Dirichlet BC -y corners' to the database.
db.label = Dirichlet BC -y edge

# The name of the file containing the spatial database for the BC
# specification.
db.iohandler.filename = axialdisp.spatialdb
db.query_type = linear

# ----------------------------------------------------------------------
# output
# ----------------------------------------------------------------------
# Give basename for VTK output of solution over domain.
[pylithapp.problem.formulation.output.output.writer]
filename = axialdisp.vtk

# Give basename for VTK output of state variables.
[pylithapp.timedependent.materials.material.output]
cell_filter = pylith.meshio.CellFilterAvg
writer.filename = axialdisp-statevars.vtk
