[pylithapp.metadata]
#  y
#  ^
#  |
#   --> x
#
#         ----------
#         |        |
# Ux= 0   |        | Ux= 0
#         |        |
#         |        |
#         ----------
#            Uy=0
#
# Dirichlet boundary conditions
#
# boundary_yneg: Uy(x,-100*km) = 0
# boundary_xneg: Ux(-126*km,y) = 0
# boundary_xpos: Uy(+74*km,y) =  0
base = [pylithapp.cfg]
description = Reverse prescribed slip on main and splay fault with zero displacement Dirichlet boundary condition.
authors = [Charles Williams]
keywords = [reverse slip, prescribed slip, multiple faults]
arguments = [step06_twofaults.cfg]
version = 1.0.0
pylith_version = [>=3.0, <4.0]

features = [
    Static simulation,
    pylith.materials.Elasticity,
    pylith.materials.IsotropicLinearElasticity,
    pylith.faults.FaultCohesiveKin,
    pylith.faults.KinSrcStep,
    spatialdata.spatialdb.UniformDB
    ]

# ----------------------------------------------------------------------
# Monitoring and parameter viewing.
# ----------------------------------------------------------------------
[pylithapp]
# You can view this file using the pylith_parameters application or
# online at https://geodynamics.github.io/pylith_parameters/.
dump_parameters.filename = output/step06_twofaults-parameters.json
problem.progress_monitor.filename = output/step06_twofaults-progress.txt

# Set the name of the problem that will be used to construct the
# output filenames. The default directory for output is 'output'.
problem.defaults.name = step06_twofaults

# ----------------------------------------------------------------------
# fault
# ----------------------------------------------------------------------
[pylithapp.problem]
interfaces = [splay, fault]

# The `label` and `label_value` correspond to the name and tag of the physical group
# for the fault in the Gmsh Python script. The `edge` and `edge_value` correspond to
# the name and tag of the physical group for the fault end in the Gmsh Python script.
[pylithapp.problem.interfaces.fault]
 label = fault
 label_value = 20

observers.observer.data_fields = [slip]

[pylithapp.problem.interfaces.fault.eq_ruptures.rupture]
# Prescribe depth-dependent reverse slip
db_auxiliary_field = spatialdata.spatialdb.SimpleDB
db_auxiliary_field.filename = fault_slip.spatialdb

[pylithapp.problem.interfaces.splay]
label = splay
label_value = 22

observers.observer.data_fields = [slip]

[pylithapp.problem.interfaces.splay.eq_ruptures.rupture]
# Prescribe 1 meter of reverse (right-lateral) slip.
db_auxiliary_field = spatialdata.spatialdb.UniformDB
db_auxiliary_field.description = Fault rupture for splay fault
db_auxiliary_field.values = [initiation_time, final_slip_left_lateral, final_slip_opening]
db_auxiliary_field.data = [0.0*s, -1.0*m, 0.0*m]


# ----------------------------------------------------------------------
# petsc
# ----------------------------------------------------------------------
# Because the wedge is not constrained by any Dirichlet boundary conditions,
# we change the preconditioner for the displacement field to `ilu` to avoid a zero pivot.
[pylithapp.petsc]
fieldsplit_displacement_pc_type = ilu

# End of file
