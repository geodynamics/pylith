# -*- Python -*-

# The settings in this file (dislocation.cfg) will be read if it is
# specified on the command line:
# 'pylith dislocation.cfg'

# If this file is given, the settings in this file will override all
# others except for parameters specified directly on the command line.

# These settings define an implicit problem using a fault with
# kinematically-specified slip.

[pylithapp]

# ----------------------------------------------------------------------
# journal
# ----------------------------------------------------------------------
# Journal settings in addition to those given in 'pylithapp.cfg'
[pylithapp.journal.info]
quadrature1d = 1
faultcohesivekin = 1

# ----------------------------------------------------------------------
# problem
# ----------------------------------------------------------------------
# Specify the problem settings.
# This is a time-dependent problem so we use that facility.
[pylithapp.timedependent]

# We want an implicit formulation.
formulation = pylith.problems.Implicit

# Set bc to an array of 1 boundary condition: 'bc'.
bc = [bc]

# Set interfaces to an array of 2 faults: 'fault_1' and 'fault_2'.
interfaces = [fault_1,fault_2]

# ----------------------------------------------------------------------
# boundary conditions
# ----------------------------------------------------------------------
# Provide information on the boundary conditions.

# Boundary conditions to be applied to the negative x-side of the mesh.
[pylithapp.timedependent.bc.bc]
fixed_dof = [0, 1]
label = x_neg

# ----------------------------------------------------------------------
# faults
# ----------------------------------------------------------------------
# Provide information on the fault (interface).
[pylithapp.timedependent.interfaces]

# Define parameters for fault_1.
[pylithapp.timedependent.interfaces.fault_1]
label = fault_1
id = 100
mat_db.iohandler.filename = matprops.spatialdb
quadrature = pylith.feassemble.quadrature.Quadrature1Din2D
quadrature.cell.shape = line

[pylithapp.timedependent.interfaces.fault_1.eq_src.slip_function]
slip.iohandler.filename = fault_1_slip.spatialdb
slip.query_type = nearest
slip_rate.iohandler.filename = dislocation_sliprate.spatialdb
slip_time.iohandler.filename = dislocation_sliptime.spatialdb

# Define parameters for fault_2.
[pylithapp.timedependent.interfaces.fault_2]
label = fault_2
id = 101
mat_db.iohandler.filename = matprops.spatialdb
quadrature = pylith.feassemble.quadrature.Quadrature1Din2D
quadrature.cell.shape = line

[pylithapp.timedependent.interfaces.fault_2.eq_src.slip_function]
slip.iohandler.filename = fault_2_slip.spatialdb
slip.query_type = nearest
slip_rate.iohandler.filename = dislocation_sliprate.spatialdb
slip_time.iohandler.filename = dislocation_sliptime.spatialdb

# ----------------------------------------------------------------------
# output
# ----------------------------------------------------------------------
# Give basename for vtk output.
[pylithapp.problem.formulation.output.output.writer]
filename = twofaults.vtk

# Give basename for VTK fault output.
[pylithapp.timedependent.interfaces.fault_1.output.writer]
filename = twofaults-fault1.vtk

# Give basename for VTK fault output.
[pylithapp.timedependent.interfaces.fault_2.output.writer]
filename = twofaults-fault2.vtk

# Give basename for VTK output of state variables.
[pylithapp.timedependent.materials.material_1.output]
cell_filter = pylith.meshio.CellFilterAvg
writer.filename = twofaults-statevars-mat1.vtk

[pylithapp.timedependent.materials.material_2.output]
cell_filter = pylith.meshio.CellFilterAvg
writer.filename = twofaults-statevars-mat2.vtk
