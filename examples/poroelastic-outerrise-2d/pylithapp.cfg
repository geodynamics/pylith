[pylithapp.metadata]
description = Infiltration of seawater through a slab of oceanic lithosphere.
authors = [Daniel Douglas]
keywords = [poroelasticity, 2D, outer-rise, hydration]
version = 1.0.0
pylith_version = [>=3.0, <6.0]

features = [
    Quasi-static problem,
    triangular cells,
    LU preconditioner,
    pylith.materials.Poroelasticity,
    pylith.meshio.MeshIOPetsc,
    pylith.problems.TimeDependent,
    pylith.problems.SolnDispPresTracStrainVelPdotTdot,
    pylith.problems.InitialConditionDomain,
    pylith.bc.DirichletTimeDependent,
    pylith.bc.NeumannTimeDependent,
    pylith.meshio.DataWriterHDF5,
    spatialdata.spatialdb.SimpleGridDB,
    ]

# ----------------------------------------------------------------------
# journal
# ----------------------------------------------------------------------
[pylithapp.journal.info]
pylithapp = 1
timedependent = 1
solution = 1
meshiopetsc = 1
petscoptions = 1

# ----------------------------------------------------------------------
# mesh_generator
# ----------------------------------------------------------------------
[pylithapp.mesh_generator]
# Change the default mesh reader to the PETSc reader for Gmsh files.
reader = pylith.meshio.MeshIOPetsc
reader.filename = mesh_tri.msh
reader.coordsys.space_dim = 2

# ----------------------------------------------------------------------
# problem
# ----------------------------------------------------------------------
# We specify the basis order for the solution fields. The quadrature order
# must be the same across all fields and should be equal to the maximum
# basis order of the solution fields.
[pylithapp.problem]
solution = pylith.problems.SolnDispPresTracStrainVelPdotTdot
defaults.quadrature_order = 2

[pylithapp.problem.solution.subfields]
displacement.basis_order = 2
pressure.basis_order = 1
trace_strain.basis_order = 1

velocity.basis_order = 2
pressure_t.basis_order = 1
trace_strain_t.basis_order = 1

[pylithapp.problem]
# Scales for nondimensionalization
normalizer = spatialdata.units.NondimElasticQuasistatic
normalizer.length_scale = 100.0*m
normalizer.relaxation_time = 0.01*year
normalizer.shear_modulus = 10.0*GPa

# For time-dependent problems, we specify start and end times and an initial
# time step. With an initial time step of 0.2 yr, we use a start time of
# -0.2 yr so that the first solution occurs at 0 days.
[pylithapp.timedependent]
start_time = -6.0e+3*year
initial_dt = 6.0e+3*year
end_time = 300.0e+3*year

# ----------------------------------------------------------------------
# materials
# ----------------------------------------------------------------------
# We have one material and use the poroelasticity governing equations (material).
[pylithapp.problem]
materials = [slab]
materials.slab = pylith.materials.Poroelasticity

# We use the state variables so that porosity will evolve based on the deformation.
[pylithapp.problem.materials.slab]
label_value = 1
use_state_variables = True
db_auxiliary_field = spatialdata.spatialdb.SimpleGridDB 
db_auxiliary_field.description = Spatial database for material properties and state variables
db_auxiliary_field.query_type = linear

observers.observer.data_fields = [displacement, pressure, cauchy_stress, velocity, porosity, isotropic_permeability, water_content]

[pylithapp.problem.materials.slab.bulk_rheology]
auxiliary_subfields.isotropic_permeability.basis_order = 2


# ----------------------------------------------------------------------
# boundary conditions
# ----------------------------------------------------------------------
# We impose Dirichlet boundary conditions on the left and top boundaries.
# On the top boundary, we use the 'bc_ypos' Dirichlet boundary condition to constrain
# the vertical displacement and the 'bc_ypos_fluid' Dirichlet boundary condition to
# constrain the fluid pressure.
[pylithapp.problem]
bc = [bc_xneg, bc_ypos, bc_ypos_fluid]

bc.bc_xneg = pylith.bc.DirichletTimeDependent
bc.bc_ypos = pylith.bc.DirichletTimeDependent
bc.bc_ypos_fluid = pylith.bc.DirichletTimeDependent

[pylithapp.problem.bc.bc_xneg]
constrained_dof = [0, 1]
label = boundary_xneg
label_value = 11
field = displacement
db_auxiliary_field = pylith.bc.ZeroDB
db_auxiliary_field.description = Spatial database for Dirichlet BC on -x for displacement

[pylithapp.problem.bc.bc_ypos]
constrained_dof = [0, 1]
label = boundary_ypos
label_value = 10
field = displacement
db_auxiliary_field = pylith.bc.ZeroDB
db_auxiliary_field.description = Spatial database for Dirichlet BC on +y for displacement

[pylithapp.problem.bc.bc_ypos_fluid]
constrained_dof = [0]
label = boundary_ypos
label_value = 10
field = pressure
use_initial = True
db_auxiliary_field = spatialdata.spatialdb.SimpleDB
db_auxiliary_field.description = Spatial database for Dirichlet BC on +y for fluid pressure
db_auxiliary_field.iohandler.filename = surface_fluid_pressure.spatialdb

# End of file
