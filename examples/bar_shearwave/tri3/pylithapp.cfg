[pylithapp]

# ----------------------------------------------------------------------
# PROBLEM DESCRIPTION
# ----------------------------------------------------------------------

# Impose 1.0 m of left-lateral slip at time 0.1 s with slip rate
# following Brune's far-field time function. The rise time (95% of the
# final slip) is 2.0 s.
#
# The fault slip causes a shear wave to propagate down the bar. The
# shear wave is absorbed at the lateral ends of the bar using the
# absorbing dampers boundary condition.

# ----------------------------------------------------------------------
# RUNNING THE SIMULATION
# ----------------------------------------------------------------------

# This is a self-contained simulation configuration file.
#
# To run the simulation:
# pylith

# ----------------------------------------------------------------------
# journal
# ----------------------------------------------------------------------
[pylithapp.journal.info]
timedependent = 1
explicit = 1
#petsc = 1
meshiocubit = 1
#explicitelasticity = 1
#quadrature2d = 1
#fiatlagrange = 1
#faultcohesivekin = 1

[pylithapp.journal.debug]
#pylithapp = 1
#problem = 1
#explicit = 1

# ----------------------------------------------------------------------
# mesh_generator
# ----------------------------------------------------------------------
[pylithapp.mesh_generator]
#debug = 1
reader = pylith.meshio.MeshIOCubit

[pylithapp.mesh_generator.reader]
filename = bar_tri3_200m.exo
coordsys.space_dim = 2

# ----------------------------------------------------------------------
# problem
# ----------------------------------------------------------------------
[pylithapp.timedependent]
dimension = 2
elastic_prestep = False

# Change to an explicit time stepping formulation
formulation = pylith.problems.Explicit
#formulation = pylith.problems.ExplicitTri3

# Nondimensionalize problem using wave propagation parameters.
normalizer = spatialdata.units.NondimElasticDynamic

# Set bc to an array with 3 boundary conditions: 'x_neg', 'x_pos', and 'all_nofault'.
bc = [x_pos,x_neg,all_nofault]

# Change the DirichletPoints BC to the AbsorbingDampers BC
bc.x_pos = pylith.bc.AbsorbingDampers
bc.x_neg = pylith.bc.AbsorbingDampers

# Set interfaces to an array with 1 fault: 'fault'.
interfaces = [fault]

# Set materials to an array with 1 material 'elastic'.
materials = [elastic]

[pylithapp.timedependent.formulation.time_step]
total_time = 12.0*s
dt = 0.0333333333333333*s

# ----------------------------------------------------------------------
# materials
# ----------------------------------------------------------------------
[pylithapp.timedependent.materials]
elastic = pylith.materials.ElasticPlaneStrain

[pylithapp.timedependent.materials.elastic]

# Label for material
label = Elastic material

# Block id from CUBIT
id = 1

# Spatial database with physical properties for elastic material
db_properties.label = Elastic properties
db_properties.iohandler.filename = matprops.spatialdb

# Set the basis functions and quadrature:
# 2-D simplex cell with 2nd order quadrature
quadrature.cell = pylith.feassemble.FIATSimplex
quadrature.cell.dimension = 2
quadrature.cell.quad_order = 2

# ----------------------------------------------------------------------
# boundary conditions
# ----------------------------------------------------------------------
[pylithapp.timedependent.bc.x_pos]
# Absorbing boundary condition on +x face of bar

# Nodeset name from CUBIT
label = face_xpos

# Specify label and filename for spatial database with physical properties
db.label = Absorbing BC +x
db.iohandler.filename = matprops.spatialdb

# Specify the basis functions and quadrature:
# 1-D simplex cell in 2-D space with 2nd order quadrature
quadrature.cell = pylith.feassemble.FIATSimplex
quadrature.cell.dimension = 1
quadrature.cell.quad_order = 2

[pylithapp.timedependent.bc.x_neg]
# Absorbing boundary condition on -x face of bar

# Nodeset name from CUBIT
label = face_xneg

# Specify label and filename for spatial database with physical properties
db.label = Absorbing BC -x
db.iohandler.filename = matprops.spatialdb

# Specify the basis functions and quadrature:
# 1-D simplex cell in 2-D space with 2nd order quadrature
quadrature.cell = pylith.feassemble.FIATSimplex
quadrature.cell.dimension = 1
quadrature.cell.quad_order = 2

[pylithapp.timedependent.bc.all_nofault]
# Dirichlet boundary condition on all vertices except fault vertices

# Pin x and z degrees of freedom
bc_dof = [0]

# Nodeset name from CUBIT
label = vertices_nofault

# ----------------------------------------------------------------------
# faults
# ----------------------------------------------------------------------
# NOTE: It is possible to assign an ID number to a fault (e.g.,
# 'id = 10').  Care must be taken when doing this, however, because the
# assigned ID will become the material ID for the cohesive element.
# This ID must not conflict with any of the material ID numbers for
# volume elements.  The default ID for a fault is 100.  If you have a
# fault in your mesh you must:
# 1.  If you create your own fault ID, make sure it does not conflict
#     with any of you material ID's.
# 2.  If you use the default fault ID, make sure that none of your
#     material ID's are equal to 100.

[pylithapp.timedependent.interfaces.fault]

# Material id
id = 100

# Nodeset name from CUBIT
label = fault

# Specify the basis functions and quadrature:
# 1-D simplex cell in 2-D space with 2nd order quadrature
quadrature.cell = pylith.feassemble.FIATSimplex
quadrature.cell.dimension = 1
quadrature.cell.quad_order = 2

# Switch to Brune slip time function
eq_srcs.rupture.slip_function = pylith.faults.BruneSlipFn

[pylithapp.timedependent.interfaces.fault.eq_srcs.rupture.slip_function]

# Database specifying the final slip.
slip.label = Final slip
slip.iohandler.filename = shearwave_slip.spatialdb

# Database specifying rise time.
rise_time.label = Rise time
rise_time.iohandler.filename = shearwave_risetime.spatialdb

# Database specifying time at which slip begins at each point.
slip_time.label = Slip time
slip_time.iohandler.filename = shearwave_sliptime.spatialdb

# ----------------------------------------------------------------------
# PETSc
# ----------------------------------------------------------------------
[pylithapp.petsc]
log_summary = true


# ----------------------------------------------------------------------
# output
# ----------------------------------------------------------------------
# We set three output manager parameters for each type of output.
#   skip - Number of time steps to skip between output
#   writer.filename - Root name for VTK file
#   writer.time_format - Format of time stamp (decimal point is removed)

# Give basename for VTK domain output of solution over domain.
[pylithapp.problem.formulation.output.output]
vertex_data_fields = [displacement,velocity]
skip = 2
writer.filename = output/shearwave.vtk
writer.time_format = %05.2f

# Give basename for VTK fault output.
[pylithapp.timedependent.interfaces.fault.output]
skip = 2
writer.filename = output/shearwave-fault.vtk
writer.time_format = %05.2f

# Give basename for VTK output of state variables.
[pylithapp.timedependent.materials.elastic.output]
cell_info_fields = [mu,lambda,density,stable_dt_explicit]
skip = 29
writer.filename = output/shearwave-statevars.vtk
writer.time_format = %05.2f

# Averate state variables over cell
cell_filter = pylith.meshio.CellFilterAvg
