# -*- Python -*-

# The settings in this file (shearwave.cfg) will be read if it is
# specified on the command line:
# 'pylith shearwave.cfg'
#
# If this file is given, the settings in this file will override all
# others except for parameters specified directly on the command line.
#
# These settings define an explicit time-stepping problem using a fault with
# kinematically-specified slip.

[pylithapp]

# ----------------------------------------------------------------------
# journal
# ----------------------------------------------------------------------
[pylithapp.journal.info]
timedependent = 1
#explicit = 1
#petsc = 1
#solverlinear = 1
meshiocubit = 1
#explicitelasticity = 1
#quadrature2d = 1
#fiatlagrange = 1
#faultcohesivekin = 1

# ----------------------------------------------------------------------
# mesh_generator
# ----------------------------------------------------------------------
[pylithapp.mesh_generator]
#debug = 1
importer = pylith.meshio.MeshIOCubit

[pylithapp.mesh_generator.importer]
filename = bar_tri3_200m.exo
coordsys.space_dim = 2

# ----------------------------------------------------------------------
# problem
# ----------------------------------------------------------------------
[pylithapp.timedependent]
total_time = 12.0*s
default_dt = 0.0333333333333333*s
dimension = 2

# Change to an explicit time stepping formulation
formulation = pylith.problems.Explicit

# Reuse solution from previous time step as initial guess for next time step
formulation.solver.initial_guess_zero = False

# Set bc to an array with 3 boundary conditions: 'x_neg', 'x_pos', and 'y_pos'.
bc = [x_pos,x_neg,y_pos]

# Change the DirichletPoints BC to the AbsorbingDampers BC
bc.x_pos = pylith.bc.AbsorbingDampers
bc.x_neg = pylith.bc.AbsorbingDampers

# Set interfaces to an array with 1 fault: 'fault'.
interfaces = [fault]

# Set materials to an array with 1 material 'elastic'.
materials = [elastic]

# ----------------------------------------------------------------------
# materials
# ----------------------------------------------------------------------
[pylithapp.timedependent.materials]
elastic = pylith.materials.ElasticPlaneStrain

[pylithapp.timedependent.materials.elastic]

# Label for material
label = Elastic material

# Nodeset id from CUBIT
id = 1

# Spatial database with physical properties for elastic material
db.iohandler.filename = matprops.spatialdb

# Set the basis functions and quadrature:
# 2-D simplex cell with 2nd order quadrature
quadrature = pylith.feassemble.quadrature.Quadrature2D
quadrature.cell = pylith.feassemble.FIATSimplex
quadrature.cell.shape = triangle
quadrature.cell.quad_order = 2

# ----------------------------------------------------------------------
# boundary conditions
# ----------------------------------------------------------------------
[pylithapp.timedependent.bc.x_pos]
# Absorbing boundary condition on +x face of bar

# Nodeset id from CUBIT
label = 11

# Specify label and filename for spatial database with physical properties
db.label = Absorbing BC +x
db.iohandler.filename = matprops.spatialdb

# Specify the basis functions and quadrature:
# 1-D simplex cell in 2-D space with 2nd order quadrature
quadrature = pylith.feassemble.quadrature.Quadrature1Din2D
quadrature.cell = pylith.feassemble.FIATSimplex
quadrature.cell.shape = line
quadrature.cell.quad_order = 2

[pylithapp.timedependent.bc.x_neg]
# Absorbing boundary condition on -x face of bar

# Nodeset id from CUBIT
label = 12

# Specify label and filename for spatial database with physical properties
db.label = Absorbing BC -x
db.iohandler.filename = matprops.spatialdb

# Specify the basis functions and quadrature:
# 1-D simplex cell in 2-D space with 2nd order quadrature
quadrature = pylith.feassemble.quadrature.Quadrature1Din2D
quadrature.cell = pylith.feassemble.FIATSimplex
quadrature.cell.shape = line
quadrature.cell.quad_order = 2

[pylithapp.timedependent.bc.y_pos]
# Dirichlet boundary condition on all vertices except fault vertices

# Pin x and z degrees of freedom
fixed_dof = [0]

# Nodeset id from CUBIT
label = 13

# ----------------------------------------------------------------------
# faults
# ----------------------------------------------------------------------
# NOTE: It is possible to assign an ID number to a fault (e.g.,
# 'id = 10').  Care must be taken when doing this, however, because the
# assigned ID will become the material ID for the cohesive element.
# This ID must not conflict with any of the material ID numbers for
# volume elements.  The default ID for a fault is 100.  If you have a
# fault in your mesh you must:
# 1.  If you create your own fault ID, make sure it does not conflict
#     with any of you material ID's.
# 2.  If you use the default fault ID, make sure that none of your
#     material ID's are equal to 100.

[pylithapp.timedependent.interfaces.fault]

# Material id
id = 100

# Nodeset id from CUBIT
label = 10

# Specify the basis functions and quadrature:
# 1-D simplex cell in 2-D space with 2nd order quadrature
quadrature = pylith.feassemble.quadrature.Quadrature1Din2D
quadrature.cell = pylith.feassemble.FIATSimplex
quadrature.cell.shape = line
quadrature.cell.quad_order = 2

# Set the physical properties for the fault to properly condition the
# system of equations.
mat_db.iohandler.filename = matprops.spatialdb

[pylithapp.timedependent.interfaces.fault.eq_srcs.rupture.slip_function]

# Database specifying the final slip.
slip.iohandler.filename = shearwave_slip.spatialdb

# Database specifying peak slip rate.
slip_rate.iohandler.filename = shearwave_sliprate.spatialdb

# Database specifying time at which slip begins at each point.
slip_time.iohandler.filename = shearwave_sliptime.spatialdb

# ----------------------------------------------------------------------
# PETSc
# ----------------------------------------------------------------------
[pylithapp.petsc]
ksp_type = gmres
pc_type = asm
ksp_rtol = 1.0e-8
ksp_max_it = 50
ksp_gmres_restart = 10

#ksp_monitor = true
#ksp_view = true
log_summary = true


# ----------------------------------------------------------------------
# output
# ----------------------------------------------------------------------
# We set three output manager parameters for each type of output.
#   skip - Number of time steps to skip between output
#   writer.filename - Root name for VTK file
#   writer.time_format - Format of time stamp (decimal point is removed)

# Give basename for VTK domain output of solution over domain.
[pylithapp.problem.formulation.output.output]
skip = 3
writer.filename = output/shearwave.vtk
writer.time_format = %05.2f

# Give basename for VTK fault output.
[pylithapp.timedependent.interfaces.fault.output]
skip = 3
writer.filename = output/shearwave-fault.vtk
writer.time_format = %05.2f

# Give basename for VTK output of state variables.
[pylithapp.timedependent.materials.elastic.output]
skip = 33
writer.filename = output/shearwave-statevars.vtk
writer.time_format = %05.2f

# Averate state variables over cell
cell_filter = pylith.meshio.CellFilterAvg
