# -*- Python -*-
[pylithapp]

# This is not a self-contained simulation configuration file. This
# file only specifies the specific parameters for a static problem
# using a fault with a fault constitutive model.

# ----------------------------------------------------------------------
# problem
# ----------------------------------------------------------------------
[pylithapp.timedependent]

# Change to an implicit time-stepping formulation and the nonlinear
# solver.
formulation = pylith.problems.Implicit
formulation.solver = pylith.problems.SolverNonlinear

# Set bc to an array with 3 boundary conditions: 'x_neg', 'x_pos', and 'y_pos'.
bc = [x_pos,x_neg,all_nofault]

[pylithapp.timedependent.formulation.time_step]
total_time = 0.0*s

# ----------------------------------------------------------------------
# boundary conditions
# ----------------------------------------------------------------------
[pylithapp.timedependent.bc]
# Switch from absorbing boundary condition to Dirichlet BC.
x_pos = pylith.bc.DirichletBC
x_neg = pylith.bc.DirichletBC

[pylithapp.timedependent.bc.x_pos]
# Dirichlet BC on +x face of bar

# Nodeset id from CUBIT
label = 11

bc_dof = [1]
db_initial = spatialdata.spatialdb.UniformDB
db_initial.label = Dirichlet BC +x edge
db_initial.values = [displacement-x,displacement-y]
db_initial.data = [0.0*m,10.0*km]

[pylithapp.timedependent.bc.x_neg]
# Dirichlet BC on -x face of bar

# Nodeset id from CUBIT
label = 12

bc_dof = [1]

# ----------------------------------------------------------------------
# faults
# ----------------------------------------------------------------------
[pylithapp.timedependent.interfaces.fault]

db_initial_tractions = spatialdata.spatialdb.UniformDB
db_initial_tractions.label = Initial fault tractions
db_initial_tractions.values = [traction-shear,traction-normal]
db_initial_tractions.data = [0.0*MPa, -10000.0*MPa]

friction = pylith.friction.StaticFriction

friction.db_properties = spatialdata.spatialdb.UniformDB
friction.db_properties.label = Static friction
friction.db_properties.values = [friction-coefficient,cohesion]
friction.db_properties.data = [0.6*m,0.0*Pa]

# ----------------------------------------------------------------------
# output
# ----------------------------------------------------------------------

# Give basename for VTK domain output of solution over domain.
[pylithapp.problem.formulation.output.output]
writer.filename = output/static-stick.vtk

# Give basename for VTK fault output.
[pylithapp.timedependent.interfaces.fault.output]
writer.filename = output/static-stick-fault.vtk

# Give basename for VTK output of state variables.
[pylithapp.timedependent.materials.elastic.output]
writer.filename = output/static-stick-statevars.vtk
