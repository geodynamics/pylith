# -*- Python -*-
[pylithapp]

# ----------------------------------------------------------------------
# PROBLEM DESCRIPTION
# ----------------------------------------------------------------------

# Impose Dirichlet BC on the lateral ends of the bar to create uniform
# shear. Friction on the fault controlled by a static friction fault
# constitutive model is insufficient to keep the falt locked, so slip
# occurs.

# This problem differs significantly from most real applications
# involving fault slip, because the deformation is uniformly
# distributed. As a result, when computing the fault slip associated
# with the fault constitutive model imposed limits on fault shear
# tractions, a few hundred iterations are needed in the nonlinear
# solver. In most real applications only about 10 iterations are
# needed for convergence.

# ----------------------------------------------------------------------
# RUNNING THE SIMULATION
# ----------------------------------------------------------------------

# This is not a self-contained simulation configuration file. This
# file only specifies the specific parameters for a static problem
# with fault slip controlled by a fault constitutive model.
#
# To run the simulation:
# pylith static_sliding.cfg

# ----------------------------------------------------------------------
# journal
# ----------------------------------------------------------------------
# Turn on progress for the dynamic fault.
[pylithapp.journal.info]
faultcohesivedyn = 1

# ----------------------------------------------------------------------
# problem
# ----------------------------------------------------------------------
[pylithapp.timedependent]

# Change to an implicit time-stepping formulation and the nonlinear
# solver.
formulation = pylith.problems.Implicit
formulation.solver = pylith.problems.SolverNonlinear

# Set bc to an array with 3 boundary conditions: 'x_neg', 'x_pos', and
# 'all_nofault'.
bc = [x_pos,x_neg,all_nofault]

[pylithapp.timedependent.formulation.time_step]
# Switch to a static simulation.
total_time = 0.0*s

# ----------------------------------------------------------------------
# boundary conditions
# ----------------------------------------------------------------------
[pylithapp.timedependent.bc]
# Switch from absorbing boundary condition to Dirichlet BC.
x_pos = pylith.bc.DirichletBC
x_neg = pylith.bc.DirichletBC

[pylithapp.timedependent.bc.x_pos]
# Dirichlet BC on +x face of bar

# Name of nodeset in CUBIT.
label = face_xpos

# Pin the y-dof.
bc_dof = [1]

# Use a uniform DB to impose the Dirichlet BC. Impose 320 m of
# displacement in the y direction.
db_initial = spatialdata.spatialdb.UniformDB
db_initial.label = Dirichlet BC +x edge
db_initial.values = [displacement-x,displacement-y]
db_initial.data = [0.0*m,320.0*m]

[pylithapp.timedependent.bc.x_neg]
# Dirichlet BC on -x face of bar. Use the default (zero displacement) values.

# Name of nodeset in CUBIT
label = face_xneg

# Pin the y-dof.
bc_dof = [1]

# ----------------------------------------------------------------------
# faults
# ----------------------------------------------------------------------x
[pylithapp.timedependent.interfaces]
# Change fault to dynamic fault interface.
fault = pylith.faults.FaultCohesiveDyn

[pylithapp.timedependent.interfaces.fault]

# Impose initial compressive normal tractions of -100 MPa. The initial
# shear traction is zero.
db_initial_tractions = spatialdata.spatialdb.UniformDB
db_initial_tractions.label = Initial fault tractions
db_initial_tractions.values = [traction-shear,traction-normal]
db_initial_tractions.data = [0.0*MPa, -100.0*MPa]

# Use the static friction model.
friction = pylith.friction.StaticFriction

# Set static friction model parameters using a uniform DB. Set the
# static coefficient of friction to 0.6 and cohesion to 0.0 Pa.
friction.db_properties = spatialdata.spatialdb.UniformDB
friction.db_properties.label = Static friction
friction.db_properties.values = [friction-coefficient,cohesion]
friction.db_properties.data = [0.6,0.0*Pa]

# ----------------------------------------------------------------------
# PETSc
# ----------------------------------------------------------------------
[pylithapp.petsc]

# Friction sensitivity solve used to compute the increment in slip
# associated with changes in the Lagrange multiplier imposed by the
# fault constitutive model.
friction_pc_type = asm
friction_sub_pc_factor_shift_type = nonzero
friction_ksp_max_it = 25
friction_ksp_gmres_restart = 30
# Uncomment to view details of friction sensitivity solve.
#friction_ksp_monitor = true
#friction_ksp_view = true
friction_ksp_converged_reason = true

# ----------------------------------------------------------------------
# output
# ----------------------------------------------------------------------
# Set filenames for output.
[pylithapp.problem.formulation.output.output]
writer.filename = output/static_sliding.vtk

[pylithapp.timedependent.interfaces.fault.output]
writer.filename = output/static_sliding-fault.vtk

# Add slip rate to the default output fiels of slip and traction.
vertex_data_fields=[slip,slip_rate,traction]

[pylithapp.timedependent.materials.elastic.output]
writer.filename = output/static_sliding-statevars.vtk
