# -*- Python -*-
[pylithapp]

# ----------------------------------------------------------------------
# RUNNING THE SIMULATON
# ----------------------------------------------------------------------

# This is not a self-contained simulation configuration file. This
# file only specifies the specific parameters for an explicit
# time-stepping problem using a dynamic fault interface condition with
# static friction.
#
# To run the simulation:
# pylith dynamicfault.cfg shearwave_staticfriction.cfg
#
# Output will be directed to the directory output.

# ----------------------------------------------------------------------
# problem
# ----------------------------------------------------------------------
[pylithapp.timedependent]

# Switch to a lumped Jacobian matrix.
formulation = pylith.problems.ExplicitLumped

# ----------------------------------------------------------------------
# boundary conditions
# ----------------------------------------------------------------------
[pylithapp.timedependent.bc]
# Change the DirichletPoints BC to the AbsorbingDampers BC
x_pos = pylith.bc.AbsorbingDampers
x_neg = pylith.bc.AbsorbingDampers

[pylithapp.timedependent.bc.x_pos]
# Absorbing BC on +x face of bar

# Nodeset id from CUBIT
label = 11

# Specify label and filename for spatial database with physical properties
db.label = Absorbing BC +x
db.iohandler.filename = matprops.spatialdb

# Specify the basis functions and quadrature:
# 1-D Lagrange cell in 2-D space with 2nd order quadrature
quadrature.cell = pylith.feassemble.FIATLagrange
quadrature.cell.dimension = 1
quadrature.cell.quad_order = 2

[pylithapp.timedependent.bc.x_neg]
# Absorbing BC on -x face of bar

# Nodeset id from CUBIT
label = 12

# Specify label and filename for spatial database with physical properties
db.label = Absorbing BC -x
db.iohandler.filename = matprops.spatialdb

# Specify the basis functions and quadrature:
# 1-D Lagrange cell in 2-D space with 2nd order quadrature
quadrature.cell = pylith.feassemble.FIATLagrange
quadrature.cell.dimension = 1
quadrature.cell.quad_order = 2

[pylithapp.timedependent.bc.all_nofault]
# Dirichlet BC on all vertices except fault vertices

# Pin x and z degrees of freedom
bc_dof = [0]

# Nodeset id from CUBIT
label = 13

# ----------------------------------------------------------------------
# faults
# ----------------------------------------------------------------------
[pylithapp.timedependent.interfaces.fault]

db_initial_tractions = spatialdata.spatialdb.UniformDB
db_initial_tractions.label = Initial fault tractions
db_initial_tractions.values = [traction-shear,traction-normal]
db_initial_tractions.data = [-6.1*MPa, -10.0*MPa]

friction = pylith.friction.StaticFriction

friction.db_properties = spatialdata.spatialdb.UniformDB
friction.db_properties.label = Static friction
friction.db_properties.values = [friction-coefficient,cohesion]
friction.db_properties.data = [0.6,0.0*Pa]

# ----------------------------------------------------------------------
# output
# ----------------------------------------------------------------------
# Set filenames for output.
[pylithapp.problem.formulation.output.output]
writer.filename = output/dynamic-staticfriction.vtk

[pylithapp.timedependent.interfaces.fault.output]
writer.filename = output/dynamic-staticfriction-fault.vtk

[pylithapp.timedependent.materials.elastic.output]
writer.filename = output/dynamic-staticfriction-statevars.vtk
