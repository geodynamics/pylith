[pylithapp.metadata]
base = [pylithapp.cfg]
keywords = [quadrilateral cells]
arguments = [step00_quad.cfg]

[pylithapp]
dump_parameters.filename = output/step00_quad-parameters.json
problem.progress_monitor.filename = output/step00_quad-progress.txt

problem.defaults.name = step00_quad

# ----------------------------------------------------------------------
# mesh_generator
# ----------------------------------------------------------------------
[pylithapp.mesh_generator.reader]
filename = mesh_quad.exo

# ----------------------------------------------------------------------
# problem
# ----------------------------------------------------------------------
[pylithapp.problem]
defaults.quadrature_order = 2

# Use nonlinear solver to ensure residual and Jacobian are consistent.
solver = nonlinear

solution = pylith.problems.SolnDispPresTracStrain

[pylithapp.timedependent]
start_time = 0.0*s

initial_dt = 10*day
end_time = 10000*day

normalizer = spatialdata.units.NondimElasticQuasistatic
normalizer.length_scale = 100.0*m
normalizer.relaxation_time = 10000.0*s
normalizer.shear_modulus = 1.0*m**-1*kg*s**-2

# ----------------------------------------------------------------------
# materials
# ----------------------------------------------------------------------
[pylithapp.problem]
# Create an array of two materials
materials = [domain, intrusion]
materials.domain = pylith.materials.Poroelasticity
materials.intrusion = pylith.materials.Poroelasticity

[pylithapp.problem.materials]
domain.bulk_rheology = pylith.materials.IsotropicLinearPoroelasticity
intrusion.bulk_rheology = pylith.materials.IsotropicLinearPoroelasticity

[pylithapp.problem.materials.domain]

# id must match the values in the mesh material-ids.
description = Poroelastic domain
label_value = 1

# We will use uniform material properties, so we use the UniformDB
# spatial database.
db_auxiliary_field = spatialdata.spatialdb.UniformDB
db_auxiliary_field.description = Poroelastic properties
db_auxiliary_field.values = [solid_density, fluid_density, fluid_viscosity, porosity, shear_modulus, drained_bulk_modulus, biot_coefficient, fluid_bulk_modulus, solid_bulk_modulus, isotropic_permeability]
db_auxiliary_field.data   = [ 2500*kg/m**3,  1000*kg/m**3,      0.001*Pa*s,     0.01,        6e9*Pa,              10e9*Pa,              1.0,             2e9*Pa,            20e9*Pa,             1e-15*m**2]


# observers.observer.data_fields = [displacement,pressure,trace_strain]

auxiliary_subfields.body_force.basis_order = 0
auxiliary_subfields.solid_density.basis_order = 0
auxiliary_subfields.fluid_density.basis_order = 0
auxiliary_subfields.fluid_viscosity.basis_order = 0
auxiliary_subfields.gravitational_acceleration.basis_order = 0
auxiliary_subfields.porosity.basis_order = 0
derived_subfields.cauchy_strain.basis_order = 1
derived_subfields.cauchy_stress.basis_order = 1

[pylithapp.problem.materials.domain.bulk_rheology]

auxiliary_subfields.drained_bulk_modulus.basis_order = 0
auxiliary_subfields.shear_modulus.basis_order = 0
auxiliary_subfields.biot_coefficient.basis_order = 0
auxiliary_subfields.biot_modulus.basis_order = 0
auxiliary_subfields.isotropic_permeability.basis_order = 0


[pylithapp.problem.materials.intrusion]

# id must match the values in the mesh material-ids.
description = Poroelastic intrusion
label_value = 2

# We will use uniform material properties, so we use the UniformDB
# spatial database.
db_auxiliary_field = spatialdata.spatialdb.UniformDB
db_auxiliary_field.description = Poroelastic properties
db_auxiliary_field.values = [solid_density, fluid_density, fluid_viscosity, porosity, shear_modulus, drained_bulk_modulus, biot_coefficient, fluid_bulk_modulus, solid_bulk_modulus, isotropic_permeability]
db_auxiliary_field.data   = [ 2500*kg/m**3,  1000*kg/m**3,      0.001*Pa*s,     0.1,        6e9*Pa,              10e9*Pa,              0.8,             2e9*Pa,            20e9*Pa,             1e-13*m**2]


# observers.observer.data_fields = [displacement,pressure,trace_strain]

auxiliary_subfields.body_force.basis_order = 0
auxiliary_subfields.solid_density.basis_order = 0
auxiliary_subfields.fluid_density.basis_order = 0
auxiliary_subfields.fluid_viscosity.basis_order = 0
auxiliary_subfields.gravitational_acceleration.basis_order = 0
auxiliary_subfields.porosity.basis_order = 0
derived_subfields.cauchy_strain.basis_order = 1
derived_subfields.cauchy_stress.basis_order = 1

[pylithapp.problem.materials.intrusion.bulk_rheology]

auxiliary_subfields.drained_bulk_modulus.basis_order = 0
auxiliary_subfields.shear_modulus.basis_order = 0
auxiliary_subfields.biot_coefficient.basis_order = 0
auxiliary_subfields.biot_modulus.basis_order = 0
auxiliary_subfields.isotropic_permeability.basis_order = 0

# ----------------------------------------------------------------------
# initial conditions
# ----------------------------------------------------------------------
[pylithapp.problem]
ic = [domain]
ic.domain = pylith.problems.InitialConditionDomain
[pylithapp.problem.ic.domain]
db = spatialdata.spatialdb.UniformDB
db.description = Initial conditions for domain
db.values = [displacement_x, displacement_y, pressure, trace_strain]
db.data = [0.0*m, 0.0*m, 5e6*Pa, 0.0]
# ----------------------------------------------------------------------
# boundary conditions
# ----------------------------------------------------------------------
[pylithapp.problem]
bc = [xneg,xpos,zneg,surface,xflow]

bc.xneg = pylith.bc.DirichletTimeDependent
bc.xpos = pylith.bc.DirichletTimeDependent
bc.zneg = pylith.bc.DirichletTimeDependent
bc.surface = pylith.bc.DirichletTimeDependent
bc.xflow = pylith.bc.DirichletTimeDependent

# ------------------------------------------------------------------------------
[pylithapp.problem.bc.xneg]
constrained_dof = [0]
label = xneg
label_value = 1
field = displacement

db_auxiliary_field = pylith.bc.ZeroDB
db_auxiliary_field.description = Dirichlet BC -x

# ------------------------------------------------------------------------------
[pylithapp.problem.bc.xpos]
constrained_dof = [0]
label = xpos
label_value = 1
field = displacement

db_auxiliary_field = pylith.bc.ZeroDB
db_auxiliary_field.description = Dirichlet BC +x

# ------------------------------------------------------------------------------
[pylithapp.problem.bc.zneg]
constrained_dof = [1]
label = yneg
label_value = 1
field = displacement

db_auxiliary_field = pylith.bc.ZeroDB
db_auxiliary_field.description = Dirichlet BC -z

# ------------------------------------------------------------------------------
[pylithapp.problem.bc.surface]
constrained_dof = [0]
label = ypos
label_value = 1
field = pressure

db_auxiliary_field = pylith.bc.ZeroDB
db_auxiliary_field.description = Dirichlet BC +z

# ------------------------------------------------------------------------------
[pylithapp.problem.bc.xflow]
# Neumann Case
constrained_dof = [0]
label = xflow
label_value = 1
field = pressure
db_auxiliary_field = spatialdata.spatialdb.UniformDB
db_auxiliary_field.description = Neumann BC xflow
db_auxiliary_field.values = [initial_amplitude]
db_auxiliary_field.data = [1e7*Pa]



# End of file
