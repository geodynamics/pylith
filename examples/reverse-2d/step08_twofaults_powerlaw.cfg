[pylithapp.metadata]
#  y
#  ^
#  |
#   --> x
#
#
#         ----------
#         |        |
# Ux= 0   |        | Ux= 0
#         |        |
#         |        |
#         ----------
#            Uy=0
#
# Dirichlet boundary conditions
#
# boundary_yneg: Uy(x,-100*km) = 0
# boundary_xneg: Ux(-126*km,y) = 0
# boundary_xpos: Uy(+74*km,y) =  0
base = [pylithapp.cfg]
description = Reverse prescribed slip on main and splay fault with power-law viscoelastic bulk rheology and zero displacement Dirichlet boundary condition.
authors = [Charles Williams, Brad Aagaard]
keywords = [reverse slip, prescribed slip, multiple faults, power-law viscoelastic bulk rheology]
arguments = [step08_twofaults_powerlaw.cfg]
version = 1.0.0
pylith_version = [>=3.0, <4.0]

features = [
    Quasi-static simulation,
    pylith.materials.Elasticity,
    pylith.materials.IsotropicPowerLaw,
    pylith.faults.FaultCohesiveKin,
    pylith.faults.KinSrcStep,
    spatialdata.spatialdb.UniformDB
    ]

# ----------------------------------------------------------------------
# Monitoring and parameter viewing.
# ----------------------------------------------------------------------
[pylithapp]
# You can view this file using the pylith_parameters application or
# online at https://geodynamics.github.io/pylith_parameters/.
dump_parameters.filename = output/step08_twofaults_powerlaw-parameters.json
problem.progress_monitor.filename = output/step08_twofaults_powerlaw-progress.txt

# Set the name of the problem that will be used to construct the
# output filenames. The default directory for output is 'output'.
problem.defaults.name = step08_twofaults_powerlaw

# ----------------------------------------------------------------------
# problem
# ----------------------------------------------------------------------
[pylithapp.problem]
# Simulation time of 100 years with 4 year timesteps.
initial_dt = 4.0*year
start_time = -4.0*year
end_time = 100.0*year

# Use a relaxation time of 20 years to nondimensionalize time.
normalizer.relaxation_time = 20.0*year

# ----------------------------------------------------------------------
# solution
# ----------------------------------------------------------------------
# Problem involves a fault.
[pylithapp.problem]
solution = pylith.problems.SolnDispLagrange

# ----------------------------------------------------------------------
# materials
# ----------------------------------------------------------------------
# We switch to a isotropic powerlaw viscoelastic bulk rheology for
# the slab.
[pylithapp.problem.materials]
slab.bulk_rheology = pylith.materials.IsotropicPowerLaw

[pylithapp.problem.materials.slab]
db_auxiliary_field = spatialdata.spatialdb.SimpleDB
db_auxiliary_field.description = Maxwell viscoelastic properties
db_auxiliary_field.iohandler.filename = mat_powerlaw.spatialdb

bulk_rheology.auxiliary_subfields.power_law_reference_strain_rate.basis_order = 0
bulk_rheology.auxiliary_subfields.power_law_reference_stress.basis_order = 0
bulk_rheology.auxiliary_subfields.power_law_exponent.basis_order = 0

# ----------------------------------------------------------------------
# fault
# ----------------------------------------------------------------------
# We keep the same fault settings as in Step 6.
[pylithapp.problem]
interfaces = [fault, splay]

[pylithapp.problem.interfaces.fault]
label = fault
label_value = 20
edge = fault_end
edge_value = 21

observers.observer.data_fields = [slip]

[pylithapp.problem.interfaces.fault.eq_ruptures.rupture]
db_auxiliary_field = spatialdata.spatialdb.UniformDB
db_auxiliary_field.description = Fault rupture for main fault
db_auxiliary_field.values = [initiation_time, final_slip_left_lateral, final_slip_opening]
db_auxiliary_field.data = [0.0*s, -2.0*m, 0.0*m]

[pylithapp.problem.interfaces.splay]
label = splay
label_value = 22
edge = splay_end
edge_value = 23

observers.observer.data_fields = [slip]

[pylithapp.problem.interfaces.splay.eq_ruptures.rupture]
db_auxiliary_field = spatialdata.spatialdb.UniformDB
db_auxiliary_field.description = Fault rupture for splay fault
db_auxiliary_field.values = [initiation_time, final_slip_left_lateral, final_slip_opening]
db_auxiliary_field.data = [0.0*s, -1.0*m, 0.0*m]


# ----------------------------------------------------------------------
# PETSc
# ----------------------------------------------------------------------
# Because the wedge is not constrained by any Dirichlet boundary conditions,
# we change the preconditioner for the displacement field to `ilu` to avoid a zero pivot.
[pylithapp.petsc]
fieldsplit_displacement_pc_type = ilu


# End of file
