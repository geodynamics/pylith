// -*- C++ -*-
//
// ----------------------------------------------------------------------
//
// Brad T. Aagaard, U.S. Geological Survey
// Charles A. Williams, GNS Science
// Matthew G. Knepley, University of Chicago
//
// This code was developed as part of the Computational Infrastructure
// for Geodynamics (http://geodynamics.org).
//
// Copyright (c) 2010 University of California, Davis
//
// See COPYING for license information.
//
// ----------------------------------------------------------------------
//

#if !defined(pylith_faults_liucosslipfn_hh)
#error "LiuCosSlipFn.icc can only be included from LiuCosSlipFn.hh"
#endif

#include <math.h> // USES sin(), cos(), M_PI

// Set spatial database for final slip.
inline
void
pylith::faults::LiuCosSlipFn::dbFinalSlip(spatialdata::spatialdb::SpatialDB* const db) {
  _dbFinalSlip = db;
} // dbFinalSlip

// Set spatial database for slip initiation time.
inline
void
pylith::faults::LiuCosSlipFn::dbSlipTime(spatialdata::spatialdb::SpatialDB* const db) {
  _dbSlipTime = db;
} // dbSlipTime

// Set spatial database for rise time.
inline
void
pylith::faults::LiuCosSlipFn::dbRiseTime(spatialdata::spatialdb::SpatialDB* const db) {
  _dbRiseTime = db;
} // dbRiseTime

// Compute slip using slip time function.
inline
double
pylith::faults::LiuCosSlipFn::_slipFn(const double t,
				      const double finalSlip,
				      const double riseTime) {
  double slip = 0.0;
  if (t > 0.0) {
    const double tau = riseTime * 1.525;
    const double tau1 = 0.13 * tau;
    const double tau2 = tau - tau1;
    const double Cn = 
      M_PI /  (1.4 * M_PI * tau1 + 1.2 * tau1 + 0.3 * M_PI * tau2);
    
    if (t <= tau1) {
      slip = 0.7*t - 0.7*tau1/M_PI*sin(M_PI*t/tau1) 
	- 0.6*tau1/(0.5*M_PI)*(cos(0.5*M_PI*t/tau1) - 1.0);
      slip *= Cn;
    } else if (t <= 2.0*tau1) {
      slip = 1.0*t - 0.7*tau1/M_PI*sin(M_PI*t/tau1) + 
	0.3*tau2/M_PI*sin(M_PI*(t-tau1)/tau2) + 
	1.2*tau1/M_PI - 0.3*tau1;
      slip *= Cn;
    } else if (t <= tau) {
      slip = 0.3*t + 0.3*tau2/M_PI*sin(M_PI*(t-tau1)/tau2) + 
	1.1*tau1 + 1.2*tau1/M_PI;
      slip *= Cn;	
    } else
      slip = 1.0;
  } // if
  slip *= finalSlip;

  return slip;
} // _slip


// End of file 
