// -*- C++ -*-
//
// ======================================================================
//
//                           Brad T. Aagaard
//                        U.S. Geological Survey
//
// {LicenseText}
//
// ======================================================================
//

#if !defined(pylith_topology_fieldbase_hh)
#error "FieldBase.icc must be included only from FieldBase.hh"
#else

// Set name of field.
inline
void
pylith::topology::FieldBase::name(const char* value) {
  _name = value;
}

// Get name of field.
inline
const char*
pylith::topology::FieldBase::name(void) const {
  return _name.c_str();
}

// Set vector field type
inline
void
pylith::topology::FieldBase::vectorFieldType(const VectorFieldEnum value) {
  _vecFieldType = value;
}

// Get vector field type
inline
pylith::topology::FieldBase::VectorFieldEnum
pylith::topology::FieldBase::vectorFieldType(void) const {
  return _vecFieldType;
}

// Set scale for dimensionalizing field.
inline
void
pylith::topology::FieldBase::scale(const double value) {
  _scale = value;
}

// Get scale for dimensionalizing field.
inline
double
pylith::topology::FieldBase::scale(void) const {
  return _scale;
}

// Set flag indicating whether it is okay to dimensionalize field.
inline
void
pylith::topology::FieldBase::addDimensionOkay(const bool value) {
  _dimensionsOkay = value;
}

// Set flag indicating whether it is okay to dimensionalize field.
inline
bool
pylith::topology::FieldBase::addDimensionOkay(void) const {
  return _dimensionsOkay;
}

#endif


// End of file
