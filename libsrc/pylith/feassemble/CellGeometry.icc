// -*- C++ -*-
//
// ======================================================================
//
// Brad T. Aagaard, U.S. Geological Survey
// Charles A. Williams, GNS Science
// Matthew G. Knepley, University of Chicago
//
// This code was developed as part of the Computational Infrastructure
// for Geodynamics (http://geodynamics.org).
//
// Copyright (c) 2010 University of California, Davis
//
// See COPYING for license information.
//
// ======================================================================
//

#if !defined(pylith_feassemble_cellgeometry_hh)
#error "CellGeometry.icc must be included only from CellGeometry.hh"
#else

#include <assert.h> // USES assert()

// Get dimension of coordinate space.
inline
int
pylith::feassemble::CellGeometry::spaceDim(void) const {
  return _spaceDim;
} // spaceDim

// Get coordinates of vertices in reference cell (dual basis).
inline
const pylith::double_array&
pylith::feassemble::CellGeometry::vertices(void) const {
  return _vertices;
}

// Compute orientation of cell at location.
inline
void
pylith::feassemble::CellGeometry::orientation(double_array* orientation,
					      const double_array& jacobian,
					      const double jacobianDet,
					      const double_array& upDir) const {
  if (0 != _orientFn)
    _orientFn(orientation, jacobian, jacobianDet, upDir);
} // orientation


#endif

// End of file
