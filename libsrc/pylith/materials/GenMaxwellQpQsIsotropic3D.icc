// -*- C++ -*-
//
// ----------------------------------------------------------------------
//
// Brad T. Aagaard, U.S. Geological Survey
// Charles A. Williams, GNS Science
// Matthew G. Knepley, University of Chicago
//
// This code was developed as part of the Computational Infrastructure
// for Geodynamics (http://geodynamics.org).
//
// Copyright (c) 2010-2011 University of California, Davis
//
// See COPYING for license information.
//
// ----------------------------------------------------------------------
//

#if !defined(pylith_materials_genmaxwellqpqsisotropic3d_hh)
#error "GenMaxwellQpQsIsotropic3D.icc can only be included from GenMaxwellQpQsIsotropic3D.hh"
#endif

#include <assert.h> // USES assert()
#include "pylith/utils/macrodefs.h" // USES CALL_MEMBER_FN

// Set current time step.
inline
void
pylith::materials::GenMaxwellQpQsIsotropic3D::timeStep(const double dt) {
  // Jacobian needs to be reformed if the time step size changes.
  if (_dt > 0.0 && dt != _dt)
    _needNewJacobian = true;
  _dt = dt;
} // timeStep

// Compute stress tensor from parameters.
inline
void
pylith::materials::GenMaxwellQpQsIsotropic3D::_calcStress(
					      double* const stress,
					      const int stressSize,
					      const double* properties,
					      const int numProperties,
					      const double* stateVars,
					      const int numStateVars,
					      const double* totalStrain,
					      const int strainSize,
					      const double* initialStress,
					      const int initialStressSize,
					      const double* initialStrain,
					      const int initialStrainSize,
					      const bool computeStateVars) {
  assert(0 != _calcStressFn);
  CALL_MEMBER_FN(*this, _calcStressFn)(stress, stressSize, 
				       properties, numProperties,
				       stateVars, numStateVars,
				       totalStrain, strainSize,
				       initialStress, initialStressSize,
				       initialStrain, initialStrainSize,
				       computeStateVars);
} // _calcStress

// Compute derivatives of elasticity matrix from parameters.
inline
void
pylith::materials::GenMaxwellQpQsIsotropic3D::_calcElasticConsts(
					      double* const elasticConsts,
					      const int numElasticConsts,
					      const double* properties,
					      const int numProperties,
					      const double* stateVars,
					      const int numStateVars,
					      const double* totalStrain,
					      const int strainSize,
					      const double* initialStress,
					      const int initialStressSize,
					      const double* initialStrain,
					      const int initialStrainSize) {
  assert(0 != _calcElasticConstsFn);
  CALL_MEMBER_FN(*this, _calcElasticConstsFn)(elasticConsts, numElasticConsts,
					      properties, numProperties,
					      stateVars, numStateVars,
					      totalStrain, strainSize,
					      initialStress, initialStressSize,
					      initialStrain, initialStrainSize);
} // _calcElasticConsts

// Update state variables after solve.
inline
void
pylith::materials::GenMaxwellQpQsIsotropic3D::_updateStateVars(
					     double* const stateVars,
					     const int numStateVars,
					     const double* properties,
					     const int numProperties,
					     const double* totalStrain,
					     const int strainSize,
					     const double* initialStress,
					     const int initialStressSize,
					     const double* initialStrain,
					     const int initialStrainSize) {
  assert(0 != _updateStateVarsFn);
  CALL_MEMBER_FN(*this, _updateStateVarsFn)(stateVars, numStateVars,
					    properties, numProperties,
					    totalStrain, strainSize,
					    initialStress, initialStressSize,
					    initialStrain, initialStrainSize);
} // _updateStateVars


// End of file 
