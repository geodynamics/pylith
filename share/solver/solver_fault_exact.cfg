# This file provides an exact solver, the analogue of LU factorization, for the
# saddle point system arising from problems with a fault. This shuold be used
# for experimental setup (physics, boundary conditions, etc.), validating
# against data, and verifying against other runs.

[pylithapp.timedependent.formulation]
# The split_fields flag must be specified, so that the PCFIELDSPLIT preconditioner
# can be used. The matrix_type must be set to aij since we lose symmetry when
# splitting.
#
split_fields = True
matrix_type = aij

[pylithapp.petsc]
# We use a full Schur complement factorization and solve the subsystems exactly,
# the displacements with LU, and the fault tractions with a very low tolerance
# since we do not explicitly form the Schur complement matrix.
#
#snes_view = true
#ksp_monitor_true_residual = true
fs_pc_type = fieldsplit
fs_pc_use_amat = true
fs_pc_fieldsplit_type = schur
fs_pc_fieldsplit_schur_factorization_type = full
fs_fieldsplit_displacement_ksp_type = preonly
fs_fieldsplit_displacement_pc_type = lu
fs_fieldsplit_lagrange_multipliers_pc_type = jacobi
fs_fieldsplit_lagrange_multipliers_ksp_type = gmres
fs_fieldsplit_lagrange_multipliers_ksp_rtol = 1.0e-11
#fs_fieldsplit_lagrange_multipliers_ksp_converged_reason = true
