MAIN PRIORITIES

0. Add in PETSc initialize/finalize using petsc2py.

  STATUS:

    Initial implementation. Still need to get PETSc options from
    command line. See comment in PyLithApp.py.

1. Debug reading mesh via pylithic

2. Bridge gap b/t Problem and Formulation (advance versus calcResidual)

3. Finish implementing ExplicitElasticity
   a. C++
   a. Python object
   b. bindings
   c. unit tests at C++ level
   d. unit tests at Python level

  Status: Started on a.

4.  Finish implementing Python Formulation
    (e.g., Explicit) with initialization of solid element families.
   c. Python object
   e. unit tests at Python level

5. Implement unit tests for MeshIO at Python level.
   a. write()/read()
   b. checkVals()

  STATUS: 

    Postponed. Easiest implementation requires semi-messy build
    on top of libtests/meshio classes and initializing/finalizing
    PETSc from Python. May be easier to include in higher-level unit
    test.

SECONDARY PRIORITIES

1. Implement MeshIOHDF5 & HDF5
   a. C++ objects
   b. unit tests at C++ level
   b. Python object (MeshIOHDF5)
   c. bindings
   d. unit tests at Python level

2. Implement MeshIOCubit
   a. C++ objects
   b. unit tests at C++ level
   b. Python object (MeshIOCubit)
   c. bindings
   d. unit tests at Python level

UNRESOLVED ISSUES

1. Integration of nemesis (pylithic.py as mpi/python application)

